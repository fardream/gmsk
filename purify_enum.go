// Automatically generated by github.com/fardream/gen-gmsk
// enum for MSKpurify_enum/Purify

package gmsk

// #include <mosek.h>
import "C"

import "strconv"

// Purify is MSKpurify_enum.
//
// Solution purification employed optimizer.
type Purify uint32

const (
	PURIFY_NONE        Purify = C.MSK_PURIFY_NONE        // The optimizer performs no solution purification.
	PURIFY_PRIMAL      Purify = C.MSK_PURIFY_PRIMAL      // The optimizer purifies the primal solution.
	PURIFY_DUAL        Purify = C.MSK_PURIFY_DUAL        // The optimizer purifies the dual solution.
	PURIFY_PRIMAL_DUAL Purify = C.MSK_PURIFY_PRIMAL_DUAL // The optimizer purifies both the primal and dual solution.
	PURIFY_AUTO        Purify = C.MSK_PURIFY_AUTO        // TBD
)

var _Purify_map = map[Purify]string{
	PURIFY_NONE:        "PURIFY_NONE",
	PURIFY_PRIMAL:      "PURIFY_PRIMAL",
	PURIFY_DUAL:        "PURIFY_DUAL",
	PURIFY_PRIMAL_DUAL: "PURIFY_PRIMAL_DUAL",
	PURIFY_AUTO:        "PURIFY_AUTO",
}

func (e Purify) String() string {
	if v, ok := _Purify_map[e]; ok {
		return v
	}
	return "Purify(" + strconv.FormatInt(int64(e), 10) + ")"
}
