// Automatically generated by github.com/fardream/gen-gmsk
// enum for MSKbasindtype_enum/BasIndType

package gmsk

// #include <mosek.h>
import "C"

import "strconv"

// BasIndType is MSKbasindtype_enum.
//
// Basis identification
type BasIndType uint32

const (
	BI_NEVER       BasIndType = C.MSK_BI_NEVER       // Never do basis identification.
	BI_ALWAYS      BasIndType = C.MSK_BI_ALWAYS      // Basis identification is always performed even if the interior-point optimizer terminates abnormally.
	BI_NO_ERROR    BasIndType = C.MSK_BI_NO_ERROR    // Basis identification is performed if the interior-point optimizer terminates without an error.
	BI_IF_FEASIBLE BasIndType = C.MSK_BI_IF_FEASIBLE // Basis identification is not performed if the interior-point optimizer terminates with a problem status saying that the problem is primal or dual infeasible.
	BI_RESERVERED  BasIndType = C.MSK_BI_RESERVERED  // Not currently in use.
)

var _BasIndType_map = map[BasIndType]string{
	BI_NEVER:       "BI_NEVER",
	BI_ALWAYS:      "BI_ALWAYS",
	BI_NO_ERROR:    "BI_NO_ERROR",
	BI_IF_FEASIBLE: "BI_IF_FEASIBLE",
	BI_RESERVERED:  "BI_RESERVERED",
}

func (e BasIndType) String() string {
	if v, ok := _BasIndType_map[e]; ok {
		return v
	}
	return "BasIndType(" + strconv.FormatInt(int64(e), 10) + ")"
}
