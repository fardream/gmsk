// Automatically generated by github.com/fardream/gen-gmsk
// enum for MSKdomaintype_enum/DomainType

package gmsk

import "strconv"

// DomainType is MSKdomaintype_enum.
//
// Cone types
type DomainType uint32

const (
	DOMAIN_R                    DomainType = 0  // R.
	DOMAIN_RZERO                DomainType = 1  // The zero vector.
	DOMAIN_RPLUS                DomainType = 2  // The positive orthant.
	DOMAIN_RMINUS               DomainType = 3  // The negative orthant.
	DOMAIN_QUADRATIC_CONE       DomainType = 4  // The quadratic cone.
	DOMAIN_RQUADRATIC_CONE      DomainType = 5  // The rotated quadratic cone.
	DOMAIN_PRIMAL_EXP_CONE      DomainType = 6  // The primal exponential cone.
	DOMAIN_DUAL_EXP_CONE        DomainType = 7  // The dual exponential cone.
	DOMAIN_PRIMAL_POWER_CONE    DomainType = 8  // The primal power cone.
	DOMAIN_DUAL_POWER_CONE      DomainType = 9  // The dual power cone.
	DOMAIN_PRIMAL_GEO_MEAN_CONE DomainType = 10 // The primal geometric mean cone.
	DOMAIN_DUAL_GEO_MEAN_CONE   DomainType = 11 // The dual geometric mean cone.
	DOMAIN_SVEC_PSD_CONE        DomainType = 12 // The vectorized positive semidefinite cone.
)

var _DomainType_map = map[DomainType]string{
	DOMAIN_R:                    "DOMAIN_R",
	DOMAIN_RZERO:                "DOMAIN_RZERO",
	DOMAIN_RPLUS:                "DOMAIN_RPLUS",
	DOMAIN_RMINUS:               "DOMAIN_RMINUS",
	DOMAIN_QUADRATIC_CONE:       "DOMAIN_QUADRATIC_CONE",
	DOMAIN_RQUADRATIC_CONE:      "DOMAIN_RQUADRATIC_CONE",
	DOMAIN_PRIMAL_EXP_CONE:      "DOMAIN_PRIMAL_EXP_CONE",
	DOMAIN_DUAL_EXP_CONE:        "DOMAIN_DUAL_EXP_CONE",
	DOMAIN_PRIMAL_POWER_CONE:    "DOMAIN_PRIMAL_POWER_CONE",
	DOMAIN_DUAL_POWER_CONE:      "DOMAIN_DUAL_POWER_CONE",
	DOMAIN_PRIMAL_GEO_MEAN_CONE: "DOMAIN_PRIMAL_GEO_MEAN_CONE",
	DOMAIN_DUAL_GEO_MEAN_CONE:   "DOMAIN_DUAL_GEO_MEAN_CONE",
	DOMAIN_SVEC_PSD_CONE:        "DOMAIN_SVEC_PSD_CONE",
}

func (e DomainType) String() string {
	if v, ok := _DomainType_map[e]; ok {
		return v
	}
	return "DomainType(" + strconv.FormatInt(int64(e), 10) + ")"
}
