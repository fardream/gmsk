// Automatically generated by github.com/fardream/gen-gmsk
// enum for MSKstakey_enum/StaKey

package gmsk

// #include <mosek.h>
import "C"

import "strconv"

// StaKey is MSKstakey_enum.
//
// Status keys
type StaKey uint32

const (
	SK_UNK    StaKey = C.MSK_SK_UNK    // The status for the constraint or variable is unknown.
	SK_BAS    StaKey = C.MSK_SK_BAS    // The constraint or variable is in the basis.
	SK_SUPBAS StaKey = C.MSK_SK_SUPBAS // The constraint or variable is super basic.
	SK_LOW    StaKey = C.MSK_SK_LOW    // The constraint or variable is at its lower bound.
	SK_UPR    StaKey = C.MSK_SK_UPR    // The constraint or variable is at its upper bound.
	SK_FIX    StaKey = C.MSK_SK_FIX    // The constraint or variable is fixed.
	SK_INF    StaKey = C.MSK_SK_INF    // The constraint or variable is infeasible in the bounds.
)

var _StaKey_map = map[StaKey]string{
	SK_UNK:    "SK_UNK",
	SK_BAS:    "SK_BAS",
	SK_SUPBAS: "SK_SUPBAS",
	SK_LOW:    "SK_LOW",
	SK_UPR:    "SK_UPR",
	SK_FIX:    "SK_FIX",
	SK_INF:    "SK_INF",
}

func (e StaKey) String() string {
	if v, ok := _StaKey_map[e]; ok {
		return v
	}
	return "StaKey(" + strconv.FormatInt(int64(e), 10) + ")"
}
