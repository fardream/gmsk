// Automatically generated by github.com/fardream/gen-gmsk
// enum for MSKpresolvemode_enum/PresolveMode

package gmsk

// #include <mosek.h>
import "C"

import "strconv"

// PresolveMode is MSKpresolvemode_enum.
//
// Presolve method.
type PresolveMode uint32

const (
	PRESOLVE_MODE_OFF  PresolveMode = C.MSK_PRESOLVE_MODE_OFF  // The problem is not presolved before it is optimized.
	PRESOLVE_MODE_ON   PresolveMode = C.MSK_PRESOLVE_MODE_ON   // The problem is presolved before it is optimized.
	PRESOLVE_MODE_FREE PresolveMode = C.MSK_PRESOLVE_MODE_FREE // It is decided automatically whether to presolve before the problem is optimized.
)

var _PresolveMode_map = map[PresolveMode]string{
	PRESOLVE_MODE_OFF:  "PRESOLVE_MODE_OFF",
	PRESOLVE_MODE_ON:   "PRESOLVE_MODE_ON",
	PRESOLVE_MODE_FREE: "PRESOLVE_MODE_FREE",
}

func (e PresolveMode) String() string {
	if v, ok := _PresolveMode_map[e]; ok {
		return v
	}
	return "PresolveMode(" + strconv.FormatInt(int64(e), 10) + ")"
}
