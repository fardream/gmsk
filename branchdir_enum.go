// Automatically generated by github.com/fardream/gen-gmsk
// enum for MSKbranchdir_enum/BranchDir

package gmsk

// #include <mosek.h>
import "C"

import "strconv"

// BranchDir is MSKbranchdir_enum.
//
// Specifies the branching direction.
type BranchDir uint32

const (
	BRANCH_DIR_FREE       BranchDir = C.MSK_BRANCH_DIR_FREE       // The mixed-integer optimizer decides which branch to choose.
	BRANCH_DIR_UP         BranchDir = C.MSK_BRANCH_DIR_UP         // The mixed-integer optimizer always chooses the up branch first.
	BRANCH_DIR_DOWN       BranchDir = C.MSK_BRANCH_DIR_DOWN       // The mixed-integer optimizer always chooses the down branch first.
	BRANCH_DIR_NEAR       BranchDir = C.MSK_BRANCH_DIR_NEAR       // Branch in direction nearest to selected fractional variable.
	BRANCH_DIR_FAR        BranchDir = C.MSK_BRANCH_DIR_FAR        // Branch in direction farthest from selected fractional variable.
	BRANCH_DIR_ROOT_LP    BranchDir = C.MSK_BRANCH_DIR_ROOT_LP    // Chose direction based on root lp value of selected variable.
	BRANCH_DIR_GUIDED     BranchDir = C.MSK_BRANCH_DIR_GUIDED     // Branch in direction of current incumbent.
	BRANCH_DIR_PSEUDOCOST BranchDir = C.MSK_BRANCH_DIR_PSEUDOCOST // Branch based on the pseudocost of the variable.
)

var _BranchDir_map = map[BranchDir]string{
	BRANCH_DIR_FREE:       "BRANCH_DIR_FREE",
	BRANCH_DIR_UP:         "BRANCH_DIR_UP",
	BRANCH_DIR_DOWN:       "BRANCH_DIR_DOWN",
	BRANCH_DIR_NEAR:       "BRANCH_DIR_NEAR",
	BRANCH_DIR_FAR:        "BRANCH_DIR_FAR",
	BRANCH_DIR_ROOT_LP:    "BRANCH_DIR_ROOT_LP",
	BRANCH_DIR_GUIDED:     "BRANCH_DIR_GUIDED",
	BRANCH_DIR_PSEUDOCOST: "BRANCH_DIR_PSEUDOCOST",
}

func (e BranchDir) String() string {
	if v, ok := _BranchDir_map[e]; ok {
		return v
	}
	return "BranchDir(" + strconv.FormatInt(int64(e), 10) + ")"
}
