// Automatically generated by github.com/fardream/gen-gmsk
// function deinitions

package gmsk

// #include <stdlib.h> // for C.free
// #include <mosek.h>
import "C"

import (
	"unsafe"

	"github.com/fardream/gmsk/res"
)

// GetAccafeidxList is wrapping [MSK_getaccafeidxlist]
//
// [MSK_getaccafeidxlist] has following parameters
//   - task: MSKtask_t
//   - accidx: MSKint64t
//   - afeidxlist: MSKint64t *
//
// [MSK_getaccafeidxlist]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccafeidxList(
	accidx int64,
	afeidxlist *int64,
) res.Code {
	return res.Code(
		C.MSK_getaccafeidxlist(
			task.task,
			C.MSKint64t(accidx),
			(*C.MSKint64t)(afeidxlist),
		),
	)
}

// GetAccb is wrapping [MSK_getaccb]
//
// [MSK_getaccb] has following parameters
//   - task: MSKtask_t
//   - accidx: MSKint64t
//   - b: MSKrealt *
//
// [MSK_getaccb]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccb(
	accidx int64,
	b *float64,
) res.Code {
	return res.Code(
		C.MSK_getaccb(
			task.task,
			C.MSKint64t(accidx),
			(*C.MSKrealt)(b),
		),
	)
}

// GetAccbarfblocktriplet is wrapping [MSK_getaccbarfblocktriplet]
//
// [MSK_getaccbarfblocktriplet] has following parameters
//   - task: MSKtask_t
//   - maxnumtrip: MSKint64t
//   - numtrip: MSKint64t *
//   - acc_afe: MSKint64t *
//   - bar_var: MSKint32t *
//   - blk_row: MSKint32t *
//   - blk_col: MSKint32t *
//   - blk_val: MSKrealt *
//
// [MSK_getaccbarfblocktriplet]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccbarfblocktriplet(
	maxnumtrip int64,
	numtrip *int64,
	acc_afe *int64,
	bar_var *int32,
	blk_row *int32,
	blk_col *int32,
	blk_val *float64,
) res.Code {
	return res.Code(
		C.MSK_getaccbarfblocktriplet(
			task.task,
			C.MSKint64t(maxnumtrip),
			(*C.MSKint64t)(numtrip),
			(*C.MSKint64t)(acc_afe),
			(*C.MSKint32t)(bar_var),
			(*C.MSKint32t)(blk_row),
			(*C.MSKint32t)(blk_col),
			(*C.MSKrealt)(blk_val),
		),
	)
}

// GetAccbarfnumblocktriplets is wrapping [MSK_getaccbarfnumblocktriplets]
//
// [MSK_getaccbarfnumblocktriplets] has following parameters
//   - task: MSKtask_t
//   - numtrip: MSKint64t *
//
// [MSK_getaccbarfnumblocktriplets]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccbarfnumblocktriplets(
	numtrip *int64,
) res.Code {
	return res.Code(
		C.MSK_getaccbarfnumblocktriplets(
			task.task,
			(*C.MSKint64t)(numtrip),
		),
	)
}

// GetAccdomain is wrapping [MSK_getaccdomain]
//
// [MSK_getaccdomain] has following parameters
//   - task: MSKtask_t
//   - accidx: MSKint64t
//   - domidx: MSKint64t *
//
// [MSK_getaccdomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccdomain(
	accidx int64,
	domidx *int64,
) res.Code {
	return res.Code(
		C.MSK_getaccdomain(
			task.task,
			C.MSKint64t(accidx),
			(*C.MSKint64t)(domidx),
		),
	)
}

// GetAccdoty is wrapping [MSK_getaccdoty]
//
// [MSK_getaccdoty] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - accidx: MSKint64t
//   - doty: MSKrealt *
//
// [MSK_getaccdoty]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccdoty(
	whichsol SolType,
	accidx int64,
	doty *float64,
) res.Code {
	return res.Code(
		C.MSK_getaccdoty(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint64t(accidx),
			(*C.MSKrealt)(doty),
		),
	)
}

// GetAccdotys is wrapping [MSK_getaccdotys]
//
// [MSK_getaccdotys] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - doty: MSKrealt *
//
// [MSK_getaccdotys]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccdotys(
	whichsol SolType,
	doty *float64,
) res.Code {
	return res.Code(
		C.MSK_getaccdotys(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(doty),
		),
	)
}

// GetAccfnumnz is wrapping [MSK_getaccfnumnz]
//
// [MSK_getaccfnumnz] has following parameters
//   - task: MSKtask_t
//   - accfnnz: MSKint64t *
//
// [MSK_getaccfnumnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccfnumnz(
	accfnnz *int64,
) res.Code {
	return res.Code(
		C.MSK_getaccfnumnz(
			task.task,
			(*C.MSKint64t)(accfnnz),
		),
	)
}

// GetAccftrip is wrapping [MSK_getaccftrip]
//
// [MSK_getaccftrip] has following parameters
//   - task: MSKtask_t
//   - frow: MSKint64t *
//   - fcol: MSKint32t *
//   - fval: MSKrealt *
//
// [MSK_getaccftrip]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccftrip(
	frow *int64,
	fcol *int32,
	fval *float64,
) res.Code {
	return res.Code(
		C.MSK_getaccftrip(
			task.task,
			(*C.MSKint64t)(frow),
			(*C.MSKint32t)(fcol),
			(*C.MSKrealt)(fval),
		),
	)
}

// GetAccgvector is wrapping [MSK_getaccgvector]
//
// [MSK_getaccgvector] has following parameters
//   - task: MSKtask_t
//   - g: MSKrealt *
//
// [MSK_getaccgvector]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccgvector(
	g *float64,
) res.Code {
	return res.Code(
		C.MSK_getaccgvector(
			task.task,
			(*C.MSKrealt)(g),
		),
	)
}

// GetAccn is wrapping [MSK_getaccn]
//
// [MSK_getaccn] has following parameters
//   - task: MSKtask_t
//   - accidx: MSKint64t
//   - n: MSKint64t *
//
// [MSK_getaccn]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccn(
	accidx int64,
	n *int64,
) res.Code {
	return res.Code(
		C.MSK_getaccn(
			task.task,
			C.MSKint64t(accidx),
			(*C.MSKint64t)(n),
		),
	)
}

// GetAccName is wrapping [MSK_getaccname]
//
// [MSK_getaccname] has following parameters
//   - task: MSKtask_t
//   - accidx: MSKint64t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getaccname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccName(
	accidx int64,
	sizename int32,
	name *byte,
) res.Code {
	return res.Code(
		C.MSK_getaccname(
			task.task,
			C.MSKint64t(accidx),
			C.MSKint32t(sizename),
			(*C.char)(unsafe.Pointer(name)),
		),
	)
}

// GetAccnamelen is wrapping [MSK_getaccnamelen]
//
// [MSK_getaccnamelen] has following parameters
//   - task: MSKtask_t
//   - accidx: MSKint64t
//   - len: MSKint32t *
//
// [MSK_getaccnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccnamelen(
	accidx int64,
	len *int32,
) res.Code {
	return res.Code(
		C.MSK_getaccnamelen(
			task.task,
			C.MSKint64t(accidx),
			(*C.MSKint32t)(len),
		),
	)
}

// GetAccntot is wrapping [MSK_getaccntot]
//
// [MSK_getaccntot] has following parameters
//   - task: MSKtask_t
//   - n: MSKint64t *
//
// [MSK_getaccntot]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccntot(
	n *int64,
) res.Code {
	return res.Code(
		C.MSK_getaccntot(
			task.task,
			(*C.MSKint64t)(n),
		),
	)
}

// GetAccs is wrapping [MSK_getaccs]
//
// [MSK_getaccs] has following parameters
//   - task: MSKtask_t
//   - domidxlist: MSKint64t *
//   - afeidxlist: MSKint64t *
//   - b: MSKrealt *
//
// [MSK_getaccs]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAccs(
	domidxlist *int64,
	afeidxlist *int64,
	b *float64,
) res.Code {
	return res.Code(
		C.MSK_getaccs(
			task.task,
			(*C.MSKint64t)(domidxlist),
			(*C.MSKint64t)(afeidxlist),
			(*C.MSKrealt)(b),
		),
	)
}

// GetAcol is wrapping [MSK_getacol]
//
// [MSK_getacol] has following parameters
//   - task: MSKtask_t
//   - j: MSKint32t
//   - nzj: MSKint32t *
//   - subj: MSKint32t *
//   - valj: MSKrealt *
//
// [MSK_getacol]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAcol(
	j int32,
	nzj *int32,
	subj *int32,
	valj *float64,
) res.Code {
	return res.Code(
		C.MSK_getacol(
			task.task,
			C.MSKint32t(j),
			(*C.MSKint32t)(nzj),
			(*C.MSKint32t)(subj),
			(*C.MSKrealt)(valj),
		),
	)
}

// GetAcolnumnz is wrapping [MSK_getacolnumnz]
//
// [MSK_getacolnumnz] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - nzj: MSKint32t *
//
// [MSK_getacolnumnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAcolnumnz(
	i int32,
	nzj *int32,
) res.Code {
	return res.Code(
		C.MSK_getacolnumnz(
			task.task,
			C.MSKint32t(i),
			(*C.MSKint32t)(nzj),
		),
	)
}

// GetAcolSlice is wrapping [MSK_getacolslice]
//
// [MSK_getacolslice] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - maxnumnz: MSKint32t
//   - ptrb: MSKint32t *
//   - ptre: MSKint32t *
//   - sub: MSKint32t *
//   - val: MSKrealt *
//
// [MSK_getacolslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAcolSlice(
	first int32,
	last int32,
	maxnumnz int32,
	ptrb *int32,
	ptre *int32,
	sub *int32,
	val *float64,
) res.Code {
	return res.Code(
		C.MSK_getacolslice(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			C.MSKint32t(maxnumnz),
			(*C.MSKint32t)(ptrb),
			(*C.MSKint32t)(ptre),
			(*C.MSKint32t)(sub),
			(*C.MSKrealt)(val),
		),
	)
}

// GetAcolslice64 is wrapping [MSK_getacolslice64]
//
// [MSK_getacolslice64] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - maxnumnz: MSKint64t
//   - ptrb: MSKint64t *
//   - ptre: MSKint64t *
//   - sub: MSKint32t *
//   - val: MSKrealt *
//
// [MSK_getacolslice64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAcolslice64(
	first int32,
	last int32,
	maxnumnz int64,
	ptrb *int64,
	ptre *int64,
	sub *int32,
	val *float64,
) res.Code {
	return res.Code(
		C.MSK_getacolslice64(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			C.MSKint64t(maxnumnz),
			(*C.MSKint64t)(ptrb),
			(*C.MSKint64t)(ptre),
			(*C.MSKint32t)(sub),
			(*C.MSKrealt)(val),
		),
	)
}

// GetAcolslicenumnz is wrapping [MSK_getacolslicenumnz]
//
// [MSK_getacolslicenumnz] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - numnz: MSKint32t *
//
// [MSK_getacolslicenumnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAcolslicenumnz(
	first int32,
	last int32,
	numnz *int32,
) res.Code {
	return res.Code(
		C.MSK_getacolslicenumnz(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKint32t)(numnz),
		),
	)
}

// GetAcolslicenumnz64 is wrapping [MSK_getacolslicenumnz64]
//
// [MSK_getacolslicenumnz64] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - numnz: MSKint64t *
//
// [MSK_getacolslicenumnz64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAcolslicenumnz64(
	first int32,
	last int32,
	numnz *int64,
) res.Code {
	return res.Code(
		C.MSK_getacolslicenumnz64(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKint64t)(numnz),
		),
	)
}

// GetAcolslicetrip is wrapping [MSK_getacolslicetrip]
//
// [MSK_getacolslicetrip] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - maxnumnz: MSKint64t
//   - subi: MSKint32t *
//   - subj: MSKint32t *
//   - val: MSKrealt *
//
// [MSK_getacolslicetrip]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAcolslicetrip(
	first int32,
	last int32,
	maxnumnz int64,
	subi *int32,
	subj *int32,
	val *float64,
) res.Code {
	return res.Code(
		C.MSK_getacolslicetrip(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			C.MSKint64t(maxnumnz),
			(*C.MSKint32t)(subi),
			(*C.MSKint32t)(subj),
			(*C.MSKrealt)(val),
		),
	)
}

// GetAfebarfblocktriplet is wrapping [MSK_getafebarfblocktriplet]
//
// [MSK_getafebarfblocktriplet] has following parameters
//   - task: MSKtask_t
//   - maxnumtrip: MSKint64t
//   - numtrip: MSKint64t *
//   - afeidx: MSKint64t *
//   - barvaridx: MSKint32t *
//   - subk: MSKint32t *
//   - subl: MSKint32t *
//   - valkl: MSKrealt *
//
// [MSK_getafebarfblocktriplet]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAfebarfblocktriplet(
	maxnumtrip int64,
	numtrip *int64,
	afeidx *int64,
	barvaridx *int32,
	subk *int32,
	subl *int32,
	valkl *float64,
) res.Code {
	return res.Code(
		C.MSK_getafebarfblocktriplet(
			task.task,
			C.MSKint64t(maxnumtrip),
			(*C.MSKint64t)(numtrip),
			(*C.MSKint64t)(afeidx),
			(*C.MSKint32t)(barvaridx),
			(*C.MSKint32t)(subk),
			(*C.MSKint32t)(subl),
			(*C.MSKrealt)(valkl),
		),
	)
}

// GetAfebarfnumblocktriplets is wrapping [MSK_getafebarfnumblocktriplets]
//
// [MSK_getafebarfnumblocktriplets] has following parameters
//   - task: MSKtask_t
//   - numtrip: MSKint64t *
//
// [MSK_getafebarfnumblocktriplets]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAfebarfnumblocktriplets(
	numtrip *int64,
) res.Code {
	return res.Code(
		C.MSK_getafebarfnumblocktriplets(
			task.task,
			(*C.MSKint64t)(numtrip),
		),
	)
}

// GetAfebarfnumrowentries is wrapping [MSK_getafebarfnumrowentries]
//
// [MSK_getafebarfnumrowentries] has following parameters
//   - task: MSKtask_t
//   - afeidx: MSKint64t
//   - numentr: MSKint32t *
//
// [MSK_getafebarfnumrowentries]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAfebarfnumrowentries(
	afeidx int64,
	numentr *int32,
) res.Code {
	return res.Code(
		C.MSK_getafebarfnumrowentries(
			task.task,
			C.MSKint64t(afeidx),
			(*C.MSKint32t)(numentr),
		),
	)
}

// GetAfebarfrow is wrapping [MSK_getafebarfrow]
//
// [MSK_getafebarfrow] has following parameters
//   - task: MSKtask_t
//   - afeidx: MSKint64t
//   - barvaridx: MSKint32t *
//   - ptrterm: MSKint64t *
//   - numterm: MSKint64t *
//   - termidx: MSKint64t *
//   - termweight: MSKrealt *
//
// [MSK_getafebarfrow]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAfebarfrow(
	afeidx int64,
	barvaridx *int32,
	ptrterm *int64,
	numterm *int64,
	termidx *int64,
	termweight *float64,
) res.Code {
	return res.Code(
		C.MSK_getafebarfrow(
			task.task,
			C.MSKint64t(afeidx),
			(*C.MSKint32t)(barvaridx),
			(*C.MSKint64t)(ptrterm),
			(*C.MSKint64t)(numterm),
			(*C.MSKint64t)(termidx),
			(*C.MSKrealt)(termweight),
		),
	)
}

// GetAfebarfrowinfo is wrapping [MSK_getafebarfrowinfo]
//
// [MSK_getafebarfrowinfo] has following parameters
//   - task: MSKtask_t
//   - afeidx: MSKint64t
//   - numentr: MSKint32t *
//   - numterm: MSKint64t *
//
// [MSK_getafebarfrowinfo]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAfebarfrowinfo(
	afeidx int64,
	numentr *int32,
	numterm *int64,
) res.Code {
	return res.Code(
		C.MSK_getafebarfrowinfo(
			task.task,
			C.MSKint64t(afeidx),
			(*C.MSKint32t)(numentr),
			(*C.MSKint64t)(numterm),
		),
	)
}

// GetAfefnumnz is wrapping [MSK_getafefnumnz]
//
// [MSK_getafefnumnz] has following parameters
//   - task: MSKtask_t
//   - numnz: MSKint64t *
//
// [MSK_getafefnumnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAfefnumnz(
	numnz *int64,
) res.Code {
	return res.Code(
		C.MSK_getafefnumnz(
			task.task,
			(*C.MSKint64t)(numnz),
		),
	)
}

// GetAfefrow is wrapping [MSK_getafefrow]
//
// [MSK_getafefrow] has following parameters
//   - task: MSKtask_t
//   - afeidx: MSKint64t
//   - numnz: MSKint32t *
//   - varidx: MSKint32t *
//   - val: MSKrealt *
//
// [MSK_getafefrow]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAfefrow(
	afeidx int64,
	numnz *int32,
	varidx *int32,
	val *float64,
) res.Code {
	return res.Code(
		C.MSK_getafefrow(
			task.task,
			C.MSKint64t(afeidx),
			(*C.MSKint32t)(numnz),
			(*C.MSKint32t)(varidx),
			(*C.MSKrealt)(val),
		),
	)
}

// GetAfefrownumnz is wrapping [MSK_getafefrownumnz]
//
// [MSK_getafefrownumnz] has following parameters
//   - task: MSKtask_t
//   - afeidx: MSKint64t
//   - numnz: MSKint32t *
//
// [MSK_getafefrownumnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAfefrownumnz(
	afeidx int64,
	numnz *int32,
) res.Code {
	return res.Code(
		C.MSK_getafefrownumnz(
			task.task,
			C.MSKint64t(afeidx),
			(*C.MSKint32t)(numnz),
		),
	)
}

// GetAfeftrip is wrapping [MSK_getafeftrip]
//
// [MSK_getafeftrip] has following parameters
//   - task: MSKtask_t
//   - afeidx: MSKint64t *
//   - varidx: MSKint32t *
//   - val: MSKrealt *
//
// [MSK_getafeftrip]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAfeftrip(
	afeidx *int64,
	varidx *int32,
	val *float64,
) res.Code {
	return res.Code(
		C.MSK_getafeftrip(
			task.task,
			(*C.MSKint64t)(afeidx),
			(*C.MSKint32t)(varidx),
			(*C.MSKrealt)(val),
		),
	)
}

// GetAfeg is wrapping [MSK_getafeg]
//
// [MSK_getafeg] has following parameters
//   - task: MSKtask_t
//   - afeidx: MSKint64t
//   - g: MSKrealt *
//
// [MSK_getafeg]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAfeg(
	afeidx int64,
	g *float64,
) res.Code {
	return res.Code(
		C.MSK_getafeg(
			task.task,
			C.MSKint64t(afeidx),
			(*C.MSKrealt)(g),
		),
	)
}

// GetAfegSlice is wrapping [MSK_getafegslice]
//
// [MSK_getafegslice] has following parameters
//   - task: MSKtask_t
//   - first: MSKint64t
//   - last: MSKint64t
//   - g: MSKrealt *
//
// [MSK_getafegslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAfegSlice(
	first int64,
	last int64,
	g *float64,
) res.Code {
	return res.Code(
		C.MSK_getafegslice(
			task.task,
			C.MSKint64t(first),
			C.MSKint64t(last),
			(*C.MSKrealt)(g),
		),
	)
}

// GetAij is wrapping [MSK_getaij]
//
// [MSK_getaij] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - j: MSKint32t
//   - aij: MSKrealt *
//
// [MSK_getaij]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAij(
	i int32,
	j int32,
	aij *float64,
) res.Code {
	return res.Code(
		C.MSK_getaij(
			task.task,
			C.MSKint32t(i),
			C.MSKint32t(j),
			(*C.MSKrealt)(aij),
		),
	)
}

// GetApiecenumnz is wrapping [MSK_getapiecenumnz]
//
// [MSK_getapiecenumnz] has following parameters
//   - task: MSKtask_t
//   - firsti: MSKint32t
//   - lasti: MSKint32t
//   - firstj: MSKint32t
//   - lastj: MSKint32t
//   - numnz: MSKint32t *
//
// [MSK_getapiecenumnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetApiecenumnz(
	firsti int32,
	lasti int32,
	firstj int32,
	lastj int32,
	numnz *int32,
) res.Code {
	return res.Code(
		C.MSK_getapiecenumnz(
			task.task,
			C.MSKint32t(firsti),
			C.MSKint32t(lasti),
			C.MSKint32t(firstj),
			C.MSKint32t(lastj),
			(*C.MSKint32t)(numnz),
		),
	)
}

// GetArow is wrapping [MSK_getarow]
//
// [MSK_getarow] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - nzi: MSKint32t *
//   - subi: MSKint32t *
//   - vali: MSKrealt *
//
// [MSK_getarow]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetArow(
	i int32,
	nzi *int32,
	subi *int32,
	vali *float64,
) res.Code {
	return res.Code(
		C.MSK_getarow(
			task.task,
			C.MSKint32t(i),
			(*C.MSKint32t)(nzi),
			(*C.MSKint32t)(subi),
			(*C.MSKrealt)(vali),
		),
	)
}

// GetArownumnz is wrapping [MSK_getarownumnz]
//
// [MSK_getarownumnz] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - nzi: MSKint32t *
//
// [MSK_getarownumnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetArownumnz(
	i int32,
	nzi *int32,
) res.Code {
	return res.Code(
		C.MSK_getarownumnz(
			task.task,
			C.MSKint32t(i),
			(*C.MSKint32t)(nzi),
		),
	)
}

// GetArowSlice is wrapping [MSK_getarowslice]
//
// [MSK_getarowslice] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - maxnumnz: MSKint32t
//   - ptrb: MSKint32t *
//   - ptre: MSKint32t *
//   - sub: MSKint32t *
//   - val: MSKrealt *
//
// [MSK_getarowslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetArowSlice(
	first int32,
	last int32,
	maxnumnz int32,
	ptrb *int32,
	ptre *int32,
	sub *int32,
	val *float64,
) res.Code {
	return res.Code(
		C.MSK_getarowslice(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			C.MSKint32t(maxnumnz),
			(*C.MSKint32t)(ptrb),
			(*C.MSKint32t)(ptre),
			(*C.MSKint32t)(sub),
			(*C.MSKrealt)(val),
		),
	)
}

// GetArowslice64 is wrapping [MSK_getarowslice64]
//
// [MSK_getarowslice64] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - maxnumnz: MSKint64t
//   - ptrb: MSKint64t *
//   - ptre: MSKint64t *
//   - sub: MSKint32t *
//   - val: MSKrealt *
//
// [MSK_getarowslice64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetArowslice64(
	first int32,
	last int32,
	maxnumnz int64,
	ptrb *int64,
	ptre *int64,
	sub *int32,
	val *float64,
) res.Code {
	return res.Code(
		C.MSK_getarowslice64(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			C.MSKint64t(maxnumnz),
			(*C.MSKint64t)(ptrb),
			(*C.MSKint64t)(ptre),
			(*C.MSKint32t)(sub),
			(*C.MSKrealt)(val),
		),
	)
}

// GetArowslicenumnz is wrapping [MSK_getarowslicenumnz]
//
// [MSK_getarowslicenumnz] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - numnz: MSKint32t *
//
// [MSK_getarowslicenumnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetArowslicenumnz(
	first int32,
	last int32,
	numnz *int32,
) res.Code {
	return res.Code(
		C.MSK_getarowslicenumnz(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKint32t)(numnz),
		),
	)
}

// GetArowslicenumnz64 is wrapping [MSK_getarowslicenumnz64]
//
// [MSK_getarowslicenumnz64] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - numnz: MSKint64t *
//
// [MSK_getarowslicenumnz64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetArowslicenumnz64(
	first int32,
	last int32,
	numnz *int64,
) res.Code {
	return res.Code(
		C.MSK_getarowslicenumnz64(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKint64t)(numnz),
		),
	)
}

// GetArowslicetrip is wrapping [MSK_getarowslicetrip]
//
// [MSK_getarowslicetrip] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - maxnumnz: MSKint64t
//   - subi: MSKint32t *
//   - subj: MSKint32t *
//   - val: MSKrealt *
//
// [MSK_getarowslicetrip]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetArowslicetrip(
	first int32,
	last int32,
	maxnumnz int64,
	subi *int32,
	subj *int32,
	val *float64,
) res.Code {
	return res.Code(
		C.MSK_getarowslicetrip(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			C.MSKint64t(maxnumnz),
			(*C.MSKint32t)(subi),
			(*C.MSKint32t)(subj),
			(*C.MSKrealt)(val),
		),
	)
}

// GetAtrip is wrapping [MSK_getatrip]
//
// [MSK_getatrip] has following parameters
//   - task: MSKtask_t
//   - maxnumnz: MSKint64t
//   - subi: MSKint32t *
//   - subj: MSKint32t *
//   - val: MSKrealt *
//
// [MSK_getatrip]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAtrip(
	maxnumnz int64,
	subi *int32,
	subj *int32,
	val *float64,
) res.Code {
	return res.Code(
		C.MSK_getatrip(
			task.task,
			C.MSKint64t(maxnumnz),
			(*C.MSKint32t)(subi),
			(*C.MSKint32t)(subj),
			(*C.MSKrealt)(val),
		),
	)
}

// GetAtruncatetol is wrapping [MSK_getatruncatetol]
//
// [MSK_getatruncatetol] has following parameters
//   - task: MSKtask_t
//   - tolzero: MSKrealt *
//
// [MSK_getatruncatetol]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetAtruncatetol(
	tolzero *float64,
) res.Code {
	return res.Code(
		C.MSK_getatruncatetol(
			task.task,
			(*C.MSKrealt)(tolzero),
		),
	)
}

// GetBarablocktriplet is wrapping [MSK_getbarablocktriplet]
//
// [MSK_getbarablocktriplet] has following parameters
//   - task: MSKtask_t
//   - maxnum: MSKint64t
//   - num: MSKint64t *
//   - subi: MSKint32t *
//   - subj: MSKint32t *
//   - subk: MSKint32t *
//   - subl: MSKint32t *
//   - valijkl: MSKrealt *
//
// [MSK_getbarablocktriplet]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarablocktriplet(
	maxnum int64,
	num *int64,
	subi *int32,
	subj *int32,
	subk *int32,
	subl *int32,
	valijkl *float64,
) res.Code {
	return res.Code(
		C.MSK_getbarablocktriplet(
			task.task,
			C.MSKint64t(maxnum),
			(*C.MSKint64t)(num),
			(*C.MSKint32t)(subi),
			(*C.MSKint32t)(subj),
			(*C.MSKint32t)(subk),
			(*C.MSKint32t)(subl),
			(*C.MSKrealt)(valijkl),
		),
	)
}

// GetBaraidx is wrapping [MSK_getbaraidx]
//
// [MSK_getbaraidx] has following parameters
//   - task: MSKtask_t
//   - idx: MSKint64t
//   - maxnum: MSKint64t
//   - i: MSKint32t *
//   - j: MSKint32t *
//   - num: MSKint64t *
//   - sub: MSKint64t *
//   - weights: MSKrealt *
//
// [MSK_getbaraidx]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBaraidx(
	idx int64,
	maxnum int64,
	i *int32,
	j *int32,
	num *int64,
	sub *int64,
	weights *float64,
) res.Code {
	return res.Code(
		C.MSK_getbaraidx(
			task.task,
			C.MSKint64t(idx),
			C.MSKint64t(maxnum),
			(*C.MSKint32t)(i),
			(*C.MSKint32t)(j),
			(*C.MSKint64t)(num),
			(*C.MSKint64t)(sub),
			(*C.MSKrealt)(weights),
		),
	)
}

// GetBaraidxij is wrapping [MSK_getbaraidxij]
//
// [MSK_getbaraidxij] has following parameters
//   - task: MSKtask_t
//   - idx: MSKint64t
//   - i: MSKint32t *
//   - j: MSKint32t *
//
// [MSK_getbaraidxij]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBaraidxij(
	idx int64,
	i *int32,
	j *int32,
) res.Code {
	return res.Code(
		C.MSK_getbaraidxij(
			task.task,
			C.MSKint64t(idx),
			(*C.MSKint32t)(i),
			(*C.MSKint32t)(j),
		),
	)
}

// GetBaraidxinfo is wrapping [MSK_getbaraidxinfo]
//
// [MSK_getbaraidxinfo] has following parameters
//   - task: MSKtask_t
//   - idx: MSKint64t
//   - num: MSKint64t *
//
// [MSK_getbaraidxinfo]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBaraidxinfo(
	idx int64,
	num *int64,
) res.Code {
	return res.Code(
		C.MSK_getbaraidxinfo(
			task.task,
			C.MSKint64t(idx),
			(*C.MSKint64t)(num),
		),
	)
}

// GetBarasparsity is wrapping [MSK_getbarasparsity]
//
// [MSK_getbarasparsity] has following parameters
//   - task: MSKtask_t
//   - maxnumnz: MSKint64t
//   - numnz: MSKint64t *
//   - idxij: MSKint64t *
//
// [MSK_getbarasparsity]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarasparsity(
	maxnumnz int64,
	numnz *int64,
	idxij *int64,
) res.Code {
	return res.Code(
		C.MSK_getbarasparsity(
			task.task,
			C.MSKint64t(maxnumnz),
			(*C.MSKint64t)(numnz),
			(*C.MSKint64t)(idxij),
		),
	)
}

// GetBarcblocktriplet is wrapping [MSK_getbarcblocktriplet]
//
// [MSK_getbarcblocktriplet] has following parameters
//   - task: MSKtask_t
//   - maxnum: MSKint64t
//   - num: MSKint64t *
//   - subj: MSKint32t *
//   - subk: MSKint32t *
//   - subl: MSKint32t *
//   - valjkl: MSKrealt *
//
// [MSK_getbarcblocktriplet]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarcblocktriplet(
	maxnum int64,
	num *int64,
	subj *int32,
	subk *int32,
	subl *int32,
	valjkl *float64,
) res.Code {
	return res.Code(
		C.MSK_getbarcblocktriplet(
			task.task,
			C.MSKint64t(maxnum),
			(*C.MSKint64t)(num),
			(*C.MSKint32t)(subj),
			(*C.MSKint32t)(subk),
			(*C.MSKint32t)(subl),
			(*C.MSKrealt)(valjkl),
		),
	)
}

// GetBarcidx is wrapping [MSK_getbarcidx]
//
// [MSK_getbarcidx] has following parameters
//   - task: MSKtask_t
//   - idx: MSKint64t
//   - maxnum: MSKint64t
//   - j: MSKint32t *
//   - num: MSKint64t *
//   - sub: MSKint64t *
//   - weights: MSKrealt *
//
// [MSK_getbarcidx]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarcidx(
	idx int64,
	maxnum int64,
	j *int32,
	num *int64,
	sub *int64,
	weights *float64,
) res.Code {
	return res.Code(
		C.MSK_getbarcidx(
			task.task,
			C.MSKint64t(idx),
			C.MSKint64t(maxnum),
			(*C.MSKint32t)(j),
			(*C.MSKint64t)(num),
			(*C.MSKint64t)(sub),
			(*C.MSKrealt)(weights),
		),
	)
}

// GetBarcidxinfo is wrapping [MSK_getbarcidxinfo]
//
// [MSK_getbarcidxinfo] has following parameters
//   - task: MSKtask_t
//   - idx: MSKint64t
//   - num: MSKint64t *
//
// [MSK_getbarcidxinfo]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarcidxinfo(
	idx int64,
	num *int64,
) res.Code {
	return res.Code(
		C.MSK_getbarcidxinfo(
			task.task,
			C.MSKint64t(idx),
			(*C.MSKint64t)(num),
		),
	)
}

// GetBarcidxj is wrapping [MSK_getbarcidxj]
//
// [MSK_getbarcidxj] has following parameters
//   - task: MSKtask_t
//   - idx: MSKint64t
//   - j: MSKint32t *
//
// [MSK_getbarcidxj]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarcidxj(
	idx int64,
	j *int32,
) res.Code {
	return res.Code(
		C.MSK_getbarcidxj(
			task.task,
			C.MSKint64t(idx),
			(*C.MSKint32t)(j),
		),
	)
}

// GetBarcsparsity is wrapping [MSK_getbarcsparsity]
//
// [MSK_getbarcsparsity] has following parameters
//   - task: MSKtask_t
//   - maxnumnz: MSKint64t
//   - numnz: MSKint64t *
//   - idxj: MSKint64t *
//
// [MSK_getbarcsparsity]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarcsparsity(
	maxnumnz int64,
	numnz *int64,
	idxj *int64,
) res.Code {
	return res.Code(
		C.MSK_getbarcsparsity(
			task.task,
			C.MSKint64t(maxnumnz),
			(*C.MSKint64t)(numnz),
			(*C.MSKint64t)(idxj),
		),
	)
}

// GetBarsj is wrapping [MSK_getbarsj]
//
// [MSK_getbarsj] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - j: MSKint32t
//   - barsj: MSKrealt *
//
// [MSK_getbarsj]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarsj(
	whichsol SolType,
	j int32,
	barsj *float64,
) res.Code {
	return res.Code(
		C.MSK_getbarsj(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(j),
			(*C.MSKrealt)(barsj),
		),
	)
}

// GetBarsSlice is wrapping [MSK_getbarsslice]
//
// [MSK_getbarsslice] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - first: MSKint32t
//   - last: MSKint32t
//   - slicesize: MSKint64t
//   - barsslice: MSKrealt *
//
// [MSK_getbarsslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarsSlice(
	whichsol SolType,
	first int32,
	last int32,
	slicesize int64,
	barsslice *float64,
) res.Code {
	return res.Code(
		C.MSK_getbarsslice(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(first),
			C.MSKint32t(last),
			C.MSKint64t(slicesize),
			(*C.MSKrealt)(barsslice),
		),
	)
}

// GetBarvarName is wrapping [MSK_getbarvarname]
//
// [MSK_getbarvarname] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getbarvarname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarvarName(
	i int32,
	sizename int32,
	name *byte,
) res.Code {
	return res.Code(
		C.MSK_getbarvarname(
			task.task,
			C.MSKint32t(i),
			C.MSKint32t(sizename),
			(*C.char)(unsafe.Pointer(name)),
		),
	)
}

// GetBarvarnameindex is wrapping [MSK_getbarvarnameindex]
//
// [MSK_getbarvarnameindex] has following parameters
//   - task: MSKtask_t
//   - somename: const char *
//   - asgn: MSKint32t *
//   - index: MSKint32t *
//
// [MSK_getbarvarnameindex]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarvarnameindex(
	somename string,
	asgn *int32,
	index *int32,
) res.Code {
	c_somename := C.CString(somename)
	defer C.free(unsafe.Pointer(c_somename))

	return res.Code(
		C.MSK_getbarvarnameindex(
			task.task,
			c_somename,
			(*C.MSKint32t)(asgn),
			(*C.MSKint32t)(index),
		),
	)
}

// GetBarvarnamelen is wrapping [MSK_getbarvarnamelen]
//
// [MSK_getbarvarnamelen] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - len: MSKint32t *
//
// [MSK_getbarvarnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarvarnamelen(
	i int32,
	len *int32,
) res.Code {
	return res.Code(
		C.MSK_getbarvarnamelen(
			task.task,
			C.MSKint32t(i),
			(*C.MSKint32t)(len),
		),
	)
}

// GetBarxj is wrapping [MSK_getbarxj]
//
// [MSK_getbarxj] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - j: MSKint32t
//   - barxj: MSKrealt *
//
// [MSK_getbarxj]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarxj(
	whichsol SolType,
	j int32,
	barxj *float64,
) res.Code {
	return res.Code(
		C.MSK_getbarxj(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(j),
			(*C.MSKrealt)(barxj),
		),
	)
}

// GetBarxSlice is wrapping [MSK_getbarxslice]
//
// [MSK_getbarxslice] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - first: MSKint32t
//   - last: MSKint32t
//   - slicesize: MSKint64t
//   - barxslice: MSKrealt *
//
// [MSK_getbarxslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetBarxSlice(
	whichsol SolType,
	first int32,
	last int32,
	slicesize int64,
	barxslice *float64,
) res.Code {
	return res.Code(
		C.MSK_getbarxslice(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(first),
			C.MSKint32t(last),
			C.MSKint64t(slicesize),
			(*C.MSKrealt)(barxslice),
		),
	)
}

// GetC is wrapping [MSK_getc]
//
// [MSK_getc] has following parameters
//   - task: MSKtask_t
//   - c: MSKrealt *
//
// [MSK_getc]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetC(
	c *float64,
) res.Code {
	return res.Code(
		C.MSK_getc(
			task.task,
			(*C.MSKrealt)(c),
		),
	)
}

// GetCfix is wrapping [MSK_getcfix]
//
// [MSK_getcfix] has following parameters
//   - task: MSKtask_t
//   - cfix: MSKrealt *
//
// [MSK_getcfix]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetCfix(
	cfix *float64,
) res.Code {
	return res.Code(
		C.MSK_getcfix(
			task.task,
			(*C.MSKrealt)(cfix),
		),
	)
}

// GetCj is wrapping [MSK_getcj]
//
// [MSK_getcj] has following parameters
//   - task: MSKtask_t
//   - j: MSKint32t
//   - cj: MSKrealt *
//
// [MSK_getcj]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetCj(
	j int32,
	cj *float64,
) res.Code {
	return res.Code(
		C.MSK_getcj(
			task.task,
			C.MSKint32t(j),
			(*C.MSKrealt)(cj),
		),
	)
}

// GetCList is wrapping [MSK_getclist]
//
// [MSK_getclist] has following parameters
//   - task: MSKtask_t
//   - num: MSKint32t
//   - subj: const MSKint32t *
//   - c: MSKrealt *
//
// [MSK_getclist]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetCList(
	num int32,
	subj *int32,
	c *float64,
) res.Code {
	return res.Code(
		C.MSK_getclist(
			task.task,
			C.MSKint32t(num),
			(*C.MSKint32t)(subj),
			(*C.MSKrealt)(c),
		),
	)
}

// GetConbound is wrapping [MSK_getconbound]
//
// [MSK_getconbound] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - bk: MSKboundkeye *
//   - bl: MSKrealt *
//   - bu: MSKrealt *
//
// [MSK_getconbound]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetConbound(
	i int32,
	bk *BoundKey,
	bl *float64,
	bu *float64,
) res.Code {
	return res.Code(
		C.MSK_getconbound(
			task.task,
			C.MSKint32t(i),
			(*C.MSKboundkeye)(bk),
			(*C.MSKrealt)(bl),
			(*C.MSKrealt)(bu),
		),
	)
}

// GetConboundSlice is wrapping [MSK_getconboundslice]
//
// [MSK_getconboundslice] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - bk: MSKboundkeye *
//   - bl: MSKrealt *
//   - bu: MSKrealt *
//
// [MSK_getconboundslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetConboundSlice(
	first int32,
	last int32,
	bk *BoundKey,
	bl *float64,
	bu *float64,
) res.Code {
	return res.Code(
		C.MSK_getconboundslice(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKboundkeye)(bk),
			(*C.MSKrealt)(bl),
			(*C.MSKrealt)(bu),
		),
	)
}

// GetCone is wrapping [MSK_getcone]
//
// [MSK_getcone] has following parameters
//   - task: MSKtask_t
//   - k: MSKint32t
//   - ct: MSKconetypee *
//   - conepar: MSKrealt *
//   - nummem: MSKint32t *
//   - submem: MSKint32t *
//
// [MSK_getcone]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetCone(
	k int32,
	ct *ConeType,
	conepar *float64,
	nummem *int32,
	submem *int32,
) res.Code {
	return res.Code(
		C.MSK_getcone(
			task.task,
			C.MSKint32t(k),
			(*C.MSKconetypee)(ct),
			(*C.MSKrealt)(conepar),
			(*C.MSKint32t)(nummem),
			(*C.MSKint32t)(submem),
		),
	)
}

// GetConeinfo is wrapping [MSK_getconeinfo]
//
// [MSK_getconeinfo] has following parameters
//   - task: MSKtask_t
//   - k: MSKint32t
//   - ct: MSKconetypee *
//   - conepar: MSKrealt *
//   - nummem: MSKint32t *
//
// [MSK_getconeinfo]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetConeinfo(
	k int32,
	ct *ConeType,
	conepar *float64,
	nummem *int32,
) res.Code {
	return res.Code(
		C.MSK_getconeinfo(
			task.task,
			C.MSKint32t(k),
			(*C.MSKconetypee)(ct),
			(*C.MSKrealt)(conepar),
			(*C.MSKint32t)(nummem),
		),
	)
}

// GetConeName is wrapping [MSK_getconename]
//
// [MSK_getconename] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getconename]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetConeName(
	i int32,
	sizename int32,
	name *byte,
) res.Code {
	return res.Code(
		C.MSK_getconename(
			task.task,
			C.MSKint32t(i),
			C.MSKint32t(sizename),
			(*C.char)(unsafe.Pointer(name)),
		),
	)
}

// GetConenameindex is wrapping [MSK_getconenameindex]
//
// [MSK_getconenameindex] has following parameters
//   - task: MSKtask_t
//   - somename: const char *
//   - asgn: MSKint32t *
//   - index: MSKint32t *
//
// [MSK_getconenameindex]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetConenameindex(
	somename string,
	asgn *int32,
	index *int32,
) res.Code {
	c_somename := C.CString(somename)
	defer C.free(unsafe.Pointer(c_somename))

	return res.Code(
		C.MSK_getconenameindex(
			task.task,
			c_somename,
			(*C.MSKint32t)(asgn),
			(*C.MSKint32t)(index),
		),
	)
}

// GetConenamelen is wrapping [MSK_getconenamelen]
//
// [MSK_getconenamelen] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - len: MSKint32t *
//
// [MSK_getconenamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetConenamelen(
	i int32,
	len *int32,
) res.Code {
	return res.Code(
		C.MSK_getconenamelen(
			task.task,
			C.MSKint32t(i),
			(*C.MSKint32t)(len),
		),
	)
}

// GetConName is wrapping [MSK_getconname]
//
// [MSK_getconname] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getconname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetConName(
	i int32,
	sizename int32,
	name *byte,
) res.Code {
	return res.Code(
		C.MSK_getconname(
			task.task,
			C.MSKint32t(i),
			C.MSKint32t(sizename),
			(*C.char)(unsafe.Pointer(name)),
		),
	)
}

// GetConnameindex is wrapping [MSK_getconnameindex]
//
// [MSK_getconnameindex] has following parameters
//   - task: MSKtask_t
//   - somename: const char *
//   - asgn: MSKint32t *
//   - index: MSKint32t *
//
// [MSK_getconnameindex]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetConnameindex(
	somename string,
	asgn *int32,
	index *int32,
) res.Code {
	c_somename := C.CString(somename)
	defer C.free(unsafe.Pointer(c_somename))

	return res.Code(
		C.MSK_getconnameindex(
			task.task,
			c_somename,
			(*C.MSKint32t)(asgn),
			(*C.MSKint32t)(index),
		),
	)
}

// GetConnamelen is wrapping [MSK_getconnamelen]
//
// [MSK_getconnamelen] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - len: MSKint32t *
//
// [MSK_getconnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetConnamelen(
	i int32,
	len *int32,
) res.Code {
	return res.Code(
		C.MSK_getconnamelen(
			task.task,
			C.MSKint32t(i),
			(*C.MSKint32t)(len),
		),
	)
}

// GetCSlice is wrapping [MSK_getcslice]
//
// [MSK_getcslice] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - c: MSKrealt *
//
// [MSK_getcslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetCSlice(
	first int32,
	last int32,
	c *float64,
) res.Code {
	return res.Code(
		C.MSK_getcslice(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKrealt)(c),
		),
	)
}

// GetDimbarvarj is wrapping [MSK_getdimbarvarj]
//
// [MSK_getdimbarvarj] has following parameters
//   - task: MSKtask_t
//   - j: MSKint32t
//   - dimbarvarj: MSKint32t *
//
// [MSK_getdimbarvarj]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDimbarvarj(
	j int32,
	dimbarvarj *int32,
) res.Code {
	return res.Code(
		C.MSK_getdimbarvarj(
			task.task,
			C.MSKint32t(j),
			(*C.MSKint32t)(dimbarvarj),
		),
	)
}

// GetDjcafeidxList is wrapping [MSK_getdjcafeidxlist]
//
// [MSK_getdjcafeidxlist] has following parameters
//   - task: MSKtask_t
//   - djcidx: MSKint64t
//   - afeidxlist: MSKint64t *
//
// [MSK_getdjcafeidxlist]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjcafeidxList(
	djcidx int64,
	afeidxlist *int64,
) res.Code {
	return res.Code(
		C.MSK_getdjcafeidxlist(
			task.task,
			C.MSKint64t(djcidx),
			(*C.MSKint64t)(afeidxlist),
		),
	)
}

// GetDjcb is wrapping [MSK_getdjcb]
//
// [MSK_getdjcb] has following parameters
//   - task: MSKtask_t
//   - djcidx: MSKint64t
//   - b: MSKrealt *
//
// [MSK_getdjcb]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjcb(
	djcidx int64,
	b *float64,
) res.Code {
	return res.Code(
		C.MSK_getdjcb(
			task.task,
			C.MSKint64t(djcidx),
			(*C.MSKrealt)(b),
		),
	)
}

// GetDjcdomainidxList is wrapping [MSK_getdjcdomainidxlist]
//
// [MSK_getdjcdomainidxlist] has following parameters
//   - task: MSKtask_t
//   - djcidx: MSKint64t
//   - domidxlist: MSKint64t *
//
// [MSK_getdjcdomainidxlist]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjcdomainidxList(
	djcidx int64,
	domidxlist *int64,
) res.Code {
	return res.Code(
		C.MSK_getdjcdomainidxlist(
			task.task,
			C.MSKint64t(djcidx),
			(*C.MSKint64t)(domidxlist),
		),
	)
}

// GetDjcName is wrapping [MSK_getdjcname]
//
// [MSK_getdjcname] has following parameters
//   - task: MSKtask_t
//   - djcidx: MSKint64t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getdjcname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjcName(
	djcidx int64,
	sizename int32,
	name *byte,
) res.Code {
	return res.Code(
		C.MSK_getdjcname(
			task.task,
			C.MSKint64t(djcidx),
			C.MSKint32t(sizename),
			(*C.char)(unsafe.Pointer(name)),
		),
	)
}

// GetDjcnamelen is wrapping [MSK_getdjcnamelen]
//
// [MSK_getdjcnamelen] has following parameters
//   - task: MSKtask_t
//   - djcidx: MSKint64t
//   - len: MSKint32t *
//
// [MSK_getdjcnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjcnamelen(
	djcidx int64,
	len *int32,
) res.Code {
	return res.Code(
		C.MSK_getdjcnamelen(
			task.task,
			C.MSKint64t(djcidx),
			(*C.MSKint32t)(len),
		),
	)
}

// GetDjcnumafe is wrapping [MSK_getdjcnumafe]
//
// [MSK_getdjcnumafe] has following parameters
//   - task: MSKtask_t
//   - djcidx: MSKint64t
//   - numafe: MSKint64t *
//
// [MSK_getdjcnumafe]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjcnumafe(
	djcidx int64,
	numafe *int64,
) res.Code {
	return res.Code(
		C.MSK_getdjcnumafe(
			task.task,
			C.MSKint64t(djcidx),
			(*C.MSKint64t)(numafe),
		),
	)
}

// GetDjcnumafetot is wrapping [MSK_getdjcnumafetot]
//
// [MSK_getdjcnumafetot] has following parameters
//   - task: MSKtask_t
//   - numafetot: MSKint64t *
//
// [MSK_getdjcnumafetot]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjcnumafetot(
	numafetot *int64,
) res.Code {
	return res.Code(
		C.MSK_getdjcnumafetot(
			task.task,
			(*C.MSKint64t)(numafetot),
		),
	)
}

// GetDjcnumdomain is wrapping [MSK_getdjcnumdomain]
//
// [MSK_getdjcnumdomain] has following parameters
//   - task: MSKtask_t
//   - djcidx: MSKint64t
//   - numdomain: MSKint64t *
//
// [MSK_getdjcnumdomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjcnumdomain(
	djcidx int64,
	numdomain *int64,
) res.Code {
	return res.Code(
		C.MSK_getdjcnumdomain(
			task.task,
			C.MSKint64t(djcidx),
			(*C.MSKint64t)(numdomain),
		),
	)
}

// GetDjcnumdomaintot is wrapping [MSK_getdjcnumdomaintot]
//
// [MSK_getdjcnumdomaintot] has following parameters
//   - task: MSKtask_t
//   - numdomaintot: MSKint64t *
//
// [MSK_getdjcnumdomaintot]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjcnumdomaintot(
	numdomaintot *int64,
) res.Code {
	return res.Code(
		C.MSK_getdjcnumdomaintot(
			task.task,
			(*C.MSKint64t)(numdomaintot),
		),
	)
}

// GetDjcnumterm is wrapping [MSK_getdjcnumterm]
//
// [MSK_getdjcnumterm] has following parameters
//   - task: MSKtask_t
//   - djcidx: MSKint64t
//   - numterm: MSKint64t *
//
// [MSK_getdjcnumterm]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjcnumterm(
	djcidx int64,
	numterm *int64,
) res.Code {
	return res.Code(
		C.MSK_getdjcnumterm(
			task.task,
			C.MSKint64t(djcidx),
			(*C.MSKint64t)(numterm),
		),
	)
}

// GetDjcnumtermtot is wrapping [MSK_getdjcnumtermtot]
//
// [MSK_getdjcnumtermtot] has following parameters
//   - task: MSKtask_t
//   - numtermtot: MSKint64t *
//
// [MSK_getdjcnumtermtot]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjcnumtermtot(
	numtermtot *int64,
) res.Code {
	return res.Code(
		C.MSK_getdjcnumtermtot(
			task.task,
			(*C.MSKint64t)(numtermtot),
		),
	)
}

// GetDjcs is wrapping [MSK_getdjcs]
//
// [MSK_getdjcs] has following parameters
//   - task: MSKtask_t
//   - domidxlist: MSKint64t *
//   - afeidxlist: MSKint64t *
//   - b: MSKrealt *
//   - termsizelist: MSKint64t *
//   - numterms: MSKint64t *
//
// [MSK_getdjcs]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjcs(
	domidxlist *int64,
	afeidxlist *int64,
	b *float64,
	termsizelist *int64,
	numterms *int64,
) res.Code {
	return res.Code(
		C.MSK_getdjcs(
			task.task,
			(*C.MSKint64t)(domidxlist),
			(*C.MSKint64t)(afeidxlist),
			(*C.MSKrealt)(b),
			(*C.MSKint64t)(termsizelist),
			(*C.MSKint64t)(numterms),
		),
	)
}

// GetDjctermsizeList is wrapping [MSK_getdjctermsizelist]
//
// [MSK_getdjctermsizelist] has following parameters
//   - task: MSKtask_t
//   - djcidx: MSKint64t
//   - termsizelist: MSKint64t *
//
// [MSK_getdjctermsizelist]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDjctermsizeList(
	djcidx int64,
	termsizelist *int64,
) res.Code {
	return res.Code(
		C.MSK_getdjctermsizelist(
			task.task,
			C.MSKint64t(djcidx),
			(*C.MSKint64t)(termsizelist),
		),
	)
}

// GetDomainn is wrapping [MSK_getdomainn]
//
// [MSK_getdomainn] has following parameters
//   - task: MSKtask_t
//   - domidx: MSKint64t
//   - n: MSKint64t *
//
// [MSK_getdomainn]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDomainn(
	domidx int64,
	n *int64,
) res.Code {
	return res.Code(
		C.MSK_getdomainn(
			task.task,
			C.MSKint64t(domidx),
			(*C.MSKint64t)(n),
		),
	)
}

// GetDomainName is wrapping [MSK_getdomainname]
//
// [MSK_getdomainname] has following parameters
//   - task: MSKtask_t
//   - domidx: MSKint64t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getdomainname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDomainName(
	domidx int64,
	sizename int32,
	name *byte,
) res.Code {
	return res.Code(
		C.MSK_getdomainname(
			task.task,
			C.MSKint64t(domidx),
			C.MSKint32t(sizename),
			(*C.char)(unsafe.Pointer(name)),
		),
	)
}

// GetDomainnamelen is wrapping [MSK_getdomainnamelen]
//
// [MSK_getdomainnamelen] has following parameters
//   - task: MSKtask_t
//   - domidx: MSKint64t
//   - len: MSKint32t *
//
// [MSK_getdomainnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDomainnamelen(
	domidx int64,
	len *int32,
) res.Code {
	return res.Code(
		C.MSK_getdomainnamelen(
			task.task,
			C.MSKint64t(domidx),
			(*C.MSKint32t)(len),
		),
	)
}

// GetDomaintype is wrapping [MSK_getdomaintype]
//
// [MSK_getdomaintype] has following parameters
//   - task: MSKtask_t
//   - domidx: MSKint64t
//   - domtype: MSKdomaintypee *
//
// [MSK_getdomaintype]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDomaintype(
	domidx int64,
	domtype *DomainType,
) res.Code {
	return res.Code(
		C.MSK_getdomaintype(
			task.task,
			C.MSKint64t(domidx),
			(*C.MSKdomaintypee)(domtype),
		),
	)
}

// GetDouinf is wrapping [MSK_getdouinf]
//
// [MSK_getdouinf] has following parameters
//   - task: MSKtask_t
//   - whichdinf: MSKdinfiteme
//   - dvalue: MSKrealt *
//
// [MSK_getdouinf]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDouinf(
	whichdinf DInfItem,
	dvalue *float64,
) res.Code {
	return res.Code(
		C.MSK_getdouinf(
			task.task,
			C.MSKdinfiteme(whichdinf),
			(*C.MSKrealt)(dvalue),
		),
	)
}

// GetDouparam is wrapping [MSK_getdouparam]
//
// [MSK_getdouparam] has following parameters
//   - task: MSKtask_t
//   - param: MSKdparame
//   - parvalue: MSKrealt *
//
// [MSK_getdouparam]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDouparam(
	param DParam,
	parvalue *float64,
) res.Code {
	return res.Code(
		C.MSK_getdouparam(
			task.task,
			C.MSKdparame(param),
			(*C.MSKrealt)(parvalue),
		),
	)
}

// GetDualobj is wrapping [MSK_getdualobj]
//
// [MSK_getdualobj] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - dualobj: MSKrealt *
//
// [MSK_getdualobj]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDualobj(
	whichsol SolType,
	dualobj *float64,
) res.Code {
	return res.Code(
		C.MSK_getdualobj(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(dualobj),
		),
	)
}

// GetDualsolutionnorms is wrapping [MSK_getdualsolutionnorms]
//
// [MSK_getdualsolutionnorms] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - nrmy: MSKrealt *
//   - nrmslc: MSKrealt *
//   - nrmsuc: MSKrealt *
//   - nrmslx: MSKrealt *
//   - nrmsux: MSKrealt *
//   - nrmsnx: MSKrealt *
//   - nrmbars: MSKrealt *
//
// [MSK_getdualsolutionnorms]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDualsolutionnorms(
	whichsol SolType,
	nrmy *float64,
	nrmslc *float64,
	nrmsuc *float64,
	nrmslx *float64,
	nrmsux *float64,
	nrmsnx *float64,
	nrmbars *float64,
) res.Code {
	return res.Code(
		C.MSK_getdualsolutionnorms(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(nrmy),
			(*C.MSKrealt)(nrmslc),
			(*C.MSKrealt)(nrmsuc),
			(*C.MSKrealt)(nrmslx),
			(*C.MSKrealt)(nrmsux),
			(*C.MSKrealt)(nrmsnx),
			(*C.MSKrealt)(nrmbars),
		),
	)
}

// GetDviolacc is wrapping [MSK_getdviolacc]
//
// [MSK_getdviolacc] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - numaccidx: MSKint64t
//   - accidxlist: const MSKint64t *
//   - viol: MSKrealt *
//
// [MSK_getdviolacc]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDviolacc(
	whichsol SolType,
	numaccidx int64,
	accidxlist *int64,
	viol *float64,
) res.Code {
	return res.Code(
		C.MSK_getdviolacc(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint64t(numaccidx),
			(*C.MSKint64t)(accidxlist),
			(*C.MSKrealt)(viol),
		),
	)
}

// GetDviolbarvar is wrapping [MSK_getdviolbarvar]
//
// [MSK_getdviolbarvar] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - num: MSKint32t
//   - sub: const MSKint32t *
//   - viol: MSKrealt *
//
// [MSK_getdviolbarvar]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDviolbarvar(
	whichsol SolType,
	num int32,
	sub *int32,
	viol *float64,
) res.Code {
	return res.Code(
		C.MSK_getdviolbarvar(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(num),
			(*C.MSKint32t)(sub),
			(*C.MSKrealt)(viol),
		),
	)
}

// GetDviolcon is wrapping [MSK_getdviolcon]
//
// [MSK_getdviolcon] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - num: MSKint32t
//   - sub: const MSKint32t *
//   - viol: MSKrealt *
//
// [MSK_getdviolcon]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDviolcon(
	whichsol SolType,
	num int32,
	sub *int32,
	viol *float64,
) res.Code {
	return res.Code(
		C.MSK_getdviolcon(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(num),
			(*C.MSKint32t)(sub),
			(*C.MSKrealt)(viol),
		),
	)
}

// GetDviolcones is wrapping [MSK_getdviolcones]
//
// [MSK_getdviolcones] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - num: MSKint32t
//   - sub: const MSKint32t *
//   - viol: MSKrealt *
//
// [MSK_getdviolcones]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDviolcones(
	whichsol SolType,
	num int32,
	sub *int32,
	viol *float64,
) res.Code {
	return res.Code(
		C.MSK_getdviolcones(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(num),
			(*C.MSKint32t)(sub),
			(*C.MSKrealt)(viol),
		),
	)
}

// GetDviolvar is wrapping [MSK_getdviolvar]
//
// [MSK_getdviolvar] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - num: MSKint32t
//   - sub: const MSKint32t *
//   - viol: MSKrealt *
//
// [MSK_getdviolvar]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetDviolvar(
	whichsol SolType,
	num int32,
	sub *int32,
	viol *float64,
) res.Code {
	return res.Code(
		C.MSK_getdviolvar(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(num),
			(*C.MSKint32t)(sub),
			(*C.MSKrealt)(viol),
		),
	)
}

// GetInfindex is wrapping [MSK_getinfindex]
//
// [MSK_getinfindex] has following parameters
//   - task: MSKtask_t
//   - inftype: MSKinftypee
//   - infname: const char *
//   - infindex: MSKint32t *
//
// [MSK_getinfindex]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetInfindex(
	inftype InfType,
	infname string,
	infindex *int32,
) res.Code {
	c_infname := C.CString(infname)
	defer C.free(unsafe.Pointer(c_infname))

	return res.Code(
		C.MSK_getinfindex(
			task.task,
			C.MSKinftypee(inftype),
			c_infname,
			(*C.MSKint32t)(infindex),
		),
	)
}

// GetInfmax is wrapping [MSK_getinfmax]
//
// [MSK_getinfmax] has following parameters
//   - task: MSKtask_t
//   - inftype: MSKinftypee
//   - infmax: MSKint32t *
//
// [MSK_getinfmax]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetInfmax(
	inftype InfType,
	infmax *int32,
) res.Code {
	return res.Code(
		C.MSK_getinfmax(
			task.task,
			C.MSKinftypee(inftype),
			(*C.MSKint32t)(infmax),
		),
	)
}

// GetInfName is wrapping [MSK_getinfname]
//
// [MSK_getinfname] has following parameters
//   - task: MSKtask_t
//   - inftype: MSKinftypee
//   - whichinf: MSKint32t
//   - infname: char *
//
// [MSK_getinfname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetInfName(
	inftype InfType,
	whichinf int32,
	infname *byte,
) res.Code {
	return res.Code(
		C.MSK_getinfname(
			task.task,
			C.MSKinftypee(inftype),
			C.MSKint32t(whichinf),
			(*C.char)(unsafe.Pointer(infname)),
		),
	)
}

// GetIntinf is wrapping [MSK_getintinf]
//
// [MSK_getintinf] has following parameters
//   - task: MSKtask_t
//   - whichiinf: MSKiinfiteme
//   - ivalue: MSKint32t *
//
// [MSK_getintinf]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetIntinf(
	whichiinf IInfItem,
	ivalue *int32,
) res.Code {
	return res.Code(
		C.MSK_getintinf(
			task.task,
			C.MSKiinfiteme(whichiinf),
			(*C.MSKint32t)(ivalue),
		),
	)
}

// GetIntparam is wrapping [MSK_getintparam]
//
// [MSK_getintparam] has following parameters
//   - task: MSKtask_t
//   - param: MSKiparame
//   - parvalue: MSKint32t *
//
// [MSK_getintparam]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetIntparam(
	param IParam,
	parvalue *int32,
) res.Code {
	return res.Code(
		C.MSK_getintparam(
			task.task,
			C.MSKiparame(param),
			(*C.MSKint32t)(parvalue),
		),
	)
}

// GetLasterror is wrapping [MSK_getlasterror]
//
// [MSK_getlasterror] has following parameters
//   - task: MSKtask_t
//   - lastrescode: MSKrescodee *
//   - sizelastmsg: MSKint32t
//   - lastmsglen: MSKint32t *
//   - lastmsg: char *
//
// [MSK_getlasterror]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetLasterror(
	lastrescode *res.Code,
	sizelastmsg int32,
	lastmsglen *int32,
	lastmsg *byte,
) res.Code {
	return res.Code(
		C.MSK_getlasterror(
			task.task,
			(*C.MSKrescodee)(lastrescode),
			C.MSKint32t(sizelastmsg),
			(*C.MSKint32t)(lastmsglen),
			(*C.char)(unsafe.Pointer(lastmsg)),
		),
	)
}

// GetLasterror64 is wrapping [MSK_getlasterror64]
//
// [MSK_getlasterror64] has following parameters
//   - task: MSKtask_t
//   - lastrescode: MSKrescodee *
//   - sizelastmsg: MSKint64t
//   - lastmsglen: MSKint64t *
//   - lastmsg: char *
//
// [MSK_getlasterror64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetLasterror64(
	lastrescode *res.Code,
	sizelastmsg int64,
	lastmsglen *int64,
	lastmsg *byte,
) res.Code {
	return res.Code(
		C.MSK_getlasterror64(
			task.task,
			(*C.MSKrescodee)(lastrescode),
			C.MSKint64t(sizelastmsg),
			(*C.MSKint64t)(lastmsglen),
			(*C.char)(unsafe.Pointer(lastmsg)),
		),
	)
}

// GetLenbarvarj is wrapping [MSK_getlenbarvarj]
//
// [MSK_getlenbarvarj] has following parameters
//   - task: MSKtask_t
//   - j: MSKint32t
//   - lenbarvarj: MSKint64t *
//
// [MSK_getlenbarvarj]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetLenbarvarj(
	j int32,
	lenbarvarj *int64,
) res.Code {
	return res.Code(
		C.MSK_getlenbarvarj(
			task.task,
			C.MSKint32t(j),
			(*C.MSKint64t)(lenbarvarj),
		),
	)
}

// GetLintinf is wrapping [MSK_getlintinf]
//
// [MSK_getlintinf] has following parameters
//   - task: MSKtask_t
//   - whichliinf: MSKliinfiteme
//   - ivalue: MSKint64t *
//
// [MSK_getlintinf]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetLintinf(
	whichliinf LIInfItem,
	ivalue *int64,
) res.Code {
	return res.Code(
		C.MSK_getlintinf(
			task.task,
			C.MSKliinfiteme(whichliinf),
			(*C.MSKint64t)(ivalue),
		),
	)
}

// GetMaxnamelen is wrapping [MSK_getmaxnamelen]
//
// [MSK_getmaxnamelen] has following parameters
//   - task: MSKtask_t
//   - maxlen: MSKint32t *
//
// [MSK_getmaxnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetMaxnamelen(
	maxlen *int32,
) res.Code {
	return res.Code(
		C.MSK_getmaxnamelen(
			task.task,
			(*C.MSKint32t)(maxlen),
		),
	)
}

// GetMaxnumanz is wrapping [MSK_getmaxnumanz]
//
// [MSK_getmaxnumanz] has following parameters
//   - task: MSKtask_t
//   - maxnumanz: MSKint32t *
//
// [MSK_getmaxnumanz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetMaxnumanz(
	maxnumanz *int32,
) res.Code {
	return res.Code(
		C.MSK_getmaxnumanz(
			task.task,
			(*C.MSKint32t)(maxnumanz),
		),
	)
}

// GetMaxnumanz64 is wrapping [MSK_getmaxnumanz64]
//
// [MSK_getmaxnumanz64] has following parameters
//   - task: MSKtask_t
//   - maxnumanz: MSKint64t *
//
// [MSK_getmaxnumanz64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetMaxnumanz64(
	maxnumanz *int64,
) res.Code {
	return res.Code(
		C.MSK_getmaxnumanz64(
			task.task,
			(*C.MSKint64t)(maxnumanz),
		),
	)
}

// GetMaxnumbarvar is wrapping [MSK_getmaxnumbarvar]
//
// [MSK_getmaxnumbarvar] has following parameters
//   - task: MSKtask_t
//   - maxnumbarvar: MSKint32t *
//
// [MSK_getmaxnumbarvar]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetMaxnumbarvar(
	maxnumbarvar *int32,
) res.Code {
	return res.Code(
		C.MSK_getmaxnumbarvar(
			task.task,
			(*C.MSKint32t)(maxnumbarvar),
		),
	)
}

// GetMaxnumcon is wrapping [MSK_getmaxnumcon]
//
// [MSK_getmaxnumcon] has following parameters
//   - task: MSKtask_t
//   - maxnumcon: MSKint32t *
//
// [MSK_getmaxnumcon]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetMaxnumcon(
	maxnumcon *int32,
) res.Code {
	return res.Code(
		C.MSK_getmaxnumcon(
			task.task,
			(*C.MSKint32t)(maxnumcon),
		),
	)
}

// GetMaxnumcone is wrapping [MSK_getmaxnumcone]
//
// [MSK_getmaxnumcone] has following parameters
//   - task: MSKtask_t
//   - maxnumcone: MSKint32t *
//
// [MSK_getmaxnumcone]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetMaxnumcone(
	maxnumcone *int32,
) res.Code {
	return res.Code(
		C.MSK_getmaxnumcone(
			task.task,
			(*C.MSKint32t)(maxnumcone),
		),
	)
}

// GetMaxnumqnz is wrapping [MSK_getmaxnumqnz]
//
// [MSK_getmaxnumqnz] has following parameters
//   - task: MSKtask_t
//   - maxnumqnz: MSKint32t *
//
// [MSK_getmaxnumqnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetMaxnumqnz(
	maxnumqnz *int32,
) res.Code {
	return res.Code(
		C.MSK_getmaxnumqnz(
			task.task,
			(*C.MSKint32t)(maxnumqnz),
		),
	)
}

// GetMaxnumqnz64 is wrapping [MSK_getmaxnumqnz64]
//
// [MSK_getmaxnumqnz64] has following parameters
//   - task: MSKtask_t
//   - maxnumqnz: MSKint64t *
//
// [MSK_getmaxnumqnz64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetMaxnumqnz64(
	maxnumqnz *int64,
) res.Code {
	return res.Code(
		C.MSK_getmaxnumqnz64(
			task.task,
			(*C.MSKint64t)(maxnumqnz),
		),
	)
}

// GetMaxnumvar is wrapping [MSK_getmaxnumvar]
//
// [MSK_getmaxnumvar] has following parameters
//   - task: MSKtask_t
//   - maxnumvar: MSKint32t *
//
// [MSK_getmaxnumvar]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetMaxnumvar(
	maxnumvar *int32,
) res.Code {
	return res.Code(
		C.MSK_getmaxnumvar(
			task.task,
			(*C.MSKint32t)(maxnumvar),
		),
	)
}

// GetMemusagetask is wrapping [MSK_getmemusagetask]
//
// [MSK_getmemusagetask] has following parameters
//   - task: MSKtask_t
//   - meminuse: MSKint64t *
//   - maxmemuse: MSKint64t *
//
// [MSK_getmemusagetask]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetMemusagetask(
	meminuse *int64,
	maxmemuse *int64,
) res.Code {
	return res.Code(
		C.MSK_getmemusagetask(
			task.task,
			(*C.MSKint64t)(meminuse),
			(*C.MSKint64t)(maxmemuse),
		),
	)
}

// GetNadouinf is wrapping [MSK_getnadouinf]
//
// [MSK_getnadouinf] has following parameters
//   - task: MSKtask_t
//   - infitemname: const char *
//   - dvalue: MSKrealt *
//
// [MSK_getnadouinf]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNadouinf(
	infitemname string,
	dvalue *float64,
) res.Code {
	c_infitemname := C.CString(infitemname)
	defer C.free(unsafe.Pointer(c_infitemname))

	return res.Code(
		C.MSK_getnadouinf(
			task.task,
			c_infitemname,
			(*C.MSKrealt)(dvalue),
		),
	)
}

// GetNadouparam is wrapping [MSK_getnadouparam]
//
// [MSK_getnadouparam] has following parameters
//   - task: MSKtask_t
//   - paramname: const char *
//   - parvalue: MSKrealt *
//
// [MSK_getnadouparam]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNadouparam(
	paramname string,
	parvalue *float64,
) res.Code {
	c_paramname := C.CString(paramname)
	defer C.free(unsafe.Pointer(c_paramname))

	return res.Code(
		C.MSK_getnadouparam(
			task.task,
			c_paramname,
			(*C.MSKrealt)(parvalue),
		),
	)
}

// GetNaintinf is wrapping [MSK_getnaintinf]
//
// [MSK_getnaintinf] has following parameters
//   - task: MSKtask_t
//   - infitemname: const char *
//   - ivalue: MSKint32t *
//
// [MSK_getnaintinf]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNaintinf(
	infitemname string,
	ivalue *int32,
) res.Code {
	c_infitemname := C.CString(infitemname)
	defer C.free(unsafe.Pointer(c_infitemname))

	return res.Code(
		C.MSK_getnaintinf(
			task.task,
			c_infitemname,
			(*C.MSKint32t)(ivalue),
		),
	)
}

// GetNaintparam is wrapping [MSK_getnaintparam]
//
// [MSK_getnaintparam] has following parameters
//   - task: MSKtask_t
//   - paramname: const char *
//   - parvalue: MSKint32t *
//
// [MSK_getnaintparam]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNaintparam(
	paramname string,
	parvalue *int32,
) res.Code {
	c_paramname := C.CString(paramname)
	defer C.free(unsafe.Pointer(c_paramname))

	return res.Code(
		C.MSK_getnaintparam(
			task.task,
			c_paramname,
			(*C.MSKint32t)(parvalue),
		),
	)
}

// GetNastrparam is wrapping [MSK_getnastrparam]
//
// [MSK_getnastrparam] has following parameters
//   - task: MSKtask_t
//   - paramname: const char *
//   - sizeparamname: MSKint32t
//   - len: MSKint32t *
//   - parvalue: char *
//
// [MSK_getnastrparam]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNastrparam(
	paramname string,
	sizeparamname int32,
	len *int32,
	parvalue *byte,
) res.Code {
	c_paramname := C.CString(paramname)
	defer C.free(unsafe.Pointer(c_paramname))

	return res.Code(
		C.MSK_getnastrparam(
			task.task,
			c_paramname,
			C.MSKint32t(sizeparamname),
			(*C.MSKint32t)(len),
			(*C.char)(unsafe.Pointer(parvalue)),
		),
	)
}

// GetNumAcc is wrapping [MSK_getnumacc]
//
// [MSK_getnumacc] has following parameters
//   - task: MSKtask_t
//   - num: MSKint64t *
//
// [MSK_getnumacc]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumAcc() (r res.Code, num int64) {
	r = res.Code(
		C.MSK_getnumacc(
			task.task,
			(*C.MSKint64t)(&num),
		),
	)

	return
}

// GetNumAfe is wrapping [MSK_getnumafe],
// gets the number of constraints in the task.
//
// [MSK_getnumafe] has following parameters
//   - task: MSKtask_t
//   - numafe: MSKint64t *
//
// [MSK_getnumafe]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumAfe() (r res.Code, numafe int64) {
	r = res.Code(
		C.MSK_getnumafe(
			task.task,
			(*C.MSKint64t)(&numafe),
		),
	)

	return
}

// GetNumAnz is wrapping [MSK_getnumanz]
//
// [MSK_getnumanz] has following parameters
//   - task: MSKtask_t
//   - numanz: MSKint32t *
//
// [MSK_getnumanz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumAnz() (r res.Code, numanz int32) {
	r = res.Code(
		C.MSK_getnumanz(
			task.task,
			(*C.MSKint32t)(&numanz),
		),
	)

	return
}

// GetNumAnz64 is wrapping [MSK_getnumanz64]
//
// [MSK_getnumanz64] has following parameters
//   - task: MSKtask_t
//   - numanz: MSKint64t *
//
// [MSK_getnumanz64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumAnz64() (r res.Code, numanz int64) {
	r = res.Code(
		C.MSK_getnumanz64(
			task.task,
			(*C.MSKint64t)(&numanz),
		),
	)

	return
}

// GetNumBarablocktriplets is wrapping [MSK_getnumbarablocktriplets]
//
// [MSK_getnumbarablocktriplets] has following parameters
//   - task: MSKtask_t
//   - num: MSKint64t *
//
// [MSK_getnumbarablocktriplets]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumBarablocktriplets() (r res.Code, num int64) {
	r = res.Code(
		C.MSK_getnumbarablocktriplets(
			task.task,
			(*C.MSKint64t)(&num),
		),
	)

	return
}

// GetNumBaranz is wrapping [MSK_getnumbaranz]
//
// [MSK_getnumbaranz] has following parameters
//   - task: MSKtask_t
//   - nz: MSKint64t *
//
// [MSK_getnumbaranz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumBaranz() (r res.Code, nz int64) {
	r = res.Code(
		C.MSK_getnumbaranz(
			task.task,
			(*C.MSKint64t)(&nz),
		),
	)

	return
}

// GetNumBarcblocktriplets is wrapping [MSK_getnumbarcblocktriplets]
//
// [MSK_getnumbarcblocktriplets] has following parameters
//   - task: MSKtask_t
//   - num: MSKint64t *
//
// [MSK_getnumbarcblocktriplets]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumBarcblocktriplets() (r res.Code, num int64) {
	r = res.Code(
		C.MSK_getnumbarcblocktriplets(
			task.task,
			(*C.MSKint64t)(&num),
		),
	)

	return
}

// GetNumBarcnz is wrapping [MSK_getnumbarcnz]
//
// [MSK_getnumbarcnz] has following parameters
//   - task: MSKtask_t
//   - nz: MSKint64t *
//
// [MSK_getnumbarcnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumBarcnz() (r res.Code, nz int64) {
	r = res.Code(
		C.MSK_getnumbarcnz(
			task.task,
			(*C.MSKint64t)(&nz),
		),
	)

	return
}

// GetNumBarvar is wrapping [MSK_getnumbarvar]
//
// [MSK_getnumbarvar] has following parameters
//   - task: MSKtask_t
//   - numbarvar: MSKint32t *
//
// [MSK_getnumbarvar]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumBarvar() (r res.Code, numbarvar int32) {
	r = res.Code(
		C.MSK_getnumbarvar(
			task.task,
			(*C.MSKint32t)(&numbarvar),
		),
	)

	return
}

// GetNumCon is wrapping [MSK_getnumcon],
// gets the number of linear constraints in the task.
//
// [MSK_getnumcon] has following parameters
//   - task: MSKtask_t
//   - numcon: MSKint32t *
//
// [MSK_getnumcon]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumCon() (r res.Code, numcon int32) {
	r = res.Code(
		C.MSK_getnumcon(
			task.task,
			(*C.MSKint32t)(&numcon),
		),
	)

	return
}

// GetNumCone is wrapping [MSK_getnumcone]
//
// [MSK_getnumcone] has following parameters
//   - task: MSKtask_t
//   - numcone: MSKint32t *
//
// [MSK_getnumcone]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumCone() (r res.Code, numcone int32) {
	r = res.Code(
		C.MSK_getnumcone(
			task.task,
			(*C.MSKint32t)(&numcone),
		),
	)

	return
}

// GetNumConemem is wrapping [MSK_getnumconemem]
//
// [MSK_getnumconemem] has following parameters
//   - task: MSKtask_t
//   - k: MSKint32t
//   - nummem: MSKint32t *
//
// [MSK_getnumconemem]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumConemem(
	k int32,
) (r res.Code, nummem int32) {
	r = res.Code(
		C.MSK_getnumconemem(
			task.task,
			C.MSKint32t(k),
			(*C.MSKint32t)(&nummem),
		),
	)

	return
}

// GetNumDjc is wrapping [MSK_getnumdjc]
//
// [MSK_getnumdjc] has following parameters
//   - task: MSKtask_t
//   - num: MSKint64t *
//
// [MSK_getnumdjc]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumDjc() (r res.Code, num int64) {
	r = res.Code(
		C.MSK_getnumdjc(
			task.task,
			(*C.MSKint64t)(&num),
		),
	)

	return
}

// GetNumDomain is wrapping [MSK_getnumdomain]
//
// [MSK_getnumdomain] has following parameters
//   - task: MSKtask_t
//   - numdomain: MSKint64t *
//
// [MSK_getnumdomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumDomain() (r res.Code, numdomain int64) {
	r = res.Code(
		C.MSK_getnumdomain(
			task.task,
			(*C.MSKint64t)(&numdomain),
		),
	)

	return
}

// GetNumIntvar is wrapping [MSK_getnumintvar]
//
// [MSK_getnumintvar] has following parameters
//   - task: MSKtask_t
//   - numintvar: MSKint32t *
//
// [MSK_getnumintvar]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumIntvar() (r res.Code, numintvar int32) {
	r = res.Code(
		C.MSK_getnumintvar(
			task.task,
			(*C.MSKint32t)(&numintvar),
		),
	)

	return
}

// GetNumParam is wrapping [MSK_getnumparam]
//
// [MSK_getnumparam] has following parameters
//   - task: MSKtask_t
//   - partype: MSKparametertypee
//   - numparam: MSKint32t *
//
// [MSK_getnumparam]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumParam(
	partype ParameterType,
) (r res.Code, numparam int32) {
	r = res.Code(
		C.MSK_getnumparam(
			task.task,
			C.MSKparametertypee(partype),
			(*C.MSKint32t)(&numparam),
		),
	)

	return
}

// GetNumQconknz is wrapping [MSK_getnumqconknz]
//
// [MSK_getnumqconknz] has following parameters
//   - task: MSKtask_t
//   - k: MSKint32t
//   - numqcnz: MSKint32t *
//
// [MSK_getnumqconknz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumQconknz(
	k int32,
) (r res.Code, numqcnz int32) {
	r = res.Code(
		C.MSK_getnumqconknz(
			task.task,
			C.MSKint32t(k),
			(*C.MSKint32t)(&numqcnz),
		),
	)

	return
}

// GetNumQconknz64 is wrapping [MSK_getnumqconknz64]
//
// [MSK_getnumqconknz64] has following parameters
//   - task: MSKtask_t
//   - k: MSKint32t
//   - numqcnz: MSKint64t *
//
// [MSK_getnumqconknz64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumQconknz64(
	k int32,
) (r res.Code, numqcnz int64) {
	r = res.Code(
		C.MSK_getnumqconknz64(
			task.task,
			C.MSKint32t(k),
			(*C.MSKint64t)(&numqcnz),
		),
	)

	return
}

// GetNumQobjnz is wrapping [MSK_getnumqobjnz]
//
// [MSK_getnumqobjnz] has following parameters
//   - task: MSKtask_t
//   - numqonz: MSKint32t *
//
// [MSK_getnumqobjnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumQobjnz() (r res.Code, numqonz int32) {
	r = res.Code(
		C.MSK_getnumqobjnz(
			task.task,
			(*C.MSKint32t)(&numqonz),
		),
	)

	return
}

// GetNumQobjnz64 is wrapping [MSK_getnumqobjnz64]
//
// [MSK_getnumqobjnz64] has following parameters
//   - task: MSKtask_t
//   - numqonz: MSKint64t *
//
// [MSK_getnumqobjnz64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumQobjnz64() (r res.Code, numqonz int64) {
	r = res.Code(
		C.MSK_getnumqobjnz64(
			task.task,
			(*C.MSKint64t)(&numqonz),
		),
	)

	return
}

// GetNumSymmat is wrapping [MSK_getnumsymmat]
//
// [MSK_getnumsymmat] has following parameters
//   - task: MSKtask_t
//   - num: MSKint64t *
//
// [MSK_getnumsymmat]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumSymmat() (r res.Code, num int64) {
	r = res.Code(
		C.MSK_getnumsymmat(
			task.task,
			(*C.MSKint64t)(&num),
		),
	)

	return
}

// GetNumVar is wrapping [MSK_getnumvar],
// gets the number of variables in the task.
//
// [MSK_getnumvar] has following parameters
//   - task: MSKtask_t
//   - numvar: MSKint32t *
//
// [MSK_getnumvar]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetNumVar() (r res.Code, numvar int32) {
	r = res.Code(
		C.MSK_getnumvar(
			task.task,
			(*C.MSKint32t)(&numvar),
		),
	)

	return
}

// GetObjName is wrapping [MSK_getobjname]
//
// [MSK_getobjname] has following parameters
//   - task: MSKtask_t
//   - sizeobjname: MSKint32t
//   - objname: char *
//
// [MSK_getobjname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetObjName(
	sizeobjname int32,
	objname *byte,
) res.Code {
	return res.Code(
		C.MSK_getobjname(
			task.task,
			C.MSKint32t(sizeobjname),
			(*C.char)(unsafe.Pointer(objname)),
		),
	)
}

// GetObjnamelen is wrapping [MSK_getobjnamelen]
//
// [MSK_getobjnamelen] has following parameters
//   - task: MSKtask_t
//   - len: MSKint32t *
//
// [MSK_getobjnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetObjnamelen(
	len *int32,
) res.Code {
	return res.Code(
		C.MSK_getobjnamelen(
			task.task,
			(*C.MSKint32t)(len),
		),
	)
}

// GetObjsense is wrapping [MSK_getobjsense]
//
// [MSK_getobjsense] has following parameters
//   - task: MSKtask_t
//   - sense: MSKobjsensee *
//
// [MSK_getobjsense]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetObjsense(
	sense *ObjectiveSense,
) res.Code {
	return res.Code(
		C.MSK_getobjsense(
			task.task,
			(*C.MSKobjsensee)(sense),
		),
	)
}

// GetParammax is wrapping [MSK_getparammax]
//
// [MSK_getparammax] has following parameters
//   - task: MSKtask_t
//   - partype: MSKparametertypee
//   - parammax: MSKint32t *
//
// [MSK_getparammax]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetParammax(
	partype ParameterType,
	parammax *int32,
) res.Code {
	return res.Code(
		C.MSK_getparammax(
			task.task,
			C.MSKparametertypee(partype),
			(*C.MSKint32t)(parammax),
		),
	)
}

// GetParamName is wrapping [MSK_getparamname]
//
// [MSK_getparamname] has following parameters
//   - task: MSKtask_t
//   - partype: MSKparametertypee
//   - param: MSKint32t
//   - parname: char *
//
// [MSK_getparamname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetParamName(
	partype ParameterType,
	param int32,
	parname *byte,
) res.Code {
	return res.Code(
		C.MSK_getparamname(
			task.task,
			C.MSKparametertypee(partype),
			C.MSKint32t(param),
			(*C.char)(unsafe.Pointer(parname)),
		),
	)
}

// GetPowerdomainalpha is wrapping [MSK_getpowerdomainalpha]
//
// [MSK_getpowerdomainalpha] has following parameters
//   - task: MSKtask_t
//   - domidx: MSKint64t
//   - alpha: MSKrealt *
//
// [MSK_getpowerdomainalpha]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetPowerdomainalpha(
	domidx int64,
	alpha *float64,
) res.Code {
	return res.Code(
		C.MSK_getpowerdomainalpha(
			task.task,
			C.MSKint64t(domidx),
			(*C.MSKrealt)(alpha),
		),
	)
}

// GetPowerdomaininfo is wrapping [MSK_getpowerdomaininfo]
//
// [MSK_getpowerdomaininfo] has following parameters
//   - task: MSKtask_t
//   - domidx: MSKint64t
//   - n: MSKint64t *
//   - nleft: MSKint64t *
//
// [MSK_getpowerdomaininfo]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetPowerdomaininfo(
	domidx int64,
	n *int64,
	nleft *int64,
) res.Code {
	return res.Code(
		C.MSK_getpowerdomaininfo(
			task.task,
			C.MSKint64t(domidx),
			(*C.MSKint64t)(n),
			(*C.MSKint64t)(nleft),
		),
	)
}

// GetPrimalobj is wrapping [MSK_getprimalobj]
//
// [MSK_getprimalobj] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - primalobj: MSKrealt *
//
// [MSK_getprimalobj]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetPrimalobj(
	whichsol SolType,
	primalobj *float64,
) res.Code {
	return res.Code(
		C.MSK_getprimalobj(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(primalobj),
		),
	)
}

// GetPrimalsolutionnorms is wrapping [MSK_getprimalsolutionnorms]
//
// [MSK_getprimalsolutionnorms] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - nrmxc: MSKrealt *
//   - nrmxx: MSKrealt *
//   - nrmbarx: MSKrealt *
//
// [MSK_getprimalsolutionnorms]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetPrimalsolutionnorms(
	whichsol SolType,
	nrmxc *float64,
	nrmxx *float64,
	nrmbarx *float64,
) res.Code {
	return res.Code(
		C.MSK_getprimalsolutionnorms(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(nrmxc),
			(*C.MSKrealt)(nrmxx),
			(*C.MSKrealt)(nrmbarx),
		),
	)
}

// GetProbtype is wrapping [MSK_getprobtype]
//
// [MSK_getprobtype] has following parameters
//   - task: MSKtask_t
//   - probtype: MSKproblemtypee *
//
// [MSK_getprobtype]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetProbtype(
	probtype *ProblemType,
) res.Code {
	return res.Code(
		C.MSK_getprobtype(
			task.task,
			(*C.MSKproblemtypee)(probtype),
		),
	)
}

// GetProsta is wrapping [MSK_getprosta]
//
// [MSK_getprosta] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - problemsta: MSKprostae *
//
// [MSK_getprosta]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetProsta(
	whichsol SolType,
	problemsta *ProSta,
) res.Code {
	return res.Code(
		C.MSK_getprosta(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKprostae)(problemsta),
		),
	)
}

// GetPviolacc is wrapping [MSK_getpviolacc]
//
// [MSK_getpviolacc] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - numaccidx: MSKint64t
//   - accidxlist: const MSKint64t *
//   - viol: MSKrealt *
//
// [MSK_getpviolacc]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetPviolacc(
	whichsol SolType,
	numaccidx int64,
	accidxlist *int64,
	viol *float64,
) res.Code {
	return res.Code(
		C.MSK_getpviolacc(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint64t(numaccidx),
			(*C.MSKint64t)(accidxlist),
			(*C.MSKrealt)(viol),
		),
	)
}

// GetPviolbarvar is wrapping [MSK_getpviolbarvar]
//
// [MSK_getpviolbarvar] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - num: MSKint32t
//   - sub: const MSKint32t *
//   - viol: MSKrealt *
//
// [MSK_getpviolbarvar]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetPviolbarvar(
	whichsol SolType,
	num int32,
	sub *int32,
	viol *float64,
) res.Code {
	return res.Code(
		C.MSK_getpviolbarvar(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(num),
			(*C.MSKint32t)(sub),
			(*C.MSKrealt)(viol),
		),
	)
}

// GetPviolcon is wrapping [MSK_getpviolcon]
//
// [MSK_getpviolcon] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - num: MSKint32t
//   - sub: const MSKint32t *
//   - viol: MSKrealt *
//
// [MSK_getpviolcon]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetPviolcon(
	whichsol SolType,
	num int32,
	sub *int32,
	viol *float64,
) res.Code {
	return res.Code(
		C.MSK_getpviolcon(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(num),
			(*C.MSKint32t)(sub),
			(*C.MSKrealt)(viol),
		),
	)
}

// GetPviolcones is wrapping [MSK_getpviolcones]
//
// [MSK_getpviolcones] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - num: MSKint32t
//   - sub: const MSKint32t *
//   - viol: MSKrealt *
//
// [MSK_getpviolcones]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetPviolcones(
	whichsol SolType,
	num int32,
	sub *int32,
	viol *float64,
) res.Code {
	return res.Code(
		C.MSK_getpviolcones(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(num),
			(*C.MSKint32t)(sub),
			(*C.MSKrealt)(viol),
		),
	)
}

// GetPvioldjc is wrapping [MSK_getpvioldjc]
//
// [MSK_getpvioldjc] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - numdjcidx: MSKint64t
//   - djcidxlist: const MSKint64t *
//   - viol: MSKrealt *
//
// [MSK_getpvioldjc]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetPvioldjc(
	whichsol SolType,
	numdjcidx int64,
	djcidxlist *int64,
	viol *float64,
) res.Code {
	return res.Code(
		C.MSK_getpvioldjc(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint64t(numdjcidx),
			(*C.MSKint64t)(djcidxlist),
			(*C.MSKrealt)(viol),
		),
	)
}

// GetPviolvar is wrapping [MSK_getpviolvar]
//
// [MSK_getpviolvar] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - num: MSKint32t
//   - sub: const MSKint32t *
//   - viol: MSKrealt *
//
// [MSK_getpviolvar]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetPviolvar(
	whichsol SolType,
	num int32,
	sub *int32,
	viol *float64,
) res.Code {
	return res.Code(
		C.MSK_getpviolvar(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(num),
			(*C.MSKint32t)(sub),
			(*C.MSKrealt)(viol),
		),
	)
}

// GetQconk is wrapping [MSK_getqconk]
//
// [MSK_getqconk] has following parameters
//   - task: MSKtask_t
//   - k: MSKint32t
//   - maxnumqcnz: MSKint32t
//   - numqcnz: MSKint32t *
//   - qcsubi: MSKint32t *
//   - qcsubj: MSKint32t *
//   - qcval: MSKrealt *
//
// [MSK_getqconk]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetQconk(
	k int32,
	maxnumqcnz int32,
	numqcnz *int32,
	qcsubi *int32,
	qcsubj *int32,
	qcval *float64,
) res.Code {
	return res.Code(
		C.MSK_getqconk(
			task.task,
			C.MSKint32t(k),
			C.MSKint32t(maxnumqcnz),
			(*C.MSKint32t)(numqcnz),
			(*C.MSKint32t)(qcsubi),
			(*C.MSKint32t)(qcsubj),
			(*C.MSKrealt)(qcval),
		),
	)
}

// GetQconk64 is wrapping [MSK_getqconk64]
//
// [MSK_getqconk64] has following parameters
//   - task: MSKtask_t
//   - k: MSKint32t
//   - maxnumqcnz: MSKint64t
//   - numqcnz: MSKint64t *
//   - qcsubi: MSKint32t *
//   - qcsubj: MSKint32t *
//   - qcval: MSKrealt *
//
// [MSK_getqconk64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetQconk64(
	k int32,
	maxnumqcnz int64,
	numqcnz *int64,
	qcsubi *int32,
	qcsubj *int32,
	qcval *float64,
) res.Code {
	return res.Code(
		C.MSK_getqconk64(
			task.task,
			C.MSKint32t(k),
			C.MSKint64t(maxnumqcnz),
			(*C.MSKint64t)(numqcnz),
			(*C.MSKint32t)(qcsubi),
			(*C.MSKint32t)(qcsubj),
			(*C.MSKrealt)(qcval),
		),
	)
}

// GetQobj is wrapping [MSK_getqobj]
//
// [MSK_getqobj] has following parameters
//   - task: MSKtask_t
//   - maxnumqonz: MSKint32t
//   - numqonz: MSKint32t *
//   - qosubi: MSKint32t *
//   - qosubj: MSKint32t *
//   - qoval: MSKrealt *
//
// [MSK_getqobj]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetQobj(
	maxnumqonz int32,
	numqonz *int32,
	qosubi *int32,
	qosubj *int32,
	qoval *float64,
) res.Code {
	return res.Code(
		C.MSK_getqobj(
			task.task,
			C.MSKint32t(maxnumqonz),
			(*C.MSKint32t)(numqonz),
			(*C.MSKint32t)(qosubi),
			(*C.MSKint32t)(qosubj),
			(*C.MSKrealt)(qoval),
		),
	)
}

// GetQobj64 is wrapping [MSK_getqobj64]
//
// [MSK_getqobj64] has following parameters
//   - task: MSKtask_t
//   - maxnumqonz: MSKint64t
//   - numqonz: MSKint64t *
//   - qosubi: MSKint32t *
//   - qosubj: MSKint32t *
//   - qoval: MSKrealt *
//
// [MSK_getqobj64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetQobj64(
	maxnumqonz int64,
	numqonz *int64,
	qosubi *int32,
	qosubj *int32,
	qoval *float64,
) res.Code {
	return res.Code(
		C.MSK_getqobj64(
			task.task,
			C.MSKint64t(maxnumqonz),
			(*C.MSKint64t)(numqonz),
			(*C.MSKint32t)(qosubi),
			(*C.MSKint32t)(qosubj),
			(*C.MSKrealt)(qoval),
		),
	)
}

// GetQobjij is wrapping [MSK_getqobjij]
//
// [MSK_getqobjij] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - j: MSKint32t
//   - qoij: MSKrealt *
//
// [MSK_getqobjij]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetQobjij(
	i int32,
	j int32,
	qoij *float64,
) res.Code {
	return res.Code(
		C.MSK_getqobjij(
			task.task,
			C.MSKint32t(i),
			C.MSKint32t(j),
			(*C.MSKrealt)(qoij),
		),
	)
}

// GetReducedcosts is wrapping [MSK_getreducedcosts]
//
// [MSK_getreducedcosts] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - first: MSKint32t
//   - last: MSKint32t
//   - redcosts: MSKrealt *
//
// [MSK_getreducedcosts]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetReducedcosts(
	whichsol SolType,
	first int32,
	last int32,
	redcosts *float64,
) res.Code {
	return res.Code(
		C.MSK_getreducedcosts(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKrealt)(redcosts),
		),
	)
}

// GetSkc is wrapping [MSK_getskc]
//
// [MSK_getskc] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - skc: MSKstakeye *
//
// [MSK_getskc]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSkc(
	whichsol SolType,
	skc *StaKey,
) res.Code {
	return res.Code(
		C.MSK_getskc(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKstakeye)(skc),
		),
	)
}

// GetSkcSlice is wrapping [MSK_getskcslice]
//
// [MSK_getskcslice] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - first: MSKint32t
//   - last: MSKint32t
//   - skc: MSKstakeye *
//
// [MSK_getskcslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSkcSlice(
	whichsol SolType,
	first int32,
	last int32,
	skc *StaKey,
) res.Code {
	return res.Code(
		C.MSK_getskcslice(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKstakeye)(skc),
		),
	)
}

// GetSkn is wrapping [MSK_getskn]
//
// [MSK_getskn] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - skn: MSKstakeye *
//
// [MSK_getskn]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSkn(
	whichsol SolType,
	skn *StaKey,
) res.Code {
	return res.Code(
		C.MSK_getskn(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKstakeye)(skn),
		),
	)
}

// GetSkx is wrapping [MSK_getskx]
//
// [MSK_getskx] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - skx: MSKstakeye *
//
// [MSK_getskx]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSkx(
	whichsol SolType,
	skx *StaKey,
) res.Code {
	return res.Code(
		C.MSK_getskx(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKstakeye)(skx),
		),
	)
}

// GetSkxSlice is wrapping [MSK_getskxslice]
//
// [MSK_getskxslice] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - first: MSKint32t
//   - last: MSKint32t
//   - skx: MSKstakeye *
//
// [MSK_getskxslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSkxSlice(
	whichsol SolType,
	first int32,
	last int32,
	skx *StaKey,
) res.Code {
	return res.Code(
		C.MSK_getskxslice(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKstakeye)(skx),
		),
	)
}

// GetSlc is wrapping [MSK_getslc]
//
// [MSK_getslc] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - slc: MSKrealt *
//
// [MSK_getslc]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSlc(
	whichsol SolType,
	slc *float64,
) res.Code {
	return res.Code(
		C.MSK_getslc(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(slc),
		),
	)
}

// GetSlcSlice is wrapping [MSK_getslcslice]
//
// [MSK_getslcslice] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - first: MSKint32t
//   - last: MSKint32t
//   - slc: MSKrealt *
//
// [MSK_getslcslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSlcSlice(
	whichsol SolType,
	first int32,
	last int32,
	slc *float64,
) res.Code {
	return res.Code(
		C.MSK_getslcslice(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKrealt)(slc),
		),
	)
}

// GetSlx is wrapping [MSK_getslx]
//
// [MSK_getslx] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - slx: MSKrealt *
//
// [MSK_getslx]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSlx(
	whichsol SolType,
	slx *float64,
) res.Code {
	return res.Code(
		C.MSK_getslx(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(slx),
		),
	)
}

// GetSlxSlice is wrapping [MSK_getslxslice]
//
// [MSK_getslxslice] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - first: MSKint32t
//   - last: MSKint32t
//   - slx: MSKrealt *
//
// [MSK_getslxslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSlxSlice(
	whichsol SolType,
	first int32,
	last int32,
	slx *float64,
) res.Code {
	return res.Code(
		C.MSK_getslxslice(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKrealt)(slx),
		),
	)
}

// GetSnx is wrapping [MSK_getsnx]
//
// [MSK_getsnx] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - snx: MSKrealt *
//
// [MSK_getsnx]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSnx(
	whichsol SolType,
	snx *float64,
) res.Code {
	return res.Code(
		C.MSK_getsnx(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(snx),
		),
	)
}

// GetSnxSlice is wrapping [MSK_getsnxslice]
//
// [MSK_getsnxslice] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - first: MSKint32t
//   - last: MSKint32t
//   - snx: MSKrealt *
//
// [MSK_getsnxslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSnxSlice(
	whichsol SolType,
	first int32,
	last int32,
	snx *float64,
) res.Code {
	return res.Code(
		C.MSK_getsnxslice(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKrealt)(snx),
		),
	)
}

// GetSolsta is wrapping [MSK_getsolsta]
//
// [MSK_getsolsta] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - solutionsta: MSKsolstae *
//
// [MSK_getsolsta]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSolsta(
	whichsol SolType,
	solutionsta *SolSta,
) res.Code {
	return res.Code(
		C.MSK_getsolsta(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKsolstae)(solutionsta),
		),
	)
}

// GetSolution is wrapping [MSK_getsolution]
//
// [MSK_getsolution] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - problemsta: MSKprostae *
//   - solutionsta: MSKsolstae *
//   - skc: MSKstakeye *
//   - skx: MSKstakeye *
//   - skn: MSKstakeye *
//   - xc: MSKrealt *
//   - xx: MSKrealt *
//   - y: MSKrealt *
//   - slc: MSKrealt *
//   - suc: MSKrealt *
//   - slx: MSKrealt *
//   - sux: MSKrealt *
//   - snx: MSKrealt *
//
// [MSK_getsolution]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSolution(
	whichsol SolType,
	problemsta *ProSta,
	solutionsta *SolSta,
	skc *StaKey,
	skx *StaKey,
	skn *StaKey,
	xc *float64,
	xx *float64,
	y *float64,
	slc *float64,
	suc *float64,
	slx *float64,
	sux *float64,
	snx *float64,
) res.Code {
	return res.Code(
		C.MSK_getsolution(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKprostae)(problemsta),
			(*C.MSKsolstae)(solutionsta),
			(*C.MSKstakeye)(skc),
			(*C.MSKstakeye)(skx),
			(*C.MSKstakeye)(skn),
			(*C.MSKrealt)(xc),
			(*C.MSKrealt)(xx),
			(*C.MSKrealt)(y),
			(*C.MSKrealt)(slc),
			(*C.MSKrealt)(suc),
			(*C.MSKrealt)(slx),
			(*C.MSKrealt)(sux),
			(*C.MSKrealt)(snx),
		),
	)
}

// GetSolutioninfo is wrapping [MSK_getsolutioninfo]
//
// [MSK_getsolutioninfo] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - pobj: MSKrealt *
//   - pviolcon: MSKrealt *
//   - pviolvar: MSKrealt *
//   - pviolbarvar: MSKrealt *
//   - pviolcone: MSKrealt *
//   - pviolitg: MSKrealt *
//   - dobj: MSKrealt *
//   - dviolcon: MSKrealt *
//   - dviolvar: MSKrealt *
//   - dviolbarvar: MSKrealt *
//   - dviolcone: MSKrealt *
//
// [MSK_getsolutioninfo]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSolutioninfo(
	whichsol SolType,
	pobj *float64,
	pviolcon *float64,
	pviolvar *float64,
	pviolbarvar *float64,
	pviolcone *float64,
	pviolitg *float64,
	dobj *float64,
	dviolcon *float64,
	dviolvar *float64,
	dviolbarvar *float64,
	dviolcone *float64,
) res.Code {
	return res.Code(
		C.MSK_getsolutioninfo(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(pobj),
			(*C.MSKrealt)(pviolcon),
			(*C.MSKrealt)(pviolvar),
			(*C.MSKrealt)(pviolbarvar),
			(*C.MSKrealt)(pviolcone),
			(*C.MSKrealt)(pviolitg),
			(*C.MSKrealt)(dobj),
			(*C.MSKrealt)(dviolcon),
			(*C.MSKrealt)(dviolvar),
			(*C.MSKrealt)(dviolbarvar),
			(*C.MSKrealt)(dviolcone),
		),
	)
}

// GetSolutioninfoNew is wrapping [MSK_getsolutioninfonew]
//
// [MSK_getsolutioninfonew] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - pobj: MSKrealt *
//   - pviolcon: MSKrealt *
//   - pviolvar: MSKrealt *
//   - pviolbarvar: MSKrealt *
//   - pviolcone: MSKrealt *
//   - pviolacc: MSKrealt *
//   - pvioldjc: MSKrealt *
//   - pviolitg: MSKrealt *
//   - dobj: MSKrealt *
//   - dviolcon: MSKrealt *
//   - dviolvar: MSKrealt *
//   - dviolbarvar: MSKrealt *
//   - dviolcone: MSKrealt *
//   - dviolacc: MSKrealt *
//
// [MSK_getsolutioninfonew]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSolutioninfoNew(
	whichsol SolType,
	pobj *float64,
	pviolcon *float64,
	pviolvar *float64,
	pviolbarvar *float64,
	pviolcone *float64,
	pviolacc *float64,
	pvioldjc *float64,
	pviolitg *float64,
	dobj *float64,
	dviolcon *float64,
	dviolvar *float64,
	dviolbarvar *float64,
	dviolcone *float64,
	dviolacc *float64,
) res.Code {
	return res.Code(
		C.MSK_getsolutioninfonew(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(pobj),
			(*C.MSKrealt)(pviolcon),
			(*C.MSKrealt)(pviolvar),
			(*C.MSKrealt)(pviolbarvar),
			(*C.MSKrealt)(pviolcone),
			(*C.MSKrealt)(pviolacc),
			(*C.MSKrealt)(pvioldjc),
			(*C.MSKrealt)(pviolitg),
			(*C.MSKrealt)(dobj),
			(*C.MSKrealt)(dviolcon),
			(*C.MSKrealt)(dviolvar),
			(*C.MSKrealt)(dviolbarvar),
			(*C.MSKrealt)(dviolcone),
			(*C.MSKrealt)(dviolacc),
		),
	)
}

// GetSolutionNew is wrapping [MSK_getsolutionnew]
//
// [MSK_getsolutionnew] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - problemsta: MSKprostae *
//   - solutionsta: MSKsolstae *
//   - skc: MSKstakeye *
//   - skx: MSKstakeye *
//   - skn: MSKstakeye *
//   - xc: MSKrealt *
//   - xx: MSKrealt *
//   - y: MSKrealt *
//   - slc: MSKrealt *
//   - suc: MSKrealt *
//   - slx: MSKrealt *
//   - sux: MSKrealt *
//   - snx: MSKrealt *
//   - doty: MSKrealt *
//
// [MSK_getsolutionnew]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSolutionNew(
	whichsol SolType,
	problemsta *ProSta,
	solutionsta *SolSta,
	skc *StaKey,
	skx *StaKey,
	skn *StaKey,
	xc *float64,
	xx *float64,
	y *float64,
	slc *float64,
	suc *float64,
	slx *float64,
	sux *float64,
	snx *float64,
	doty *float64,
) res.Code {
	return res.Code(
		C.MSK_getsolutionnew(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKprostae)(problemsta),
			(*C.MSKsolstae)(solutionsta),
			(*C.MSKstakeye)(skc),
			(*C.MSKstakeye)(skx),
			(*C.MSKstakeye)(skn),
			(*C.MSKrealt)(xc),
			(*C.MSKrealt)(xx),
			(*C.MSKrealt)(y),
			(*C.MSKrealt)(slc),
			(*C.MSKrealt)(suc),
			(*C.MSKrealt)(slx),
			(*C.MSKrealt)(sux),
			(*C.MSKrealt)(snx),
			(*C.MSKrealt)(doty),
		),
	)
}

// GetSolutionSlice is wrapping [MSK_getsolutionslice]
//
// [MSK_getsolutionslice] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - solitem: MSKsoliteme
//   - first: MSKint32t
//   - last: MSKint32t
//   - values: MSKrealt *
//
// [MSK_getsolutionslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSolutionSlice(
	whichsol SolType,
	solitem SolItem,
	first int32,
	last int32,
	values *float64,
) res.Code {
	return res.Code(
		C.MSK_getsolutionslice(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKsoliteme(solitem),
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKrealt)(values),
		),
	)
}

// GetSparsesymmat is wrapping [MSK_getsparsesymmat]
//
// [MSK_getsparsesymmat] has following parameters
//   - task: MSKtask_t
//   - idx: MSKint64t
//   - maxlen: MSKint64t
//   - subi: MSKint32t *
//   - subj: MSKint32t *
//   - valij: MSKrealt *
//
// [MSK_getsparsesymmat]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSparsesymmat(
	idx int64,
	maxlen int64,
	subi *int32,
	subj *int32,
	valij *float64,
) res.Code {
	return res.Code(
		C.MSK_getsparsesymmat(
			task.task,
			C.MSKint64t(idx),
			C.MSKint64t(maxlen),
			(*C.MSKint32t)(subi),
			(*C.MSKint32t)(subj),
			(*C.MSKrealt)(valij),
		),
	)
}

// GetStrparam is wrapping [MSK_getstrparam]
//
// [MSK_getstrparam] has following parameters
//   - task: MSKtask_t
//   - param: MSKsparame
//   - maxlen: MSKint32t
//   - len: MSKint32t *
//   - parvalue: char *
//
// [MSK_getstrparam]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetStrparam(
	param SParam,
	maxlen int32,
	len *int32,
	parvalue *byte,
) res.Code {
	return res.Code(
		C.MSK_getstrparam(
			task.task,
			C.MSKsparame(param),
			C.MSKint32t(maxlen),
			(*C.MSKint32t)(len),
			(*C.char)(unsafe.Pointer(parvalue)),
		),
	)
}

// GetStrparamlen is wrapping [MSK_getstrparamlen]
//
// [MSK_getstrparamlen] has following parameters
//   - task: MSKtask_t
//   - param: MSKsparame
//   - len: MSKint32t *
//
// [MSK_getstrparamlen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetStrparamlen(
	param SParam,
	len *int32,
) res.Code {
	return res.Code(
		C.MSK_getstrparamlen(
			task.task,
			C.MSKsparame(param),
			(*C.MSKint32t)(len),
		),
	)
}

// GetSuc is wrapping [MSK_getsuc]
//
// [MSK_getsuc] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - suc: MSKrealt *
//
// [MSK_getsuc]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSuc(
	whichsol SolType,
	suc *float64,
) res.Code {
	return res.Code(
		C.MSK_getsuc(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(suc),
		),
	)
}

// GetSucSlice is wrapping [MSK_getsucslice]
//
// [MSK_getsucslice] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - first: MSKint32t
//   - last: MSKint32t
//   - suc: MSKrealt *
//
// [MSK_getsucslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSucSlice(
	whichsol SolType,
	first int32,
	last int32,
	suc *float64,
) res.Code {
	return res.Code(
		C.MSK_getsucslice(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKrealt)(suc),
		),
	)
}

// GetSux is wrapping [MSK_getsux]
//
// [MSK_getsux] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - sux: MSKrealt *
//
// [MSK_getsux]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSux(
	whichsol SolType,
	sux *float64,
) res.Code {
	return res.Code(
		C.MSK_getsux(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(sux),
		),
	)
}

// GetSuxSlice is wrapping [MSK_getsuxslice]
//
// [MSK_getsuxslice] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - first: MSKint32t
//   - last: MSKint32t
//   - sux: MSKrealt *
//
// [MSK_getsuxslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSuxSlice(
	whichsol SolType,
	first int32,
	last int32,
	sux *float64,
) res.Code {
	return res.Code(
		C.MSK_getsuxslice(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKrealt)(sux),
		),
	)
}

// GetSymbcon is wrapping [MSK_getsymbcon]
//
// [MSK_getsymbcon] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - sizevalue: MSKint32t
//   - name: char *
//   - value: MSKint32t *
//
// [MSK_getsymbcon]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSymbcon(
	i int32,
	sizevalue int32,
	name *byte,
	value *int32,
) res.Code {
	return res.Code(
		C.MSK_getsymbcon(
			task.task,
			C.MSKint32t(i),
			C.MSKint32t(sizevalue),
			(*C.char)(unsafe.Pointer(name)),
			(*C.MSKint32t)(value),
		),
	)
}

// GetSymmatinfo is wrapping [MSK_getsymmatinfo]
//
// [MSK_getsymmatinfo] has following parameters
//   - task: MSKtask_t
//   - idx: MSKint64t
//   - dim: MSKint32t *
//   - nz: MSKint64t *
//   - mattype: MSKsymmattypee *
//
// [MSK_getsymmatinfo]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetSymmatinfo(
	idx int64,
	dim *int32,
	nz *int64,
	mattype *SymmatType,
) res.Code {
	return res.Code(
		C.MSK_getsymmatinfo(
			task.task,
			C.MSKint64t(idx),
			(*C.MSKint32t)(dim),
			(*C.MSKint64t)(nz),
			(*C.MSKsymmattypee)(mattype),
		),
	)
}

// GetTaskName is wrapping [MSK_gettaskname]
//
// [MSK_gettaskname] has following parameters
//   - task: MSKtask_t
//   - sizetaskname: MSKint32t
//   - taskname: char *
//
// [MSK_gettaskname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetTaskName(
	sizetaskname int32,
	taskname *byte,
) res.Code {
	return res.Code(
		C.MSK_gettaskname(
			task.task,
			C.MSKint32t(sizetaskname),
			(*C.char)(unsafe.Pointer(taskname)),
		),
	)
}

// GetTasknamelen is wrapping [MSK_gettasknamelen]
//
// [MSK_gettasknamelen] has following parameters
//   - task: MSKtask_t
//   - len: MSKint32t *
//
// [MSK_gettasknamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetTasknamelen(
	len *int32,
) res.Code {
	return res.Code(
		C.MSK_gettasknamelen(
			task.task,
			(*C.MSKint32t)(len),
		),
	)
}

// GetVarbound is wrapping [MSK_getvarbound]
//
// [MSK_getvarbound] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - bk: MSKboundkeye *
//   - bl: MSKrealt *
//   - bu: MSKrealt *
//
// [MSK_getvarbound]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetVarbound(
	i int32,
	bk *BoundKey,
	bl *float64,
	bu *float64,
) res.Code {
	return res.Code(
		C.MSK_getvarbound(
			task.task,
			C.MSKint32t(i),
			(*C.MSKboundkeye)(bk),
			(*C.MSKrealt)(bl),
			(*C.MSKrealt)(bu),
		),
	)
}

// GetVarboundSlice is wrapping [MSK_getvarboundslice]
//
// [MSK_getvarboundslice] has following parameters
//   - task: MSKtask_t
//   - first: MSKint32t
//   - last: MSKint32t
//   - bk: MSKboundkeye *
//   - bl: MSKrealt *
//   - bu: MSKrealt *
//
// [MSK_getvarboundslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetVarboundSlice(
	first int32,
	last int32,
	bk *BoundKey,
	bl *float64,
	bu *float64,
) res.Code {
	return res.Code(
		C.MSK_getvarboundslice(
			task.task,
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKboundkeye)(bk),
			(*C.MSKrealt)(bl),
			(*C.MSKrealt)(bu),
		),
	)
}

// GetVarName is wrapping [MSK_getvarname]
//
// [MSK_getvarname] has following parameters
//   - task: MSKtask_t
//   - j: MSKint32t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getvarname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetVarName(
	j int32,
	sizename int32,
	name *byte,
) res.Code {
	return res.Code(
		C.MSK_getvarname(
			task.task,
			C.MSKint32t(j),
			C.MSKint32t(sizename),
			(*C.char)(unsafe.Pointer(name)),
		),
	)
}

// GetVarnameindex is wrapping [MSK_getvarnameindex]
//
// [MSK_getvarnameindex] has following parameters
//   - task: MSKtask_t
//   - somename: const char *
//   - asgn: MSKint32t *
//   - index: MSKint32t *
//
// [MSK_getvarnameindex]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetVarnameindex(
	somename string,
	asgn *int32,
	index *int32,
) res.Code {
	c_somename := C.CString(somename)
	defer C.free(unsafe.Pointer(c_somename))

	return res.Code(
		C.MSK_getvarnameindex(
			task.task,
			c_somename,
			(*C.MSKint32t)(asgn),
			(*C.MSKint32t)(index),
		),
	)
}

// GetVarnamelen is wrapping [MSK_getvarnamelen]
//
// [MSK_getvarnamelen] has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - len: MSKint32t *
//
// [MSK_getvarnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetVarnamelen(
	i int32,
	len *int32,
) res.Code {
	return res.Code(
		C.MSK_getvarnamelen(
			task.task,
			C.MSKint32t(i),
			(*C.MSKint32t)(len),
		),
	)
}

// GetVartype is wrapping [MSK_getvartype]
//
// [MSK_getvartype] has following parameters
//   - task: MSKtask_t
//   - j: MSKint32t
//   - vartype: MSKvariabletypee *
//
// [MSK_getvartype]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetVartype(
	j int32,
	vartype *VariableType,
) res.Code {
	return res.Code(
		C.MSK_getvartype(
			task.task,
			C.MSKint32t(j),
			(*C.MSKvariabletypee)(vartype),
		),
	)
}

// GetVartypeList is wrapping [MSK_getvartypelist]
//
// [MSK_getvartypelist] has following parameters
//   - task: MSKtask_t
//   - num: MSKint32t
//   - subj: const MSKint32t *
//   - vartype: MSKvariabletypee *
//
// [MSK_getvartypelist]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetVartypeList(
	num int32,
	subj *int32,
	vartype *VariableType,
) res.Code {
	return res.Code(
		C.MSK_getvartypelist(
			task.task,
			C.MSKint32t(num),
			(*C.MSKint32t)(subj),
			(*C.MSKvariabletypee)(vartype),
		),
	)
}

// GetXc is wrapping [MSK_getxc]
//
// [MSK_getxc] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - xc: MSKrealt *
//
// [MSK_getxc]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetXc(
	whichsol SolType,
	xc *float64,
) res.Code {
	return res.Code(
		C.MSK_getxc(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(xc),
		),
	)
}

// GetXcSlice is wrapping [MSK_getxcslice]
//
// [MSK_getxcslice] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - first: MSKint32t
//   - last: MSKint32t
//   - xc: MSKrealt *
//
// [MSK_getxcslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetXcSlice(
	whichsol SolType,
	first int32,
	last int32,
	xc *float64,
) res.Code {
	return res.Code(
		C.MSK_getxcslice(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKrealt)(xc),
		),
	)
}

// GetY is wrapping [MSK_gety]
//
// [MSK_gety] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - y: MSKrealt *
//
// [MSK_gety]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetY(
	whichsol SolType,
	y *float64,
) res.Code {
	return res.Code(
		C.MSK_gety(
			task.task,
			C.MSKsoltypee(whichsol),
			(*C.MSKrealt)(y),
		),
	)
}

// GetYSlice is wrapping [MSK_getyslice]
//
// [MSK_getyslice] has following parameters
//   - task: MSKtask_t
//   - whichsol: MSKsoltypee
//   - first: MSKint32t
//   - last: MSKint32t
//   - y: MSKrealt *
//
// [MSK_getyslice]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) GetYSlice(
	whichsol SolType,
	first int32,
	last int32,
	y *float64,
) res.Code {
	return res.Code(
		C.MSK_getyslice(
			task.task,
			C.MSKsoltypee(whichsol),
			C.MSKint32t(first),
			C.MSKint32t(last),
			(*C.MSKrealt)(y),
		),
	)
}
