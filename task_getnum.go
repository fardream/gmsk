// Automatically generated by github.com/fardream/gen-gmsk
// function deinitions

package gmsk

// #include <stdlib.h> // for C.free
// #include <mosek.h>
import "C"

import (
	"github.com/fardream/gmsk/res"
)

// GetNumAcc is wrapping [MSK_getnumacc]
//
// [MSK_getnumacc] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - num: MSKint64t *
//
// [MSK_getnumacc]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumacc
func (task *Task) GetNumAcc() (r res.Code, num int64) {
	r = res.Code(
		C.MSK_getnumacc(
			task.task,
			(*C.MSKint64t)(&num),
		),
	)

	return
}

// GetNumAfe is wrapping [MSK_getnumafe] and
// gets the number of constraints in the task.
//
// [MSK_getnumafe] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - numafe: MSKint64t *
//
// [MSK_getnumafe]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumafe
func (task *Task) GetNumAfe() (r res.Code, numafe int64) {
	r = res.Code(
		C.MSK_getnumafe(
			task.task,
			(*C.MSKint64t)(&numafe),
		),
	)

	return
}

// GetNumAnz is wrapping [MSK_getnumanz]
//
// [MSK_getnumanz] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - numanz: MSKint32t *
//
// [MSK_getnumanz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumanz
func (task *Task) GetNumAnz() (r res.Code, numanz int32) {
	r = res.Code(
		C.MSK_getnumanz(
			task.task,
			(*C.MSKint32t)(&numanz),
		),
	)

	return
}

// GetNumAnz64 is wrapping [MSK_getnumanz64]
//
// [MSK_getnumanz64] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - numanz: MSKint64t *
//
// [MSK_getnumanz64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumanz64
func (task *Task) GetNumAnz64() (r res.Code, numanz int64) {
	r = res.Code(
		C.MSK_getnumanz64(
			task.task,
			(*C.MSKint64t)(&numanz),
		),
	)

	return
}

// GetNumBarABlockTriplets is wrapping [MSK_getnumbarablocktriplets]
//
// [MSK_getnumbarablocktriplets] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - num: MSKint64t *
//
// [MSK_getnumbarablocktriplets]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumbarablocktriplets
func (task *Task) GetNumBarABlockTriplets() (r res.Code, num int64) {
	r = res.Code(
		C.MSK_getnumbarablocktriplets(
			task.task,
			(*C.MSKint64t)(&num),
		),
	)

	return
}

// GetNumBarANz is wrapping [MSK_getnumbaranz]
//
// [MSK_getnumbaranz] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - nz: MSKint64t *
//
// [MSK_getnumbaranz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumbaranz
func (task *Task) GetNumBarANz() (r res.Code, nz int64) {
	r = res.Code(
		C.MSK_getnumbaranz(
			task.task,
			(*C.MSKint64t)(&nz),
		),
	)

	return
}

// GetNumBarCBlockTriplets is wrapping [MSK_getnumbarcblocktriplets]
//
// [MSK_getnumbarcblocktriplets] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - num: MSKint64t *
//
// [MSK_getnumbarcblocktriplets]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumbarcblocktriplets
func (task *Task) GetNumBarCBlockTriplets() (r res.Code, num int64) {
	r = res.Code(
		C.MSK_getnumbarcblocktriplets(
			task.task,
			(*C.MSKint64t)(&num),
		),
	)

	return
}

// GetNumBarCNz is wrapping [MSK_getnumbarcnz]
//
// [MSK_getnumbarcnz] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - nz: MSKint64t *
//
// [MSK_getnumbarcnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumbarcnz
func (task *Task) GetNumBarCNz() (r res.Code, nz int64) {
	r = res.Code(
		C.MSK_getnumbarcnz(
			task.task,
			(*C.MSKint64t)(&nz),
		),
	)

	return
}

// GetNumBarvar is wrapping [MSK_getnumbarvar]
//
// [MSK_getnumbarvar] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - numbarvar: MSKint32t *
//
// [MSK_getnumbarvar]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumbarvar
func (task *Task) GetNumBarvar() (r res.Code, numbarvar int32) {
	r = res.Code(
		C.MSK_getnumbarvar(
			task.task,
			(*C.MSKint32t)(&numbarvar),
		),
	)

	return
}

// GetNumCon is wrapping [MSK_getnumcon] and
// gets the number of linear constraints in the task.
//
// [MSK_getnumcon] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - numcon: MSKint32t *
//
// [MSK_getnumcon]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumcon
func (task *Task) GetNumCon() (r res.Code, numcon int32) {
	r = res.Code(
		C.MSK_getnumcon(
			task.task,
			(*C.MSKint32t)(&numcon),
		),
	)

	return
}

// GetNumCone is wrapping [MSK_getnumcone]
//
// [MSK_getnumcone] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - numcone: MSKint32t *
//
// [MSK_getnumcone]/GetNumCone is deprecated by mosek and will be removed in a future release.
//
// [MSK_getnumcone]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumcone
func (task *Task) GetNumCone() (r res.Code, numcone int32) {
	r = res.Code(
		C.MSK_getnumcone(
			task.task,
			(*C.MSKint32t)(&numcone),
		),
	)

	return
}

// GetNumConemem is wrapping [MSK_getnumconemem]
//
// [MSK_getnumconemem] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - k: MSKint32t
//   - nummem: MSKint32t *
//
// [MSK_getnumconemem]/GetNumConemem is deprecated by mosek and will be removed in a future release.
//
// [MSK_getnumconemem]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumconemem
func (task *Task) GetNumConemem(
	k int32,
) (r res.Code, nummem int32) {
	r = res.Code(
		C.MSK_getnumconemem(
			task.task,
			C.MSKint32t(k),
			(*C.MSKint32t)(&nummem),
		),
	)

	return
}

// GetNumDjc is wrapping [MSK_getnumdjc]
//
// [MSK_getnumdjc] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - num: MSKint64t *
//
// [MSK_getnumdjc]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumdjc
func (task *Task) GetNumDjc() (r res.Code, num int64) {
	r = res.Code(
		C.MSK_getnumdjc(
			task.task,
			(*C.MSKint64t)(&num),
		),
	)

	return
}

// GetNumDomain is wrapping [MSK_getnumdomain]
//
// [MSK_getnumdomain] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - numdomain: MSKint64t *
//
// [MSK_getnumdomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumdomain
func (task *Task) GetNumDomain() (r res.Code, numdomain int64) {
	r = res.Code(
		C.MSK_getnumdomain(
			task.task,
			(*C.MSKint64t)(&numdomain),
		),
	)

	return
}

// GetNumIntvar is wrapping [MSK_getnumintvar]
//
// [MSK_getnumintvar] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - numintvar: MSKint32t *
//
// [MSK_getnumintvar]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumintvar
func (task *Task) GetNumIntvar() (r res.Code, numintvar int32) {
	r = res.Code(
		C.MSK_getnumintvar(
			task.task,
			(*C.MSKint32t)(&numintvar),
		),
	)

	return
}

// GetNumParam is wrapping [MSK_getnumparam]
//
// [MSK_getnumparam] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - partype: MSKparametertypee
//   - numparam: MSKint32t *
//
// [MSK_getnumparam]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumparam
func (task *Task) GetNumParam(
	partype ParameterType,
) (r res.Code, numparam int32) {
	r = res.Code(
		C.MSK_getnumparam(
			task.task,
			C.MSKparametertypee(partype),
			(*C.MSKint32t)(&numparam),
		),
	)

	return
}

// GetNumQConKNz is wrapping [MSK_getnumqconknz]
//
// [MSK_getnumqconknz] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - k: MSKint32t
//   - numqcnz: MSKint32t *
//
// [MSK_getnumqconknz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumqconknz
func (task *Task) GetNumQConKNz(
	k int32,
) (r res.Code, numqcnz int32) {
	r = res.Code(
		C.MSK_getnumqconknz(
			task.task,
			C.MSKint32t(k),
			(*C.MSKint32t)(&numqcnz),
		),
	)

	return
}

// GetNumQConKNz64 is wrapping [MSK_getnumqconknz64]
//
// [MSK_getnumqconknz64] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - k: MSKint32t
//   - numqcnz: MSKint64t *
//
// [MSK_getnumqconknz64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumqconknz64
func (task *Task) GetNumQConKNz64(
	k int32,
) (r res.Code, numqcnz int64) {
	r = res.Code(
		C.MSK_getnumqconknz64(
			task.task,
			C.MSKint32t(k),
			(*C.MSKint64t)(&numqcnz),
		),
	)

	return
}

// GetNumQObjNz is wrapping [MSK_getnumqobjnz]
//
// [MSK_getnumqobjnz] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - numqonz: MSKint32t *
//
// [MSK_getnumqobjnz]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumqobjnz
func (task *Task) GetNumQObjNz() (r res.Code, numqonz int32) {
	r = res.Code(
		C.MSK_getnumqobjnz(
			task.task,
			(*C.MSKint32t)(&numqonz),
		),
	)

	return
}

// GetNumQObjNz64 is wrapping [MSK_getnumqobjnz64]
//
// [MSK_getnumqobjnz64] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - numqonz: MSKint64t *
//
// [MSK_getnumqobjnz64]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumqobjnz64
func (task *Task) GetNumQObjNz64() (r res.Code, numqonz int64) {
	r = res.Code(
		C.MSK_getnumqobjnz64(
			task.task,
			(*C.MSKint64t)(&numqonz),
		),
	)

	return
}

// GetNumSymmat is wrapping [MSK_getnumsymmat]
//
// [MSK_getnumsymmat] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - num: MSKint64t *
//
// [MSK_getnumsymmat]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumsymmat
func (task *Task) GetNumSymmat() (r res.Code, num int64) {
	r = res.Code(
		C.MSK_getnumsymmat(
			task.task,
			(*C.MSKint64t)(&num),
		),
	)

	return
}

// GetNumVar is wrapping [MSK_getnumvar] and
// gets the number of variables in the task.
//
// [MSK_getnumvar] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - numvar: MSKint32t *
//
// [MSK_getnumvar]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getnumvar
func (task *Task) GetNumVar() (r res.Code, numvar int32) {
	r = res.Code(
		C.MSK_getnumvar(
			task.task,
			(*C.MSKint32t)(&numvar),
		),
	)

	return
}
