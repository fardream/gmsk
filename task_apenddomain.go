// Automatically generated by github.com/fardream/gen-gmsk
// function deinitions

package gmsk

// #include <stdlib.h> // for C.free
// #include <mosek.h>
import "C"

// AppendDualExpConeDomain is wrapping [MSK_appenddualexpconedomain],
// Appends the dual exponential cone domain.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appenddualexpconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appenddualexpconedomain
func (task *Task) AppendDualExpConeDomain() (domidx int64, r error) {
	r = ResCode(
		C.MSK_appenddualexpconedomain(
			task.task,
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}

// AppendDualGeoMeanConeDomain is wrapping [MSK_appenddualgeomeanconedomain],
// Appends the dual geometric mean cone domain.
//
// Arguments:
//
//   - `n` Dimmension of the domain.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appenddualgeomeanconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appenddualgeomeanconedomain
func (task *Task) AppendDualGeoMeanConeDomain(
	n int64,
) (domidx int64, r error) {
	r = ResCode(
		C.MSK_appenddualgeomeanconedomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}

// AppendDualPowerConeDomain is wrapping [MSK_appenddualpowerconedomain],
// Appends the dual power cone domain.
//
// Arguments:
//
//   - `n` Dimension of the domain.
//   - `alpha` The sequence proportional to exponents. Must be positive.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appenddualpowerconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appenddualpowerconedomain
func (task *Task) AppendDualPowerConeDomain(
	n int64,
	nleft int64,
	alpha []float64,
) (domidx int64, r error) {
	r = ResCode(
		C.MSK_appenddualpowerconedomain(
			task.task,
			C.MSKint64t(n),
			C.MSKint64t(nleft),
			(*C.MSKrealt)(getPtrToFirst(alpha)),
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}

// AppendPrimalExpConeDomain is wrapping [MSK_appendprimalexpconedomain],
// Appends the primal exponential cone domain.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appendprimalexpconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appendprimalexpconedomain
func (task *Task) AppendPrimalExpConeDomain() (domidx int64, r error) {
	r = ResCode(
		C.MSK_appendprimalexpconedomain(
			task.task,
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}

// AppendPrimalGeoMeanConeDomain is wrapping [MSK_appendprimalgeomeanconedomain],
// Appends the primal geometric mean cone domain.
//
// Arguments:
//
//   - `n` Dimmension of the domain.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appendprimalgeomeanconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appendprimalgeomeanconedomain
func (task *Task) AppendPrimalGeoMeanConeDomain(
	n int64,
) (domidx int64, r error) {
	r = ResCode(
		C.MSK_appendprimalgeomeanconedomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}

// AppendPrimalPowerConeDomain is wrapping [MSK_appendprimalpowerconedomain],
// Appends the primal power cone domain.
//
// Arguments:
//
//   - `n` Dimension of the domain.
//   - `alpha` The sequence proportional to exponents. Must be positive.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appendprimalpowerconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appendprimalpowerconedomain
func (task *Task) AppendPrimalPowerConeDomain(
	n int64,
	nleft int64,
	alpha []float64,
) (domidx int64, r error) {
	r = ResCode(
		C.MSK_appendprimalpowerconedomain(
			task.task,
			C.MSKint64t(n),
			C.MSKint64t(nleft),
			(*C.MSKrealt)(getPtrToFirst(alpha)),
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}

// AppendQuadraticConeDomain is wrapping [MSK_appendquadraticconedomain],
// Appends the n dimensional quadratic cone domain.
//
// Arguments:
//
//   - `n` Dimmension of the domain.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appendquadraticconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appendquadraticconedomain
func (task *Task) AppendQuadraticConeDomain(
	n int64,
) (domidx int64, r error) {
	r = ResCode(
		C.MSK_appendquadraticconedomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}

// AppendRDomain is wrapping [MSK_appendrdomain],
// Appends the n dimensional real number domain.
//
// Arguments:
//
//   - `n` Dimmension of the domain.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appendrdomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appendrdomain
func (task *Task) AppendRDomain(
	n int64,
) (domidx int64, r error) {
	r = ResCode(
		C.MSK_appendrdomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}

// AppendRminusDomain is wrapping [MSK_appendrminusdomain],
// Appends the n dimensional negative orthant to the list of domains.
//
// Arguments:
//
//   - `n` Dimmension of the domain.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appendrminusdomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appendrminusdomain
func (task *Task) AppendRminusDomain(
	n int64,
) (domidx int64, r error) {
	r = ResCode(
		C.MSK_appendrminusdomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}

// AppendRplusDomain is wrapping [MSK_appendrplusdomain],
// Appends the n dimensional positive orthant to the list of domains.
//
// Arguments:
//
//   - `n` Dimmension of the domain.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appendrplusdomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appendrplusdomain
func (task *Task) AppendRplusDomain(
	n int64,
) (domidx int64, r error) {
	r = ResCode(
		C.MSK_appendrplusdomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}

// AppendRQuadraticConeDomain is wrapping [MSK_appendrquadraticconedomain],
// Appends the n dimensional rotated quadratic cone domain.
//
// Arguments:
//
//   - `n` Dimmension of the domain.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appendrquadraticconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appendrquadraticconedomain
func (task *Task) AppendRQuadraticConeDomain(
	n int64,
) (domidx int64, r error) {
	r = ResCode(
		C.MSK_appendrquadraticconedomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}

// AppendRzeroDomain is wrapping [MSK_appendrzerodomain],
// Appends the n dimensional 0 domain.
//
// Arguments:
//
//   - `n` Dimmension of the domain.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appendrzerodomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appendrzerodomain
func (task *Task) AppendRzeroDomain(
	n int64,
) (domidx int64, r error) {
	r = ResCode(
		C.MSK_appendrzerodomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}

// AppendSvecPsdConeDomain is wrapping [MSK_appendsvecpsdconedomain],
// Appends the vectorized SVEC PSD cone domain.
//
// Arguments:
//
//   - `n` Dimension of the domain.
//
// Returns:
//
//   - `domidx` Index of the domain.
//
// [MSK_appendsvecpsdconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.appendsvecpsdconedomain
func (task *Task) AppendSvecPsdConeDomain(
	n int64,
) (domidx int64, r error) {
	r = ResCode(
		C.MSK_appendsvecpsdconedomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	).ToError()

	return
}
