// Automatically generated by github.com/fardream/gen-gmsk
// function deinitions

package gmsk

// #include <stdlib.h> // for C.free
// #include <mosek.h>
import "C"

import (
	"github.com/fardream/gmsk/res"
)

// AppendDualExpConeDomain is wrapping [MSK_appenddualexpconedomain] and
// add a dual exponential cone to the task.
//
// [MSK_appenddualexpconedomain] has following parameters
//   - task: MSKtask_t
//   - domidx: MSKint64t *
//
// [MSK_appenddualexpconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendDualExpConeDomain() (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appenddualexpconedomain(
			task.task,
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}

// AppendDualGeoMeanConeDomain is wrapping [MSK_appenddualgeomeanconedomain] and
// adds a dual geometric mean cone domain to the task.
//
// [MSK_appenddualgeomeanconedomain] has following parameters
//   - task: MSKtask_t
//   - n: MSKint64t
//   - domidx: MSKint64t *
//
// [MSK_appenddualgeomeanconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendDualGeoMeanConeDomain(
	n int64,
) (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appenddualgeomeanconedomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}

// AppendDualPowerConeDomain is wrapping [MSK_appenddualpowerconedomain] and
// add a dual power cone to the task.
//
// [MSK_appenddualpowerconedomain] has following parameters
//   - task: MSKtask_t
//   - n: MSKint64t
//   - nleft: MSKint64t
//   - alpha: const MSKrealt *
//   - domidx: MSKint64t *
//
// [MSK_appenddualpowerconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendDualPowerConeDomain(
	n int64,
	nleft int64,
	alpha *float64,
) (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appenddualpowerconedomain(
			task.task,
			C.MSKint64t(n),
			C.MSKint64t(nleft),
			(*C.MSKrealt)(alpha),
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}

// AppendPrimalExpConeDomain is wrapping [MSK_appendprimalexpconedomain] and
// add a primal exponential cone to the task.
//
// [MSK_appendprimalexpconedomain] has following parameters
//   - task: MSKtask_t
//   - domidx: MSKint64t *
//
// [MSK_appendprimalexpconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendPrimalExpConeDomain() (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appendprimalexpconedomain(
			task.task,
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}

// AppendPrimalGeoMeanConeDomain is wrapping [MSK_appendprimalgeomeanconedomain] and
// adds a primal geometric mean cone domain to the task.
//
// [MSK_appendprimalgeomeanconedomain] has following parameters
//   - task: MSKtask_t
//   - n: MSKint64t
//   - domidx: MSKint64t *
//
// [MSK_appendprimalgeomeanconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendPrimalGeoMeanConeDomain(
	n int64,
) (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appendprimalgeomeanconedomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}

// AppendPrimalPowerConeDomain is wrapping [MSK_appendprimalpowerconedomain] and
// add a primal power cone to the task.
//
// [MSK_appendprimalpowerconedomain] has following parameters
//   - task: MSKtask_t
//   - n: MSKint64t
//   - nleft: MSKint64t
//   - alpha: const MSKrealt *
//   - domidx: MSKint64t *
//
// [MSK_appendprimalpowerconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendPrimalPowerConeDomain(
	n int64,
	nleft int64,
	alpha *float64,
) (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appendprimalpowerconedomain(
			task.task,
			C.MSKint64t(n),
			C.MSKint64t(nleft),
			(*C.MSKrealt)(alpha),
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}

// AppendQuadraticConeDomain is wrapping [MSK_appendquadraticconedomain] and
// adds a new quadratic cone of size n to the task. returns the index of the domain if successful.
//
// [MSK_appendquadraticconedomain] has following parameters
//   - task: MSKtask_t
//   - n: MSKint64t
//   - domidx: MSKint64t *
//
// [MSK_appendquadraticconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendQuadraticConeDomain(
	n int64,
) (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appendquadraticconedomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}

// AppendRDomain is wrapping [MSK_appendrdomain] and
// adds the whole n dimension R space domain to the task.
//
// [MSK_appendrdomain] has following parameters
//   - task: MSKtask_t
//   - n: MSKint64t
//   - domidx: MSKint64t *
//
// [MSK_appendrdomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendRDomain(
	n int64,
) (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appendrdomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}

// AppendRMinusDomain is wrapping [MSK_appendrminusdomain] and
// add a domain of x<0
//
// [MSK_appendrminusdomain] has following parameters
//   - task: MSKtask_t
//   - n: MSKint64t
//   - domidx: MSKint64t *
//
// [MSK_appendrminusdomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendRMinusDomain(
	n int64,
) (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appendrminusdomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}

// AppendRPlusDomain is wrapping [MSK_appendrplusdomain] and
// add a domain of x>=0
//
// [MSK_appendrplusdomain] has following parameters
//   - task: MSKtask_t
//   - n: MSKint64t
//   - domidx: MSKint64t *
//
// [MSK_appendrplusdomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendRPlusDomain(
	n int64,
) (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appendrplusdomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}

// AppendRQuadraticConeDomain is wrapping [MSK_appendrquadraticconedomain] and
// adds a new *rotated* quadratic cone of size n to the task. returns the index of the domain if successful.
// note the function is similarly spelled to the *unrotated* quadratic cone [Task.AppendQuadraticConeDomain]
//
// [MSK_appendrquadraticconedomain] has following parameters
//   - task: MSKtask_t
//   - n: MSKint64t
//   - domidx: MSKint64t *
//
// [MSK_appendrquadraticconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendRQuadraticConeDomain(
	n int64,
) (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appendrquadraticconedomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}

// AppendRZeroDomain is wrapping [MSK_appendrzerodomain] and
// add a domain of x=0
//
// [MSK_appendrzerodomain] has following parameters
//   - task: MSKtask_t
//   - n: MSKint64t
//   - domidx: MSKint64t *
//
// [MSK_appendrzerodomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendRZeroDomain(
	n int64,
) (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appendrzerodomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}

// AppendSvecPsdConeDomain is wrapping [MSK_appendsvecpsdconedomain] and
// adds a SVEC_PSD domain, or vectorized postive semidefinite matrix. n must be k(k+1)/2.
//
// [MSK_appendsvecpsdconedomain] has following parameters
//   - task: MSKtask_t
//   - n: MSKint64t
//   - domidx: MSKint64t *
//
// [MSK_appendsvecpsdconedomain]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html
func (task *Task) AppendSvecPsdConeDomain(
	n int64,
) (r res.Code, domidx int64) {
	r = res.Code(
		C.MSK_appendsvecpsdconedomain(
			task.task,
			C.MSKint64t(n),
			(*C.MSKint64t)(&domidx),
		),
	)

	return
}
