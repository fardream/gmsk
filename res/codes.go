// Automatically generated by github.com/fardream/gen-gmsk
// response codes

package res

const (
	OK                                                   Code = 0      // No error occurred.
	WRN_OPEN_PARAM_FILE                                  Code = 50     // The parameter file could not be opened.
	WRN_LARGE_BOUND                                      Code = 51     // A numerically large bound value is specified.
	WRN_LARGE_LO_BOUND                                   Code = 52     // A numerically large lower bound value is specified.
	WRN_LARGE_UP_BOUND                                   Code = 53     // A numerically large upper bound value is specified.
	WRN_LARGE_CON_FX                                     Code = 54     // A equality constraint is fixed to numerically large value.
	WRN_LARGE_CJ                                         Code = 57     // A numerically large value is specified for one element in c.
	WRN_LARGE_AIJ                                        Code = 62     // A numerically large value is specified for an element in A.
	WRN_ZERO_AIJ                                         Code = 63     // One or more zero elements are specified in A.
	WRN_NAME_MAX_LEN                                     Code = 65     // A name is longer than the buffer that is supposed to hold it.
	WRN_SPAR_MAX_LEN                                     Code = 66     // A value for a string parameter is longer than the buffer that is supposed to hold it.
	WRN_MPS_SPLIT_RHS_VECTOR                             Code = 70     // An RHS vector is split into several nonadjacent parts.
	WRN_MPS_SPLIT_RAN_VECTOR                             Code = 71     // A RANGE vector is split into several nonadjacent parts in an MPS file.
	WRN_MPS_SPLIT_BOU_VECTOR                             Code = 72     // A BOUNDS vector is split into several nonadjacent parts in an MPS file.
	WRN_LP_OLD_QUAD_FORMAT                               Code = 80     // Missing '/2' after quadratic expressions in bound or objective.
	WRN_LP_DROP_VARIABLE                                 Code = 85     // Ignore a variable because the variable was not previously defined.
	WRN_NZ_IN_UPR_TRI                                    Code = 200    // Non-zero elements specified in the upper triangle of a matrix were ignored.
	WRN_DROPPED_NZ_QOBJ                                  Code = 201    // One or more non-zero elements were dropped in the Q matrix in the objective.
	WRN_IGNORE_INTEGER                                   Code = 250    // Ignored integer constraints.
	WRN_NO_GLOBAL_OPTIMIZER                              Code = 251    // No global optimizer is available.
	WRN_MIO_INFEASIBLE_FINAL                             Code = 270    // The final mixed-integer problem with all the integer variables fixed at their optimal values is infeasible.
	WRN_SOL_FILTER                                       Code = 300    // Invalid solution filter is specified.
	WRN_UNDEF_SOL_FILE_NAME                              Code = 350    // Undefined name occurred in a solution.
	WRN_SOL_FILE_IGNORED_CON                             Code = 351    // One or more lines in the constraint section were ignored when reading a solution file.
	WRN_SOL_FILE_IGNORED_VAR                             Code = 352    // One or more lines in the variable section were ignored when reading a solution file.
	WRN_TOO_FEW_BASIS_VARS                               Code = 400    // An incomplete basis is specified.
	WRN_TOO_MANY_BASIS_VARS                              Code = 405    // A basis with too many variables is specified.
	WRN_LICENSE_EXPIRE                                   Code = 500    // The license expires.
	WRN_LICENSE_SERVER                                   Code = 501    // The license server is not responding.
	WRN_EMPTY_NAME                                       Code = 502    // A variable or constraint name is empty. The output file may be invalid.
	WRN_USING_GENERIC_NAMES                              Code = 503    // Generic names are used because a name is not valid.
	WRN_INVALID_MPS_NAME                                 Code = 504    // A name e.g. a row name is not a valid MPS name.
	WRN_INVALID_MPS_OBJ_NAME                             Code = 505    // The objective name is not a valid MPS name.
	WRN_LICENSE_FEATURE_EXPIRE                           Code = 509    // The license expires.
	WRN_PARAM_NAME_DOU                                   Code = 510    // Parameter name not recognized.
	WRN_PARAM_NAME_INT                                   Code = 511    // Parameter name not recognized.
	WRN_PARAM_NAME_STR                                   Code = 512    // Parameter name not recognized.
	WRN_PARAM_STR_VALUE                                  Code = 515    // A parameter value is not correct.
	WRN_PARAM_IGNORED_CMIO                               Code = 516    // A parameter was ignored by the conic mixed integer optimizer.
	WRN_ZEROS_IN_SPARSE_ROW                              Code = 705    // One or more (near) zero elements are specified in a sparse row of a matrix.
	WRN_ZEROS_IN_SPARSE_COL                              Code = 710    // One or more (near) zero elements are specified in a sparse column of a matrix.
	WRN_INCOMPLETE_LINEAR_DEPENDENCY_CHECK               Code = 800    // The linear dependency check(s) is incomplete.
	WRN_ELIMINATOR_SPACE                                 Code = 801    // The eliminator is skipped at least once due to lack of space.
	WRN_PRESOLVE_OUTOFSPACE                              Code = 802    // The presolve is incomplete due to lack of space.
	WRN_PRESOLVE_PRIMAL_PERTUBATIONS                     Code = 803    // The presolve perturbed the bounds of the primal problem. This is an indication that the problem is nearly infeasible.
	WRN_WRITE_CHANGED_NAMES                              Code = 830    // Some names were changed because they were invalid for the output file format.
	WRN_WRITE_DISCARDED_CFIX                             Code = 831    // The fixed objective term was discarded in the output file.
	WRN_DUPLICATE_CONSTRAINT_NAMES                       Code = 850    // Two constraint names are identical.
	WRN_DUPLICATE_VARIABLE_NAMES                         Code = 851    // Two variable names are identical.
	WRN_DUPLICATE_BARVARIABLE_NAMES                      Code = 852    // Two barvariable names are identical.
	WRN_DUPLICATE_CONE_NAMES                             Code = 853    // Two cone names are identical.
	WRN_WRITE_LP_INVALID_VAR_NAMES                       Code = 854    // LP file will be written with generic variable names.
	WRN_WRITE_LP_DUPLICATE_VAR_NAMES                     Code = 855    // LP file will be written with generic variable names.
	WRN_WRITE_LP_INVALID_CON_NAMES                       Code = 856    // LP file will be written with generic constraint names.
	WRN_WRITE_LP_DUPLICATE_CON_NAMES                     Code = 857    // LP file will be written with generic constraint names.
	WRN_ANA_LARGE_BOUNDS                                 Code = 900    // Warn against very large bounds.
	WRN_ANA_C_ZERO                                       Code = 901    // Warn against all objective coefficients being zero.
	WRN_ANA_EMPTY_COLS                                   Code = 902    // Warn against empty columns.
	WRN_ANA_CLOSE_BOUNDS                                 Code = 903    // Warn against close bounds.
	WRN_ANA_ALMOST_INT_BOUNDS                            Code = 904    // Warn against almost integral bounds.
	WRN_NO_INFEASIBILITY_REPORT_WHEN_MATRIX_VARIABLES    Code = 930    // An infeasibility report is not available when the problem contains matrix variables.
	WRN_NO_DUALIZER                                      Code = 950    // No automatic dualizer is available for the specified problem.
	WRN_SYM_MAT_LARGE                                    Code = 960    // A numerically large value is specified for an element in E.
	WRN_MODIFIED_DOUBLE_PARAMETER                        Code = 970    // A double parameter related to solver tolerances has a non-default value.
	WRN_LARGE_FIJ                                        Code = 980    // A numerically large value is specified for an element in F.
	ERR_LICENSE                                          Code = 1000   // Invalid license.
	ERR_LICENSE_EXPIRED                                  Code = 1001   // The license has expired.
	ERR_LICENSE_VERSION                                  Code = 1002   // Invalid license version.
	ERR_LICENSE_OLD_SERVER_VERSION                       Code = 1003   // The license server version is too old.
	ERR_SIZE_LICENSE                                     Code = 1005   // The problem is bigger than the license.
	ERR_PROB_LICENSE                                     Code = 1006   // The software is not licensed to solve the problem.
	ERR_FILE_LICENSE                                     Code = 1007   // Invalid license file.
	ERR_MISSING_LICENSE_FILE                             Code = 1008   // A license cannot be located.
	ERR_SIZE_LICENSE_CON                                 Code = 1010   // The problem has too many constraints.
	ERR_SIZE_LICENSE_VAR                                 Code = 1011   // The problem has too many variables.
	ERR_SIZE_LICENSE_INTVAR                              Code = 1012   // The problem contains too many integer variables.
	ERR_OPTIMIZER_LICENSE                                Code = 1013   // The optimizer required is not licensed.
	ERR_FLEXLM                                           Code = 1014   // The license manager reported an error.
	ERR_LICENSE_SERVER                                   Code = 1015   // The license server is not responding.
	ERR_LICENSE_MAX                                      Code = 1016   // Maximum number of licenses is reached.
	ERR_LICENSE_MOSEKLM_DAEMON                           Code = 1017   // The MOSEKLM license manager daemon is not up and running.
	ERR_LICENSE_FEATURE                                  Code = 1018   // A requested feature is not available in the license file(s).
	ERR_PLATFORM_NOT_LICENSED                            Code = 1019   // A requested license feature is not available for the required platform.
	ERR_LICENSE_CANNOT_ALLOCATE                          Code = 1020   // The license system cannot allocate the memory required.
	ERR_LICENSE_CANNOT_CONNECT                           Code = 1021   // MOSEK cannot connect to the license server.
	ERR_LICENSE_INVALID_HOSTID                           Code = 1025   // The host ID specified in the license file does not match the host ID of the computer.
	ERR_LICENSE_SERVER_VERSION                           Code = 1026   // The version specified in the checkout request is greater than the highest version number the daemon supports.
	ERR_LICENSE_NO_SERVER_SUPPORT                        Code = 1027   // The license server does not support the requested feature.
	ERR_LICENSE_NO_SERVER_LINE                           Code = 1028   // No SERVER lines in license file.
	ERR_OLDER_DLL                                        Code = 1035   // The dynamic link library is older than the specified version.
	ERR_NEWER_DLL                                        Code = 1036   // The dynamic link library is newer than the specified version.
	ERR_LINK_FILE_DLL                                    Code = 1040   // A file cannot be linked to a stream in the DLL version.
	ERR_THREAD_MUTEX_INIT                                Code = 1045   // Could not initialize a mutex.
	ERR_THREAD_MUTEX_LOCK                                Code = 1046   // Could not lock a mutex.
	ERR_THREAD_MUTEX_UNLOCK                              Code = 1047   // Could not unlock a mutex.
	ERR_THREAD_CREATE                                    Code = 1048   // Could not create a thread.
	ERR_THREAD_COND_INIT                                 Code = 1049   // Could not initialize a condition.
	ERR_UNKNOWN                                          Code = 1050   // Unknown error.
	ERR_SPACE                                            Code = 1051   // Out of space.
	ERR_FILE_OPEN                                        Code = 1052   // An error occurred while opening a file.
	ERR_FILE_READ                                        Code = 1053   // An error occurred while reading file.
	ERR_FILE_WRITE                                       Code = 1054   // An error occurred while writing to a file.
	ERR_DATA_FILE_EXT                                    Code = 1055   // The data file format cannot be determined from the file name.
	ERR_INVALID_FILE_NAME                                Code = 1056   // An invalid file name has been specified.
	ERR_INVALID_SOL_FILE_NAME                            Code = 1057   // An invalid file name has been specified.
	ERR_END_OF_FILE                                      Code = 1059   // End of file reached.
	ERR_NULL_ENV                                         Code = 1060   // env is a null pointer.
	ERR_NULL_TASK                                        Code = 1061   // task is a null pointer.
	ERR_INVALID_STREAM                                   Code = 1062   // An invalid stream is referenced.
	ERR_NO_INIT_ENV                                      Code = 1063   // Environment is not initialized.
	ERR_INVALID_TASK                                     Code = 1064   // The task is invalid.
	ERR_NULL_POINTER                                     Code = 1065   // An argument to a function is unexpectedly a null pointer.
	ERR_LIVING_TASKS                                     Code = 1066   // Not all tasks associated with the environment have been deleted.
	ERR_BLANK_NAME                                       Code = 1070   // An all blank name has been specified.
	ERR_DUP_NAME                                         Code = 1071   // Duplicate names specified.
	ERR_FORMAT_STRING                                    Code = 1072   // The name format string is invalid.
	ERR_SPARSITY_SPECIFICATION                           Code = 1073   // The sparsity included an index that was out of bounds of the shape.
	ERR_MISMATCHING_DIMENSION                            Code = 1074   // Mismatching dimensions specified in arguments
	ERR_INVALID_OBJ_NAME                                 Code = 1075   // An invalid objective name is specified.
	ERR_INVALID_CON_NAME                                 Code = 1076   // An invalid constraint name is used.
	ERR_INVALID_VAR_NAME                                 Code = 1077   // An invalid variable name is used.
	ERR_INVALID_CONE_NAME                                Code = 1078   // An invalid cone name is used.
	ERR_INVALID_BARVAR_NAME                              Code = 1079   // An invalid symmetric matrix variable name is used.
	ERR_SPACE_LEAKING                                    Code = 1080   // MOSEK is leaking memory.
	ERR_SPACE_NO_INFO                                    Code = 1081   // No available information about the space usage.
	ERR_DIMENSION_SPECIFICATION                          Code = 1082   // Invalid dimension specification
	ERR_AXIS_NAME_SPECIFICATION                          Code = 1083   // Invalid axis names specification
	ERR_READ_FORMAT                                      Code = 1090   // The specified format cannot be read.
	ERR_MPS_FILE                                         Code = 1100   // An error occurred while reading an MPS file.
	ERR_MPS_INV_FIELD                                    Code = 1101   // Invalid field occurred while reading an MPS file.
	ERR_MPS_INV_MARKER                                   Code = 1102   // An invalid marker has been specified in the MPS file.
	ERR_MPS_NULL_CON_NAME                                Code = 1103   // An empty constraint name is used in an MPS file.
	ERR_MPS_NULL_VAR_NAME                                Code = 1104   // An empty variable name is used in an MPS file.
	ERR_MPS_UNDEF_CON_NAME                               Code = 1105   // An undefined constraint name occurred in an MPS file.
	ERR_MPS_UNDEF_VAR_NAME                               Code = 1106   // An undefined variable name occurred in an MPS file.
	ERR_MPS_INVALID_CON_KEY                              Code = 1107   // An invalid constraint key occurred in an MPS file.
	ERR_MPS_INVALID_BOUND_KEY                            Code = 1108   // An invalid bound key occurred in an MPS file.
	ERR_MPS_INVALID_SEC_NAME                             Code = 1109   // An invalid section name occurred in an MPS file.
	ERR_MPS_NO_OBJECTIVE                                 Code = 1110   // No objective is defined in an MPS file.
	ERR_MPS_SPLITTED_VAR                                 Code = 1111   // The non-zero elements in A corresponding to a variable in an MPS file must be specified consecutively.
	ERR_MPS_MUL_CON_NAME                                 Code = 1112   // A constraint name is specified multiple times in the ROWS section in an MPS file.
	ERR_MPS_MUL_QSEC                                     Code = 1113   // Multiple QSECTIONs are specified for a constraint.
	ERR_MPS_MUL_QOBJ                                     Code = 1114   // The Q term in the objective is specified multiple times.
	ERR_MPS_INV_SEC_ORDER                                Code = 1115   // The sections in an MPS file is not in the correct order.
	ERR_MPS_MUL_CSEC                                     Code = 1116   // Multiple CSECTIONs are given the same name.
	ERR_MPS_CONE_TYPE                                    Code = 1117   // Invalid cone type specified in a  CSECTION.
	ERR_MPS_CONE_OVERLAP                                 Code = 1118   // A variable is specified to be a member of several cones.
	ERR_MPS_CONE_REPEAT                                  Code = 1119   // A variable is repeated within the CSECTION.
	ERR_MPS_NON_SYMMETRIC_Q                              Code = 1120   // A non symmetric matrix has been speciefied.
	ERR_MPS_DUPLICATE_Q_ELEMENT                          Code = 1121   // Duplicate elements is specified in a Q matrix.
	ERR_MPS_INVALID_OBJSENSE                             Code = 1122   // An invalid objective sense is specified.
	ERR_MPS_TAB_IN_FIELD2                                Code = 1125   // A tab char occurred in field 2.
	ERR_MPS_TAB_IN_FIELD3                                Code = 1126   // A tab char occurred in field 3.
	ERR_MPS_TAB_IN_FIELD5                                Code = 1127   // A tab char occurred in field 5.
	ERR_MPS_INVALID_OBJ_NAME                             Code = 1128   // An invalid objective name is specified.
	ERR_MPS_INVALID_KEY                                  Code = 1129   // An invalid indicator key occurred in an MPS file.
	ERR_MPS_INVALID_INDICATOR_CONSTRAINT                 Code = 1130   // An invalid indicator constraint is used. It must not be a ranged constraint.
	ERR_MPS_INVALID_INDICATOR_VARIABLE                   Code = 1131   // An invalid indicator variable is specfied. It must be a binary variable.
	ERR_MPS_INVALID_INDICATOR_VALUE                      Code = 1132   // An invalid indicator value is specfied. It must be either 0 or 1.
	ERR_MPS_INVALID_INDICATOR_QUADRATIC_CONSTRAINT       Code = 1133   // A quadratic constraint can be be an indicator constraint.
	ERR_OPF_SYNTAX                                       Code = 1134   // Syntax error in an OPF file
	ERR_OPF_PREMATURE_EOF                                Code = 1136   // Premature end of file in an OPF file.
	ERR_OPF_MISMATCHED_TAG                               Code = 1137   // Mismatched end-tag in OPF file
	ERR_OPF_DUPLICATE_BOUND                              Code = 1138   // Either upper or lower bound was specified twice in OPF file
	ERR_OPF_DUPLICATE_CONSTRAINT_NAME                    Code = 1139   // Duplicate constraint name in OPF File
	ERR_OPF_INVALID_CONE_TYPE                            Code = 1140   // Invalid cone type in OPF File
	ERR_OPF_INCORRECT_TAG_PARAM                          Code = 1141   // Invalid number of parameters in start-tag in OPF File
	ERR_OPF_INVALID_TAG                                  Code = 1142   // Invalid start-tag in OPF File
	ERR_OPF_DUPLICATE_CONE_ENTRY                         Code = 1143   // Same variable appears in multiple cones in OPF File
	ERR_OPF_TOO_LARGE                                    Code = 1144   // The problem is too large to be correctly loaded
	ERR_OPF_DUAL_INTEGER_SOLUTION                        Code = 1146   // Dual solution values are not allowed in OPF File
	ERR_LP_INCOMPATIBLE                                  Code = 1150   // The problem cannot be written to an LP formatted file.
	ERR_LP_EMPTY                                         Code = 1151   // The problem cannot be written to an LP formatted file.
	ERR_LP_DUP_SLACK_NAME                                Code = 1152   // The name of the slack variable added to a ranged constraint already exists.
	ERR_WRITE_MPS_INVALID_NAME                           Code = 1153   // An invalid name is created while writing an MPS file.
	ERR_LP_INVALID_VAR_NAME                              Code = 1154   // A variable name is invalid when used in an LP formatted file.
	ERR_LP_FREE_CONSTRAINT                               Code = 1155   // Free constraints cannot be written in LP file format.
	ERR_WRITE_OPF_INVALID_VAR_NAME                       Code = 1156   // Empty variable names cannot be written to OPF files.
	ERR_LP_FILE_FORMAT                                   Code = 1157   // Syntax error in an LP file.
	ERR_WRITE_LP_FORMAT                                  Code = 1158   // Problem cannot be written as an LP file.
	ERR_READ_LP_MISSING_END_TAG                          Code = 1159   // Syntax error in LP fil. Possibly missing End tag.
	ERR_LP_INDICATOR_VAR                                 Code = 1160   // An indicator variable was not declared binary
	ERR_WRITE_LP_NON_UNIQUE_NAME                         Code = 1161   // An auto-generated name is not unique.
	ERR_READ_LP_NONEXISTING_NAME                         Code = 1162   // A variable never occurred in objective or constraints.
	ERR_LP_WRITE_CONIC_PROBLEM                           Code = 1163   // The problem contains cones that cannot be written to an LP formatted file.
	ERR_LP_WRITE_GECO_PROBLEM                            Code = 1164   // The problem contains general convex terms that cannot be written to an LP formatted file.
	ERR_WRITING_FILE                                     Code = 1166   // An error occurred while writing file
	ERR_INVALID_NAME_IN_SOL_FILE                         Code = 1170   // An invalid name occurred in a solution file.
	ERR_LP_INVALID_CON_NAME                              Code = 1171   // A constraint name is invalid when used in an LP formatted file.
	ERR_JSON_SYNTAX                                      Code = 1175   // Syntax error in an JSON data
	ERR_JSON_STRING                                      Code = 1176   // Error in JSON string.
	ERR_JSON_NUMBER_OVERFLOW                             Code = 1177   // Invalid number entry - wrong type or value overflow.
	ERR_JSON_FORMAT                                      Code = 1178   // Error in an JSON Task file
	ERR_JSON_DATA                                        Code = 1179   // Inconsistent data in JSON Task file
	ERR_JSON_MISSING_DATA                                Code = 1180   // Missing data section in JSON task file.
	ERR_PTF_INCOMPATIBILITY                              Code = 1181   // Incompatible item
	ERR_PTF_UNDEFINED_ITEM                               Code = 1182   // Undefined symbol referenced
	ERR_PTF_INCONSISTENCY                                Code = 1183   // Inconsistent size of item
	ERR_PTF_FORMAT                                       Code = 1184   // Syntax error in an PTF file
	ERR_ARGUMENT_LENNEQ                                  Code = 1197   // Incorrect length of arguments.
	ERR_ARGUMENT_TYPE                                    Code = 1198   // Incorrect argument type.
	ERR_NUM_ARGUMENTS                                    Code = 1199   // Incorrect number of function arguments.
	ERR_IN_ARGUMENT                                      Code = 1200   // A function argument is incorrect.
	ERR_ARGUMENT_DIMENSION                               Code = 1201   // A function argument is of incorrect dimension.
	ERR_SHAPE_IS_TOO_LARGE                               Code = 1202   // The size of the n-dimensional shape is too large.
	ERR_INDEX_IS_TOO_SMALL                               Code = 1203   // An index in an argument is too small.
	ERR_INDEX_IS_TOO_LARGE                               Code = 1204   // An index in an argument is too large.
	ERR_INDEX_IS_NOT_UNIQUE                              Code = 1205   // An index in an argument is is unique.
	ERR_PARAM_NAME                                       Code = 1206   // A parameter name is not correct.
	ERR_PARAM_NAME_DOU                                   Code = 1207   // A parameter name is not correct.
	ERR_PARAM_NAME_INT                                   Code = 1208   // A parameter name is not correct.
	ERR_PARAM_NAME_STR                                   Code = 1209   // A parameter name is not correct.
	ERR_PARAM_INDEX                                      Code = 1210   // Parameter index is out of range.
	ERR_PARAM_IS_TOO_LARGE                               Code = 1215   // A parameter value is too large.
	ERR_PARAM_IS_TOO_SMALL                               Code = 1216   // A parameter value is too small.
	ERR_PARAM_VALUE_STR                                  Code = 1217   // A parameter value string is incorrect.
	ERR_PARAM_TYPE                                       Code = 1218   // A parameter type is invalid.
	ERR_INF_DOU_INDEX                                    Code = 1219   // A double information index is out of range for the specified type.
	ERR_INF_INT_INDEX                                    Code = 1220   // An integer information index is out of range for the specified type.
	ERR_INDEX_ARR_IS_TOO_SMALL                           Code = 1221   // An index in an array argument is too small.
	ERR_INDEX_ARR_IS_TOO_LARGE                           Code = 1222   // An index in an array argument is too large.
	ERR_INF_LINT_INDEX                                   Code = 1225   // A long integer information index is out of range for the specified type.
	ERR_ARG_IS_TOO_SMALL                                 Code = 1226   // The value of a argument is too small.
	ERR_ARG_IS_TOO_LARGE                                 Code = 1227   // The value of a argument is too large.
	ERR_INVALID_WHICHSOL                                 Code = 1228   // whichsol is invalid.
	ERR_INF_DOU_NAME                                     Code = 1230   // A double information name is invalid.
	ERR_INF_INT_NAME                                     Code = 1231   // An integer information name is invalid.
	ERR_INF_TYPE                                         Code = 1232   // The information type is invalid.
	ERR_INF_LINT_NAME                                    Code = 1234   // A long integer information name is invalid.
	ERR_INDEX                                            Code = 1235   // An index is out of range.
	ERR_WHICHSOL                                         Code = 1236   // The solution defined by whichsol does not exists.
	ERR_SOLITEM                                          Code = 1237   // The solution number  solemn does not exists.
	ERR_WHICHITEM_NOT_ALLOWED                            Code = 1238   // whichitem is unacceptable.
	ERR_MAXNUMCON                                        Code = 1240   // Invalid maximum number of constraints specified.
	ERR_MAXNUMVAR                                        Code = 1241   // The maximum number of variables limit is too small.
	ERR_MAXNUMBARVAR                                     Code = 1242   // The maximum number of semidefinite variables limit is too small.
	ERR_MAXNUMQNZ                                        Code = 1243   // Too small maximum number of non-zeros for the Q matrices is specified.
	ERR_TOO_SMALL_MAX_NUM_NZ                             Code = 1245   // The maximum number of non-zeros specified is too small.
	ERR_INVALID_IDX                                      Code = 1246   // A specified index is invalid.
	ERR_INVALID_MAX_NUM                                  Code = 1247   // A specified index is invalid.
	ERR_UNALLOWED_WHICHSOL                               Code = 1248   // The value of whichsol is not allowed.
	ERR_NUMCONLIM                                        Code = 1250   // Maximum number of constraints limit is exceeded.
	ERR_NUMVARLIM                                        Code = 1251   // Maximum number of variables limit is exceeded.
	ERR_TOO_SMALL_MAXNUMANZ                              Code = 1252   // Too small maximum number of non-zeros in A specified.
	ERR_INV_APTRE                                        Code = 1253   // aptre\[j\] is strictly smaller than aptrb\[j\] for some j.
	ERR_MUL_A_ELEMENT                                    Code = 1254   // An element in A is defined multiple times.
	ERR_INV_BK                                           Code = 1255   // Invalid bound key.
	ERR_INV_BKC                                          Code = 1256   // Invalid bound key is specified for a constraint.
	ERR_INV_BKX                                          Code = 1257   // An invalid bound key is specified for a variable.
	ERR_INV_VAR_TYPE                                     Code = 1258   // An invalid variable type is specified for a variable.
	ERR_SOLVER_PROBTYPE                                  Code = 1259   // Problem type does not match the chosen optimizer.
	ERR_OBJECTIVE_RANGE                                  Code = 1260   // Empty objective range.
	ERR_BASIS                                            Code = 1266   // Invalid basis is specified.
	ERR_INV_SKC                                          Code = 1267   // Invalid value in skc encountered.
	ERR_INV_SKX                                          Code = 1268   // Invalid value in skx encountered.
	ERR_INV_SK_STR                                       Code = 1269   // Invalid status key string encountered.
	ERR_INV_SK                                           Code = 1270   // Invalid status key code encountered.
	ERR_INV_CONE_TYPE_STR                                Code = 1271   // Invalid cone type string encountered.
	ERR_INV_CONE_TYPE                                    Code = 1272   // Invalid cone type code encountered.
	ERR_INV_SKN                                          Code = 1274   // Invalid value in skn encountered.
	ERR_INVALID_SURPLUS                                  Code = 1275   // Invalid surplus.
	ERR_INV_NAME_ITEM                                    Code = 1280   // An invalid name item code is used.
	ERR_PRO_ITEM                                         Code = 1281   // An invalid problem item is used.
	ERR_INVALID_FORMAT_TYPE                              Code = 1283   // Invalid format type.
	ERR_FIRSTI                                           Code = 1285   // Invalid firsti.
	ERR_LASTI                                            Code = 1286   // Invalid lasti.
	ERR_FIRSTJ                                           Code = 1287   // Invalid firstj.
	ERR_LASTJ                                            Code = 1288   // Invalid lastj.
	ERR_MAX_LEN_IS_TOO_SMALL                             Code = 1289   // A maximum length that is too small has been specified.
	ERR_NONLINEAR_EQUALITY                               Code = 1290   // The model contains a nonlinear equality.
	ERR_NONCONVEX                                        Code = 1291   // The optimization problem is nonconvex.
	ERR_NONLINEAR_RANGED                                 Code = 1292   // The problem contains a nonlinear constraint with inite lower and upper bound.
	ERR_CON_Q_NOT_PSD                                    Code = 1293   // The quadratic constraint matrix is not PSD.
	ERR_CON_Q_NOT_NSD                                    Code = 1294   // The quadratic constraint matrix is not NSD.
	ERR_OBJ_Q_NOT_PSD                                    Code = 1295   // The quadratic coefficient matrix in the objective is not PSD.
	ERR_OBJ_Q_NOT_NSD                                    Code = 1296   // The quadratic coefficient matrix in the objective is not NSD.
	ERR_ARGUMENT_PERM_ARRAY                              Code = 1299   // An invalid permutation array is specified.
	ERR_CONE_INDEX                                       Code = 1300   // An index of a non-existing cone has been specified.
	ERR_CONE_SIZE                                        Code = 1301   // A cone with incorrect number of members is specified.
	ERR_CONE_OVERLAP                                     Code = 1302   // One or more of variables in the cone to be added is already member of another cone.
	ERR_CONE_REP_VAR                                     Code = 1303   // A variable is included multiple times in the cone.
	ERR_MAXNUMCONE                                       Code = 1304   // The value specified for maxnumcone is too small.
	ERR_CONE_TYPE                                        Code = 1305   // Invalid cone type specified.
	ERR_CONE_TYPE_STR                                    Code = 1306   // Invalid cone type specified.
	ERR_CONE_OVERLAP_APPEND                              Code = 1307   // The cone to be appended has one variable which is already member of another cone.
	ERR_REMOVE_CONE_VARIABLE                             Code = 1310   // A variable cannot be removed because it will make a cone invalid.
	ERR_APPENDING_TOO_BIG_CONE                           Code = 1311   // Trying to append a too big cone.
	ERR_CONE_PARAMETER                                   Code = 1320   // An invalid cone parameter.
	ERR_SOL_FILE_INVALID_NUMBER                          Code = 1350   // An invalid number is specified in a solution file.
	ERR_HUGE_C                                           Code = 1375   // A huge value in absolute size is specified for an objective coefficient.
	ERR_HUGE_AIJ                                         Code = 1380   // A numerically huge value is specified for an element in A.
	ERR_DUPLICATE_AIJ                                    Code = 1385   // An element in the A matrix is specified twice.
	ERR_LOWER_BOUND_IS_A_NAN                             Code = 1390   // The lower bound specified is not a number (nan).
	ERR_UPPER_BOUND_IS_A_NAN                             Code = 1391   // The upper bound specified is not a number (nan).
	ERR_INFINITE_BOUND                                   Code = 1400   // A numerically huge bound value is specified.
	ERR_INV_QOBJ_SUBI                                    Code = 1401   // Invalid value %d at qosubi.
	ERR_INV_QOBJ_SUBJ                                    Code = 1402   // Invalid value in qosubj.
	ERR_INV_QOBJ_VAL                                     Code = 1403   // Invalid value in qoval.
	ERR_INV_QCON_SUBK                                    Code = 1404   // Invalid value in qcsubk.
	ERR_INV_QCON_SUBI                                    Code = 1405   // Invalid value in qcsubi.
	ERR_INV_QCON_SUBJ                                    Code = 1406   // Invalid value in qcsubj.
	ERR_INV_QCON_VAL                                     Code = 1407   // Invalid value in qcval.
	ERR_QCON_SUBI_TOO_SMALL                              Code = 1408   // Invalid value in qcsubi.
	ERR_QCON_SUBI_TOO_LARGE                              Code = 1409   // Invalid value in qcsubi.
	ERR_QOBJ_UPPER_TRIANGLE                              Code = 1415   // An element in the upper triangle of the quadratic term in the objective is specified.
	ERR_QCON_UPPER_TRIANGLE                              Code = 1417   // An element in the upper triangle of the quadratic term in a constraint.
	ERR_FIXED_BOUND_VALUES                               Code = 1420   // A fixed constraint/variable has been specified using the bound keys but the numerical bounds are different.
	ERR_TOO_SMALL_A_TRUNCATION_VALUE                     Code = 1421   // A too small value for the A trucation value is specified.
	ERR_INVALID_OBJECTIVE_SENSE                          Code = 1445   // An invalid objective sense is specified.
	ERR_UNDEFINED_OBJECTIVE_SENSE                        Code = 1446   // The objective sense has not been specified before the optimization.
	ERR_Y_IS_UNDEFINED                                   Code = 1449   // The solution item y is undefined.
	ERR_NAN_IN_DOUBLE_DATA                               Code = 1450   // An invalid floating value was used in some double data.
	ERR_INF_IN_DOUBLE_DATA                               Code = 1451   // An infinite floating value was used in some double data.
	ERR_NAN_IN_BLC                                       Code = 1461   // blc contains an invalid floating point value, i.e. a NaN.
	ERR_NAN_IN_BUC                                       Code = 1462   // buc contains an invalid floating point value, i.e. a NaN.
	ERR_INVALID_CFIX                                     Code = 1469   // An invalid fixed term in the objective is speficied.
	ERR_NAN_IN_C                                         Code = 1470   // c contains an invalid floating point value, i.e. a NaN.
	ERR_NAN_IN_BLX                                       Code = 1471   // blx contains an invalid floating point value, i.e. a NaN.
	ERR_NAN_IN_BUX                                       Code = 1472   // bux contains an invalid floating point value, i.e. a NaN.
	ERR_INVALID_AIJ                                      Code = 1473   // a\[i,j\] contains an invalid floating point value, i.e. a NaN or an infinite value.
	ERR_INVALID_CJ                                       Code = 1474   // c\[j\] contains an invalid floating point value, i.e. a NaN or an infinite value.
	ERR_SYM_MAT_INVALID                                  Code = 1480   // A symmetric matrix contains an invalid floating point value, i.e. a NaN or an infinite value.
	ERR_SYM_MAT_HUGE                                     Code = 1482   // A numerically huge value is specified for an element in E.
	ERR_INV_PROBLEM                                      Code = 1500   // Invalid problem type.
	ERR_MIXED_CONIC_AND_NL                               Code = 1501   // The problem contains both conic and nonlinear constraints.
	ERR_GLOBAL_INV_CONIC_PROBLEM                         Code = 1503   // The global optimizer can only be applied to problems without semidefinite variables.
	ERR_INV_OPTIMIZER                                    Code = 1550   // An invalid optimizer has been chosen for the problem.
	ERR_MIO_NO_OPTIMIZER                                 Code = 1551   // No optimizer is available for the current class of integer optimization problems.
	ERR_NO_OPTIMIZER_VAR_TYPE                            Code = 1552   // No optimizer is available for this class of optimization problems.
	ERR_FINAL_SOLUTION                                   Code = 1560   // An error occurred during the solution finalization.
	ERR_FIRST                                            Code = 1570   // Invalid first.
	ERR_LAST                                             Code = 1571   // Invalid last.
	ERR_SLICE_SIZE                                       Code = 1572   // Invalid slice size specified.
	ERR_NEGATIVE_SURPLUS                                 Code = 1573   // Negative surplus.
	ERR_NEGATIVE_APPEND                                  Code = 1578   // Cannot append a negative number.
	ERR_POSTSOLVE                                        Code = 1580   // An error occurred during the postsolve.
	ERR_OVERFLOW                                         Code = 1590   // A computation produced an overflow.
	ERR_NO_BASIS_SOL                                     Code = 1600   // No basic solution is defined.
	ERR_BASIS_FACTOR                                     Code = 1610   // The factorization of the basis is invalid.
	ERR_BASIS_SINGULAR                                   Code = 1615   // The basis is singular.
	ERR_FACTOR                                           Code = 1650   // An error occurred while factorizing a matrix.
	ERR_FEASREPAIR_CANNOT_RELAX                          Code = 1700   // An optimization problem cannot be relaxed.
	ERR_FEASREPAIR_SOLVING_RELAXED                       Code = 1701   // The relaxed problem could not be solved to optimality.
	ERR_FEASREPAIR_INCONSISTENT_BOUND                    Code = 1702   // The upper bound is less than the lower bound for a variable or a constraint.
	ERR_REPAIR_INVALID_PROBLEM                           Code = 1710   // The feasibility repair does not support the specified problem type.
	ERR_REPAIR_OPTIMIZATION_FAILED                       Code = 1711   // Computation the optimal relaxation failed.
	ERR_NAME_MAX_LEN                                     Code = 1750   // A name is longer than the buffer that is supposed to hold it.
	ERR_NAME_IS_NULL                                     Code = 1760   // The name buffer is a null pointer.
	ERR_INVALID_COMPRESSION                              Code = 1800   // Invalid compression type.
	ERR_INVALID_IOMODE                                   Code = 1801   // Invalid io mode.
	ERR_NO_PRIMAL_INFEAS_CER                             Code = 2000   // A certificate of primal infeasibility is not available.
	ERR_NO_DUAL_INFEAS_CER                               Code = 2001   // A certificate of dual infeasibility is not available.
	ERR_NO_SOLUTION_IN_CALLBACK                          Code = 2500   // The required solution is not available.
	ERR_INV_MARKI                                        Code = 2501   // Invalid value in marki.
	ERR_INV_MARKJ                                        Code = 2502   // Invalid value in markj.
	ERR_INV_NUMI                                         Code = 2503   // Invalid numi.
	ERR_INV_NUMJ                                         Code = 2504   // Invalid numj.
	ERR_TASK_INCOMPATIBLE                                Code = 2560   // The Task file is incompatible with this platform.
	ERR_TASK_INVALID                                     Code = 2561   // The Task file is invalid.
	ERR_TASK_WRITE                                       Code = 2562   // Failed to write the task file.
	ERR_LU_MAX_NUM_TRIES                                 Code = 2800   // Could not compute the LU factors of the matrix within the maximum number of allowed tries.
	ERR_INVALID_UTF8                                     Code = 2900   // An invalid UTF8 string is encountered.
	ERR_INVALID_WCHAR                                    Code = 2901   // An invalid wchar string is encountered.
	ERR_NO_DUAL_FOR_ITG_SOL                              Code = 2950   // No dual information is available for the integer solution.
	ERR_NO_SNX_FOR_BAS_SOL                               Code = 2953   // snx is not available for the basis solution.
	ERR_INTERNAL                                         Code = 3000   // An internal error occurred.
	ERR_API_ARRAY_TOO_SMALL                              Code = 3001   // An input array was too short.
	ERR_API_CB_CONNECT                                   Code = 3002   // Failed to connect a callback object.
	ERR_API_FATAL_ERROR                                  Code = 3005   // An internal error occurred in the API. Please report this problem.
	ERR_SEN_FORMAT                                       Code = 3050   // Syntax error in sensitivity analysis file.
	ERR_SEN_UNDEF_NAME                                   Code = 3051   // An undefined name was encountered in the sensitivity analysis file.
	ERR_SEN_INDEX_RANGE                                  Code = 3052   // Index out of range in the sensitivity analysis file.
	ERR_SEN_BOUND_INVALID_UP                             Code = 3053   // Analysis of upper bound requested for an index, where no upper bound exists.
	ERR_SEN_BOUND_INVALID_LO                             Code = 3054   // Analysis of lower bound requested for an index, where no lower bound exists.
	ERR_SEN_INDEX_INVALID                                Code = 3055   // Invalid range given in the sensitivity file.
	ERR_SEN_INVALID_REGEXP                               Code = 3056   // Syntax error in regexp or regexp longer than 1024.
	ERR_SEN_SOLUTION_STATUS                              Code = 3057   // No optimal solution found to the original problem given for sensitivity analysis.
	ERR_SEN_NUMERICAL                                    Code = 3058   // Numerical difficulties encountered performing the sensitivity analysis.
	ERR_SEN_UNHANDLED_PROBLEM_TYPE                       Code = 3080   // Sensitivity analysis cannot be performed for the specified problem.
	ERR_UNB_STEP_SIZE                                    Code = 3100   // A step-size in an optimizer was unexpectedly unbounded.
	ERR_IDENTICAL_TASKS                                  Code = 3101   // Some tasks related to this function call were identical. Unique tasks were expected.
	ERR_AD_INVALID_CODELIST                              Code = 3102   // The code list data was invalid.
	ERR_INTERNAL_TEST_FAILED                             Code = 3500   // An internal unit test function failed.
	ERR_XML_INVALID_PROBLEM_TYPE                         Code = 3600   // The problem type is not supported by the XML format.
	ERR_INVALID_AMPL_STUB                                Code = 3700   // Invalid AMPL stub.
	ERR_INT64_TO_INT32_CAST                              Code = 3800   // A 64 bit integer could not be cast to a 32 bit integer.
	ERR_SIZE_LICENSE_NUMCORES                            Code = 3900   // The computer contains more cpu cores than the license allows for.
	ERR_INFEAS_UNDEFINED                                 Code = 3910   // The requested value is not defined for this solution type.
	ERR_NO_BARX_FOR_SOLUTION                             Code = 3915   // There is no barx available for the solution specified.
	ERR_NO_BARS_FOR_SOLUTION                             Code = 3916   // There is no bars available for the solution specified.
	ERR_BAR_VAR_DIM                                      Code = 3920   // The dimension of a symmetric matrix variable has to be greater than 0.
	ERR_SYM_MAT_INVALID_ROW_INDEX                        Code = 3940   // A row index specified for sparse symmetric matrix is invalid.
	ERR_SYM_MAT_INVALID_COL_INDEX                        Code = 3941   // A column index specified for sparse symmetric matrix is invalid.
	ERR_SYM_MAT_NOT_LOWER_TRINGULAR                      Code = 3942   // Only the lower triangular part of sparse symmetric matrix should be specified.
	ERR_SYM_MAT_INVALID_VALUE                            Code = 3943   // The numerical value specified in a sparse symmetric matrix is not a floating point value.
	ERR_SYM_MAT_DUPLICATE                                Code = 3944   // A value in a symmetric matric as been specified more than once.
	ERR_INVALID_SYM_MAT_DIM                              Code = 3950   // A sparse symmetric matrix of invalid dimension is specified.
	ERR_API_INTERNAL                                     Code = 3999   // An internal fatal error occurred in an interface function.
	ERR_INVALID_FILE_FORMAT_FOR_SYM_MAT                  Code = 4000   // The file format does not support a problem with symmetric matrix variables.
	ERR_INVALID_FILE_FORMAT_FOR_CFIX                     Code = 4001   // The file format does not support a problem with nonzero fixed term in c.
	ERR_INVALID_FILE_FORMAT_FOR_RANGED_CONSTRAINTS       Code = 4002   // The file format does not support a problem with ranged constraints.
	ERR_INVALID_FILE_FORMAT_FOR_FREE_CONSTRAINTS         Code = 4003   // The file format does not support a problem with free constraints.
	ERR_INVALID_FILE_FORMAT_FOR_CONES                    Code = 4005   // The file format does not support a problem with conic constraints.
	ERR_INVALID_FILE_FORMAT_FOR_QUADRATIC_TERMS          Code = 4006   // The file format does not support a problem with quadratic terms.
	ERR_INVALID_FILE_FORMAT_FOR_NONLINEAR                Code = 4010   // The file format does not support a problem with nonlinear terms.
	ERR_INVALID_FILE_FORMAT_FOR_DISJUNCTIVE_CONSTRAINTS  Code = 4011   // The file format does not support a problem with disjunctive constraints.
	ERR_INVALID_FILE_FORMAT_FOR_AFFINE_CONIC_CONSTRAINTS Code = 4012   // The file format does not support a problem with affine conic constraints.
	ERR_DUPLICATE_CONSTRAINT_NAMES                       Code = 4500   // Two constraint names are identical.
	ERR_DUPLICATE_VARIABLE_NAMES                         Code = 4501   // Two variable names are identical.
	ERR_DUPLICATE_BARVARIABLE_NAMES                      Code = 4502   // Two barvariable names are identical.
	ERR_DUPLICATE_CONE_NAMES                             Code = 4503   // Two cone names are identical.
	ERR_DUPLICATE_DOMAIN_NAMES                           Code = 4504   // Two domain names are identical.
	ERR_DUPLICATE_DJC_NAMES                              Code = 4505   // Two disjunctive constraint names are identical.
	ERR_NON_UNIQUE_ARRAY                                 Code = 5000   // An array does not contain unique elements.
	ERR_ARGUMENT_IS_TOO_SMALL                            Code = 5004   // The value of a function argument is too small.
	ERR_ARGUMENT_IS_TOO_LARGE                            Code = 5005   // The value of a function argument is too large.
	ERR_MIO_INTERNAL                                     Code = 5010   // A fatal error occurred in the mixed integer optimizer.  Please contact MOSEK support.
	ERR_INVALID_PROBLEM_TYPE                             Code = 6000   // An invalid problem type.
	ERR_UNHANDLED_SOLUTION_STATUS                        Code = 6010   // Unhandled solution status.
	ERR_UPPER_TRIANGLE                                   Code = 6020   // An element in the upper triangle of a lower triangular matrix is specified.
	ERR_LAU_SINGULAR_MATRIX                              Code = 7000   // A matrix is singular.
	ERR_LAU_NOT_POSITIVE_DEFINITE                        Code = 7001   // A matrix is not positive definite.
	ERR_LAU_INVALID_LOWER_TRIANGULAR_MATRIX              Code = 7002   // An invalid lower triangular matrix.
	ERR_LAU_UNKNOWN                                      Code = 7005   // An unknown error.
	ERR_LAU_ARG_M                                        Code = 7010   // Invalid argument m.
	ERR_LAU_ARG_N                                        Code = 7011   // Invalid argument n.
	ERR_LAU_ARG_K                                        Code = 7012   // Invalid argument k.
	ERR_LAU_ARG_TRANSA                                   Code = 7015   // Invalid argument transa.
	ERR_LAU_ARG_TRANSB                                   Code = 7016   // Invalid argument transb.
	ERR_LAU_ARG_UPLO                                     Code = 7017   // Invalid argument uplo.
	ERR_LAU_ARG_TRANS                                    Code = 7018   // Invalid argument trans.
	ERR_LAU_INVALID_SPARSE_SYMMETRIC_MATRIX              Code = 7019   // An invalid sparse symmetric matrix is specfified.
	ERR_CBF_PARSE                                        Code = 7100   // An error occurred while parsing an CBF file.
	ERR_CBF_OBJ_SENSE                                    Code = 7101   // An invalid objective sense is specified.
	ERR_CBF_NO_VARIABLES                                 Code = 7102   // An invalid objective sense is specified.
	ERR_CBF_TOO_MANY_CONSTRAINTS                         Code = 7103   // Too many constraints specified.
	ERR_CBF_TOO_MANY_VARIABLES                           Code = 7104   // Too many variables specified.
	ERR_CBF_NO_VERSION_SPECIFIED                         Code = 7105   // No version specified.
	ERR_CBF_SYNTAX                                       Code = 7106   // Invalid syntax.
	ERR_CBF_DUPLICATE_OBJ                                Code = 7107   // Duplicate OBJ keyword.
	ERR_CBF_DUPLICATE_CON                                Code = 7108   // Duplicate CON keyword.
	ERR_CBF_DUPLICATE_VAR                                Code = 7110   // Duplicate VAR keyword.
	ERR_CBF_DUPLICATE_INT                                Code = 7111   // Duplicate INT keyword.
	ERR_CBF_INVALID_VAR_TYPE                             Code = 7112   // Invalid variable type.
	ERR_CBF_INVALID_CON_TYPE                             Code = 7113   // Invalid constraint type.
	ERR_CBF_INVALID_DOMAIN_DIMENSION                     Code = 7114   // Invalid domain dimension.
	ERR_CBF_DUPLICATE_OBJACOORD                          Code = 7115   // Duplicate index in OBJCOORD.
	ERR_CBF_DUPLICATE_BCOORD                             Code = 7116   // Duplicate index in BCOORD.
	ERR_CBF_DUPLICATE_ACOORD                             Code = 7117   // Duplicate index in ACOORD.
	ERR_CBF_TOO_FEW_VARIABLES                            Code = 7118   // Too few variables defined.
	ERR_CBF_TOO_FEW_CONSTRAINTS                          Code = 7119   // Too few constraints defined.
	ERR_CBF_TOO_FEW_INTS                                 Code = 7120   // Too ints specified.
	ERR_CBF_TOO_MANY_INTS                                Code = 7121   // Too ints specified.
	ERR_CBF_INVALID_INT_INDEX                            Code = 7122   // Invalid INT index.
	ERR_CBF_UNSUPPORTED                                  Code = 7123   // Unsupported feature is present.
	ERR_CBF_DUPLICATE_PSDVAR                             Code = 7124   // Duplicate PSDVAR keyword.
	ERR_CBF_INVALID_PSDVAR_DIMENSION                     Code = 7125   // Invalid PSDVAR dimension.
	ERR_CBF_TOO_FEW_PSDVAR                               Code = 7126   // Too few variables defined.
	ERR_CBF_INVALID_EXP_DIMENSION                        Code = 7127   // Invalid dimension of a exponential cone.
	ERR_CBF_DUPLICATE_POW_CONES                          Code = 7130   // Multiple POWCONES specified.
	ERR_CBF_DUPLICATE_POW_STAR_CONES                     Code = 7131   // Multiple POW*CONES specified.
	ERR_CBF_INVALID_POWER                                Code = 7132   // Invalid power specified.
	ERR_CBF_POWER_CONE_IS_TOO_LONG                       Code = 7133   // Power cone is too long.
	ERR_CBF_INVALID_POWER_CONE_INDEX                     Code = 7134   // Invalid power cone index.
	ERR_CBF_INVALID_POWER_STAR_CONE_INDEX                Code = 7135   // Invalid power star cone index.
	ERR_CBF_UNHANDLED_POWER_CONE_TYPE                    Code = 7136   // An unhandled power cone type.
	ERR_CBF_UNHANDLED_POWER_STAR_CONE_TYPE               Code = 7137   // An unhandled power star cone type.
	ERR_CBF_POWER_CONE_MISMATCH                          Code = 7138   // The power cone does not match with it definition.
	ERR_CBF_POWER_STAR_CONE_MISMATCH                     Code = 7139   // The power star cone does not match with it definition.
	ERR_CBF_INVALID_NUMBER_OF_CONES                      Code = 7140   // Invalid number of cones.
	ERR_CBF_INVALID_DIMENSION_OF_CONES                   Code = 7141   // Invalid number of cones.
	ERR_CBF_INVALID_NUM_PSDCON                           Code = 7200   // Invalid number of PSDCON.
	ERR_CBF_DUPLICATE_PSDCON                             Code = 7201   // Duplicate CON keyword.
	ERR_CBF_INVALID_DIMENSION_OF_PSDCON                  Code = 7202   // Invalid PSDCON dimension.
	ERR_CBF_INVALID_PSDCON_INDEX                         Code = 7203   // Invalid PSDCON index.
	ERR_CBF_INVALID_PSDCON_VARIABLE_INDEX                Code = 7204   // Invalid PSDCON index.
	ERR_CBF_INVALID_PSDCON_BLOCK_INDEX                   Code = 7205   // Invalid PSDCON index.
	ERR_CBF_UNSUPPORTED_CHANGE                           Code = 7210   // The CHANGE section is not supported.
	ERR_MIO_INVALID_ROOT_OPTIMIZER                       Code = 7700   // An invalid root optimizer was selected for the problem type.
	ERR_MIO_INVALID_NODE_OPTIMIZER                       Code = 7701   // An invalid node optimizer was selected for the problem type.
	ERR_MPS_WRITE_CPLEX_INVALID_CONE_TYPE                Code = 7750   // An invalid cone type occurs when writing a CPLEX formatted MPS file.
	ERR_TOCONIC_CONSTR_Q_NOT_PSD                         Code = 7800   // The matrix defining the quadratric part of constraint is not positive semidefinite.
	ERR_TOCONIC_CONSTRAINT_FX                            Code = 7801   // The quadratic constraint is an equality, thus not convex.
	ERR_TOCONIC_CONSTRAINT_RA                            Code = 7802   // The quadratic constraint has finite lower and upper bound, and therefore it is not convex.
	ERR_TOCONIC_CONSTR_NOT_CONIC                         Code = 7803   // The constraint is not conic representable.
	ERR_TOCONIC_OBJECTIVE_NOT_PSD                        Code = 7804   // The matrix defining the quadratric part of the objective function is not positive semidefinite.
	ERR_SERVER_CONNECT                                   Code = 8000   // Failed to connect to remote solver server.
	ERR_SERVER_PROTOCOL                                  Code = 8001   // Unexpected message or data from solver server.
	ERR_SERVER_STATUS                                    Code = 8002   // Server returned non-ok status code
	ERR_SERVER_TOKEN                                     Code = 8003   // Invalid job ID
	ERR_SERVER_ADDRESS                                   Code = 8004   // Invalid address
	ERR_SERVER_CERTIFICATE                               Code = 8005   // Invalid TLS certificate format or path
	ERR_SERVER_TLS_CLIENT                                Code = 8006   // Failed to create TLS client
	ERR_SERVER_ACCESS_TOKEN                              Code = 8007   // Invalid access token
	ERR_SERVER_PROBLEM_SIZE                              Code = 8008   // The problem is too large.
	ERR_DUPLICATE_FIJ                                    Code = 20100  // An element in the F matrix is specified twice.
	ERR_INVALID_FIJ                                      Code = 20101  // f\[i,j\] contains an invalid floating point value, i.e. a NaN or an infinite value.
	ERR_HUGE_FIJ                                         Code = 20102  // A numerically huge value is specified for an element in F.
	ERR_INVALID_G                                        Code = 20103  // g contains an invalid floating point value, i.e. a NaN or an infinite value.
	ERR_INVALID_B                                        Code = 20150  // b contains an invalid floating point value, i.e. a NaN or an infinite value.
	ERR_DOMAIN_INVALID_INDEX                             Code = 20400  // A domain index is invalid.
	ERR_DOMAIN_DIMENSION                                 Code = 20401  // A domain dimension is invalid.
	ERR_DOMAIN_DIMENSION_PSD                             Code = 20402  // A PSD domain dimension is invalid.
	ERR_NOT_POWER_DOMAIN                                 Code = 20403  // The function is only applicable to primal and dual power cone domains.
	ERR_DOMAIN_POWER_INVALID_ALPHA                       Code = 20404  // Alpha contains an invalid floating point value, i.e. a NaN or an infinite value.
	ERR_DOMAIN_POWER_NEGATIVE_ALPHA                      Code = 20405  // Alpha contains a negative value or zero.
	ERR_DOMAIN_POWER_NLEFT                               Code = 20406  // The value of nleft is too small or too large.
	ERR_AFE_INVALID_INDEX                                Code = 20500  // An affine expression index is invalid.
	ERR_ACC_INVALID_INDEX                                Code = 20600  // A affine conic constraint index is invalid.
	ERR_ACC_INVALID_ENTRY_INDEX                          Code = 20601  // The index of an element in an affine conic constraint is invalid.
	ERR_ACC_AFE_DOMAIN_MISMATCH                          Code = 20602  // There is a mismatch between between the number of affine expressions and total dimension of the domain(s).
	ERR_DJC_INVALID_INDEX                                Code = 20700  // A disjunctive constraint index is invalid.
	ERR_DJC_UNSUPPORTED_DOMAIN_TYPE                      Code = 20701  // An unsupported domain type has been used in a disjunctive constraint.
	ERR_DJC_AFE_DOMAIN_MISMATCH                          Code = 20702  // There is a mismatch between the number of affine expressions and total dimension of the domain(s).
	ERR_DJC_INVALID_TERM_SIZE                            Code = 20703  // A termize is invalid.
	ERR_DJC_DOMAIN_TERMSIZE_MISMATCH                     Code = 20704  // There is a mismatch between the number of domains and the term sizes.
	ERR_DJC_TOTAL_NUM_TERMS_MISMATCH                     Code = 20705  // There total number of terms in all domains does not match.
	ERR_UNDEF_SOLUTION                                   Code = 22000  // The required solution is not defined.
	ERR_NO_DOTY                                          Code = 22010  // No doty is available.
	TRM_MAX_ITERATIONS                                   Code = 100000 // The optimizer terminated at the maximum number of iterations.
	TRM_MAX_TIME                                         Code = 100001 // The optimizer terminated at the maximum amount of time.
	TRM_OBJECTIVE_RANGE                                  Code = 100002 // The optimizer terminated with an objective value outside the objective range.
	TRM_STALL                                            Code = 100006 // The optimizer is terminated due to slow progress.
	TRM_USER_CALLBACK                                    Code = 100007 // The user-defined progress callback function terminated the optimization.
	TRM_MIO_NUM_RELAXS                                   Code = 100008 // The mixed-integer optimizer terminated as the maximum number of relaxations was reached.
	TRM_MIO_NUM_BRANCHES                                 Code = 100009 // The mixed-integer optimizer terminated as the maximum number of branches was reached.
	TRM_NUM_MAX_NUM_INT_SOLUTIONS                        Code = 100015 // The mixed-integer optimizer terminated as the maximum number of feasible solutions was reached.
	TRM_MAX_NUM_SETBACKS                                 Code = 100020 // The optimizer terminated as the maximum number of set-backs was reached.
	TRM_NUMERICAL_PROBLEM                                Code = 100025 // The optimizer terminated due to a numerical problem.
	TRM_LOST_RACE                                        Code = 100027 // Lost a race.
	TRM_INTERNAL                                         Code = 100030 // The optimizer terminated due to some internal reason.
	TRM_INTERNAL_STOP                                    Code = 100031 // The optimizer terminated for internal reasons.
)

var resCodeMsg map[Code]string = make(map[Code]string)

func init() {
	resCodeMsg[OK] = "MSK_RES_OK (0)"
	resCodeMsg[WRN_OPEN_PARAM_FILE] = "MSK_RES_WRN_OPEN_PARAM_FILE (50)"
	resCodeMsg[WRN_LARGE_BOUND] = "MSK_RES_WRN_LARGE_BOUND (51)"
	resCodeMsg[WRN_LARGE_LO_BOUND] = "MSK_RES_WRN_LARGE_LO_BOUND (52)"
	resCodeMsg[WRN_LARGE_UP_BOUND] = "MSK_RES_WRN_LARGE_UP_BOUND (53)"
	resCodeMsg[WRN_LARGE_CON_FX] = "MSK_RES_WRN_LARGE_CON_FX (54)"
	resCodeMsg[WRN_LARGE_CJ] = "MSK_RES_WRN_LARGE_CJ (57)"
	resCodeMsg[WRN_LARGE_AIJ] = "MSK_RES_WRN_LARGE_AIJ (62)"
	resCodeMsg[WRN_ZERO_AIJ] = "MSK_RES_WRN_ZERO_AIJ (63)"
	resCodeMsg[WRN_NAME_MAX_LEN] = "MSK_RES_WRN_NAME_MAX_LEN (65)"
	resCodeMsg[WRN_SPAR_MAX_LEN] = "MSK_RES_WRN_SPAR_MAX_LEN (66)"
	resCodeMsg[WRN_MPS_SPLIT_RHS_VECTOR] = "MSK_RES_WRN_MPS_SPLIT_RHS_VECTOR (70)"
	resCodeMsg[WRN_MPS_SPLIT_RAN_VECTOR] = "MSK_RES_WRN_MPS_SPLIT_RAN_VECTOR (71)"
	resCodeMsg[WRN_MPS_SPLIT_BOU_VECTOR] = "MSK_RES_WRN_MPS_SPLIT_BOU_VECTOR (72)"
	resCodeMsg[WRN_LP_OLD_QUAD_FORMAT] = "MSK_RES_WRN_LP_OLD_QUAD_FORMAT (80)"
	resCodeMsg[WRN_LP_DROP_VARIABLE] = "MSK_RES_WRN_LP_DROP_VARIABLE (85)"
	resCodeMsg[WRN_NZ_IN_UPR_TRI] = "MSK_RES_WRN_NZ_IN_UPR_TRI (200)"
	resCodeMsg[WRN_DROPPED_NZ_QOBJ] = "MSK_RES_WRN_DROPPED_NZ_QOBJ (201)"
	resCodeMsg[WRN_IGNORE_INTEGER] = "MSK_RES_WRN_IGNORE_INTEGER (250)"
	resCodeMsg[WRN_NO_GLOBAL_OPTIMIZER] = "MSK_RES_WRN_NO_GLOBAL_OPTIMIZER (251)"
	resCodeMsg[WRN_MIO_INFEASIBLE_FINAL] = "MSK_RES_WRN_MIO_INFEASIBLE_FINAL (270)"
	resCodeMsg[WRN_SOL_FILTER] = "MSK_RES_WRN_SOL_FILTER (300)"
	resCodeMsg[WRN_UNDEF_SOL_FILE_NAME] = "MSK_RES_WRN_UNDEF_SOL_FILE_NAME (350)"
	resCodeMsg[WRN_SOL_FILE_IGNORED_CON] = "MSK_RES_WRN_SOL_FILE_IGNORED_CON (351)"
	resCodeMsg[WRN_SOL_FILE_IGNORED_VAR] = "MSK_RES_WRN_SOL_FILE_IGNORED_VAR (352)"
	resCodeMsg[WRN_TOO_FEW_BASIS_VARS] = "MSK_RES_WRN_TOO_FEW_BASIS_VARS (400)"
	resCodeMsg[WRN_TOO_MANY_BASIS_VARS] = "MSK_RES_WRN_TOO_MANY_BASIS_VARS (405)"
	resCodeMsg[WRN_LICENSE_EXPIRE] = "MSK_RES_WRN_LICENSE_EXPIRE (500)"
	resCodeMsg[WRN_LICENSE_SERVER] = "MSK_RES_WRN_LICENSE_SERVER (501)"
	resCodeMsg[WRN_EMPTY_NAME] = "MSK_RES_WRN_EMPTY_NAME (502)"
	resCodeMsg[WRN_USING_GENERIC_NAMES] = "MSK_RES_WRN_USING_GENERIC_NAMES (503)"
	resCodeMsg[WRN_INVALID_MPS_NAME] = "MSK_RES_WRN_INVALID_MPS_NAME (504)"
	resCodeMsg[WRN_INVALID_MPS_OBJ_NAME] = "MSK_RES_WRN_INVALID_MPS_OBJ_NAME (505)"
	resCodeMsg[WRN_LICENSE_FEATURE_EXPIRE] = "MSK_RES_WRN_LICENSE_FEATURE_EXPIRE (509)"
	resCodeMsg[WRN_PARAM_NAME_DOU] = "MSK_RES_WRN_PARAM_NAME_DOU (510)"
	resCodeMsg[WRN_PARAM_NAME_INT] = "MSK_RES_WRN_PARAM_NAME_INT (511)"
	resCodeMsg[WRN_PARAM_NAME_STR] = "MSK_RES_WRN_PARAM_NAME_STR (512)"
	resCodeMsg[WRN_PARAM_STR_VALUE] = "MSK_RES_WRN_PARAM_STR_VALUE (515)"
	resCodeMsg[WRN_PARAM_IGNORED_CMIO] = "MSK_RES_WRN_PARAM_IGNORED_CMIO (516)"
	resCodeMsg[WRN_ZEROS_IN_SPARSE_ROW] = "MSK_RES_WRN_ZEROS_IN_SPARSE_ROW (705)"
	resCodeMsg[WRN_ZEROS_IN_SPARSE_COL] = "MSK_RES_WRN_ZEROS_IN_SPARSE_COL (710)"
	resCodeMsg[WRN_INCOMPLETE_LINEAR_DEPENDENCY_CHECK] = "MSK_RES_WRN_INCOMPLETE_LINEAR_DEPENDENCY_CHECK (800)"
	resCodeMsg[WRN_ELIMINATOR_SPACE] = "MSK_RES_WRN_ELIMINATOR_SPACE (801)"
	resCodeMsg[WRN_PRESOLVE_OUTOFSPACE] = "MSK_RES_WRN_PRESOLVE_OUTOFSPACE (802)"
	resCodeMsg[WRN_PRESOLVE_PRIMAL_PERTUBATIONS] = "MSK_RES_WRN_PRESOLVE_PRIMAL_PERTUBATIONS (803)"
	resCodeMsg[WRN_WRITE_CHANGED_NAMES] = "MSK_RES_WRN_WRITE_CHANGED_NAMES (830)"
	resCodeMsg[WRN_WRITE_DISCARDED_CFIX] = "MSK_RES_WRN_WRITE_DISCARDED_CFIX (831)"
	resCodeMsg[WRN_DUPLICATE_CONSTRAINT_NAMES] = "MSK_RES_WRN_DUPLICATE_CONSTRAINT_NAMES (850)"
	resCodeMsg[WRN_DUPLICATE_VARIABLE_NAMES] = "MSK_RES_WRN_DUPLICATE_VARIABLE_NAMES (851)"
	resCodeMsg[WRN_DUPLICATE_BARVARIABLE_NAMES] = "MSK_RES_WRN_DUPLICATE_BARVARIABLE_NAMES (852)"
	resCodeMsg[WRN_DUPLICATE_CONE_NAMES] = "MSK_RES_WRN_DUPLICATE_CONE_NAMES (853)"
	resCodeMsg[WRN_WRITE_LP_INVALID_VAR_NAMES] = "MSK_RES_WRN_WRITE_LP_INVALID_VAR_NAMES (854)"
	resCodeMsg[WRN_WRITE_LP_DUPLICATE_VAR_NAMES] = "MSK_RES_WRN_WRITE_LP_DUPLICATE_VAR_NAMES (855)"
	resCodeMsg[WRN_WRITE_LP_INVALID_CON_NAMES] = "MSK_RES_WRN_WRITE_LP_INVALID_CON_NAMES (856)"
	resCodeMsg[WRN_WRITE_LP_DUPLICATE_CON_NAMES] = "MSK_RES_WRN_WRITE_LP_DUPLICATE_CON_NAMES (857)"
	resCodeMsg[WRN_ANA_LARGE_BOUNDS] = "MSK_RES_WRN_ANA_LARGE_BOUNDS (900)"
	resCodeMsg[WRN_ANA_C_ZERO] = "MSK_RES_WRN_ANA_C_ZERO (901)"
	resCodeMsg[WRN_ANA_EMPTY_COLS] = "MSK_RES_WRN_ANA_EMPTY_COLS (902)"
	resCodeMsg[WRN_ANA_CLOSE_BOUNDS] = "MSK_RES_WRN_ANA_CLOSE_BOUNDS (903)"
	resCodeMsg[WRN_ANA_ALMOST_INT_BOUNDS] = "MSK_RES_WRN_ANA_ALMOST_INT_BOUNDS (904)"
	resCodeMsg[WRN_NO_INFEASIBILITY_REPORT_WHEN_MATRIX_VARIABLES] = "MSK_RES_WRN_NO_INFEASIBILITY_REPORT_WHEN_MATRIX_VARIABLES (930)"
	resCodeMsg[WRN_NO_DUALIZER] = "MSK_RES_WRN_NO_DUALIZER (950)"
	resCodeMsg[WRN_SYM_MAT_LARGE] = "MSK_RES_WRN_SYM_MAT_LARGE (960)"
	resCodeMsg[WRN_MODIFIED_DOUBLE_PARAMETER] = "MSK_RES_WRN_MODIFIED_DOUBLE_PARAMETER (970)"
	resCodeMsg[WRN_LARGE_FIJ] = "MSK_RES_WRN_LARGE_FIJ (980)"
	resCodeMsg[ERR_LICENSE] = "MSK_RES_ERR_LICENSE (1000)"
	resCodeMsg[ERR_LICENSE_EXPIRED] = "MSK_RES_ERR_LICENSE_EXPIRED (1001)"
	resCodeMsg[ERR_LICENSE_VERSION] = "MSK_RES_ERR_LICENSE_VERSION (1002)"
	resCodeMsg[ERR_LICENSE_OLD_SERVER_VERSION] = "MSK_RES_ERR_LICENSE_OLD_SERVER_VERSION (1003)"
	resCodeMsg[ERR_SIZE_LICENSE] = "MSK_RES_ERR_SIZE_LICENSE (1005)"
	resCodeMsg[ERR_PROB_LICENSE] = "MSK_RES_ERR_PROB_LICENSE (1006)"
	resCodeMsg[ERR_FILE_LICENSE] = "MSK_RES_ERR_FILE_LICENSE (1007)"
	resCodeMsg[ERR_MISSING_LICENSE_FILE] = "MSK_RES_ERR_MISSING_LICENSE_FILE (1008)"
	resCodeMsg[ERR_SIZE_LICENSE_CON] = "MSK_RES_ERR_SIZE_LICENSE_CON (1010)"
	resCodeMsg[ERR_SIZE_LICENSE_VAR] = "MSK_RES_ERR_SIZE_LICENSE_VAR (1011)"
	resCodeMsg[ERR_SIZE_LICENSE_INTVAR] = "MSK_RES_ERR_SIZE_LICENSE_INTVAR (1012)"
	resCodeMsg[ERR_OPTIMIZER_LICENSE] = "MSK_RES_ERR_OPTIMIZER_LICENSE (1013)"
	resCodeMsg[ERR_FLEXLM] = "MSK_RES_ERR_FLEXLM (1014)"
	resCodeMsg[ERR_LICENSE_SERVER] = "MSK_RES_ERR_LICENSE_SERVER (1015)"
	resCodeMsg[ERR_LICENSE_MAX] = "MSK_RES_ERR_LICENSE_MAX (1016)"
	resCodeMsg[ERR_LICENSE_MOSEKLM_DAEMON] = "MSK_RES_ERR_LICENSE_MOSEKLM_DAEMON (1017)"
	resCodeMsg[ERR_LICENSE_FEATURE] = "MSK_RES_ERR_LICENSE_FEATURE (1018)"
	resCodeMsg[ERR_PLATFORM_NOT_LICENSED] = "MSK_RES_ERR_PLATFORM_NOT_LICENSED (1019)"
	resCodeMsg[ERR_LICENSE_CANNOT_ALLOCATE] = "MSK_RES_ERR_LICENSE_CANNOT_ALLOCATE (1020)"
	resCodeMsg[ERR_LICENSE_CANNOT_CONNECT] = "MSK_RES_ERR_LICENSE_CANNOT_CONNECT (1021)"
	resCodeMsg[ERR_LICENSE_INVALID_HOSTID] = "MSK_RES_ERR_LICENSE_INVALID_HOSTID (1025)"
	resCodeMsg[ERR_LICENSE_SERVER_VERSION] = "MSK_RES_ERR_LICENSE_SERVER_VERSION (1026)"
	resCodeMsg[ERR_LICENSE_NO_SERVER_SUPPORT] = "MSK_RES_ERR_LICENSE_NO_SERVER_SUPPORT (1027)"
	resCodeMsg[ERR_LICENSE_NO_SERVER_LINE] = "MSK_RES_ERR_LICENSE_NO_SERVER_LINE (1028)"
	resCodeMsg[ERR_OLDER_DLL] = "MSK_RES_ERR_OLDER_DLL (1035)"
	resCodeMsg[ERR_NEWER_DLL] = "MSK_RES_ERR_NEWER_DLL (1036)"
	resCodeMsg[ERR_LINK_FILE_DLL] = "MSK_RES_ERR_LINK_FILE_DLL (1040)"
	resCodeMsg[ERR_THREAD_MUTEX_INIT] = "MSK_RES_ERR_THREAD_MUTEX_INIT (1045)"
	resCodeMsg[ERR_THREAD_MUTEX_LOCK] = "MSK_RES_ERR_THREAD_MUTEX_LOCK (1046)"
	resCodeMsg[ERR_THREAD_MUTEX_UNLOCK] = "MSK_RES_ERR_THREAD_MUTEX_UNLOCK (1047)"
	resCodeMsg[ERR_THREAD_CREATE] = "MSK_RES_ERR_THREAD_CREATE (1048)"
	resCodeMsg[ERR_THREAD_COND_INIT] = "MSK_RES_ERR_THREAD_COND_INIT (1049)"
	resCodeMsg[ERR_UNKNOWN] = "MSK_RES_ERR_UNKNOWN (1050)"
	resCodeMsg[ERR_SPACE] = "MSK_RES_ERR_SPACE (1051)"
	resCodeMsg[ERR_FILE_OPEN] = "MSK_RES_ERR_FILE_OPEN (1052)"
	resCodeMsg[ERR_FILE_READ] = "MSK_RES_ERR_FILE_READ (1053)"
	resCodeMsg[ERR_FILE_WRITE] = "MSK_RES_ERR_FILE_WRITE (1054)"
	resCodeMsg[ERR_DATA_FILE_EXT] = "MSK_RES_ERR_DATA_FILE_EXT (1055)"
	resCodeMsg[ERR_INVALID_FILE_NAME] = "MSK_RES_ERR_INVALID_FILE_NAME (1056)"
	resCodeMsg[ERR_INVALID_SOL_FILE_NAME] = "MSK_RES_ERR_INVALID_SOL_FILE_NAME (1057)"
	resCodeMsg[ERR_END_OF_FILE] = "MSK_RES_ERR_END_OF_FILE (1059)"
	resCodeMsg[ERR_NULL_ENV] = "MSK_RES_ERR_NULL_ENV (1060)"
	resCodeMsg[ERR_NULL_TASK] = "MSK_RES_ERR_NULL_TASK (1061)"
	resCodeMsg[ERR_INVALID_STREAM] = "MSK_RES_ERR_INVALID_STREAM (1062)"
	resCodeMsg[ERR_NO_INIT_ENV] = "MSK_RES_ERR_NO_INIT_ENV (1063)"
	resCodeMsg[ERR_INVALID_TASK] = "MSK_RES_ERR_INVALID_TASK (1064)"
	resCodeMsg[ERR_NULL_POINTER] = "MSK_RES_ERR_NULL_POINTER (1065)"
	resCodeMsg[ERR_LIVING_TASKS] = "MSK_RES_ERR_LIVING_TASKS (1066)"
	resCodeMsg[ERR_BLANK_NAME] = "MSK_RES_ERR_BLANK_NAME (1070)"
	resCodeMsg[ERR_DUP_NAME] = "MSK_RES_ERR_DUP_NAME (1071)"
	resCodeMsg[ERR_FORMAT_STRING] = "MSK_RES_ERR_FORMAT_STRING (1072)"
	resCodeMsg[ERR_SPARSITY_SPECIFICATION] = "MSK_RES_ERR_SPARSITY_SPECIFICATION (1073)"
	resCodeMsg[ERR_MISMATCHING_DIMENSION] = "MSK_RES_ERR_MISMATCHING_DIMENSION (1074)"
	resCodeMsg[ERR_INVALID_OBJ_NAME] = "MSK_RES_ERR_INVALID_OBJ_NAME (1075)"
	resCodeMsg[ERR_INVALID_CON_NAME] = "MSK_RES_ERR_INVALID_CON_NAME (1076)"
	resCodeMsg[ERR_INVALID_VAR_NAME] = "MSK_RES_ERR_INVALID_VAR_NAME (1077)"
	resCodeMsg[ERR_INVALID_CONE_NAME] = "MSK_RES_ERR_INVALID_CONE_NAME (1078)"
	resCodeMsg[ERR_INVALID_BARVAR_NAME] = "MSK_RES_ERR_INVALID_BARVAR_NAME (1079)"
	resCodeMsg[ERR_SPACE_LEAKING] = "MSK_RES_ERR_SPACE_LEAKING (1080)"
	resCodeMsg[ERR_SPACE_NO_INFO] = "MSK_RES_ERR_SPACE_NO_INFO (1081)"
	resCodeMsg[ERR_DIMENSION_SPECIFICATION] = "MSK_RES_ERR_DIMENSION_SPECIFICATION (1082)"
	resCodeMsg[ERR_AXIS_NAME_SPECIFICATION] = "MSK_RES_ERR_AXIS_NAME_SPECIFICATION (1083)"
	resCodeMsg[ERR_READ_FORMAT] = "MSK_RES_ERR_READ_FORMAT (1090)"
	resCodeMsg[ERR_MPS_FILE] = "MSK_RES_ERR_MPS_FILE (1100)"
	resCodeMsg[ERR_MPS_INV_FIELD] = "MSK_RES_ERR_MPS_INV_FIELD (1101)"
	resCodeMsg[ERR_MPS_INV_MARKER] = "MSK_RES_ERR_MPS_INV_MARKER (1102)"
	resCodeMsg[ERR_MPS_NULL_CON_NAME] = "MSK_RES_ERR_MPS_NULL_CON_NAME (1103)"
	resCodeMsg[ERR_MPS_NULL_VAR_NAME] = "MSK_RES_ERR_MPS_NULL_VAR_NAME (1104)"
	resCodeMsg[ERR_MPS_UNDEF_CON_NAME] = "MSK_RES_ERR_MPS_UNDEF_CON_NAME (1105)"
	resCodeMsg[ERR_MPS_UNDEF_VAR_NAME] = "MSK_RES_ERR_MPS_UNDEF_VAR_NAME (1106)"
	resCodeMsg[ERR_MPS_INVALID_CON_KEY] = "MSK_RES_ERR_MPS_INVALID_CON_KEY (1107)"
	resCodeMsg[ERR_MPS_INVALID_BOUND_KEY] = "MSK_RES_ERR_MPS_INVALID_BOUND_KEY (1108)"
	resCodeMsg[ERR_MPS_INVALID_SEC_NAME] = "MSK_RES_ERR_MPS_INVALID_SEC_NAME (1109)"
	resCodeMsg[ERR_MPS_NO_OBJECTIVE] = "MSK_RES_ERR_MPS_NO_OBJECTIVE (1110)"
	resCodeMsg[ERR_MPS_SPLITTED_VAR] = "MSK_RES_ERR_MPS_SPLITTED_VAR (1111)"
	resCodeMsg[ERR_MPS_MUL_CON_NAME] = "MSK_RES_ERR_MPS_MUL_CON_NAME (1112)"
	resCodeMsg[ERR_MPS_MUL_QSEC] = "MSK_RES_ERR_MPS_MUL_QSEC (1113)"
	resCodeMsg[ERR_MPS_MUL_QOBJ] = "MSK_RES_ERR_MPS_MUL_QOBJ (1114)"
	resCodeMsg[ERR_MPS_INV_SEC_ORDER] = "MSK_RES_ERR_MPS_INV_SEC_ORDER (1115)"
	resCodeMsg[ERR_MPS_MUL_CSEC] = "MSK_RES_ERR_MPS_MUL_CSEC (1116)"
	resCodeMsg[ERR_MPS_CONE_TYPE] = "MSK_RES_ERR_MPS_CONE_TYPE (1117)"
	resCodeMsg[ERR_MPS_CONE_OVERLAP] = "MSK_RES_ERR_MPS_CONE_OVERLAP (1118)"
	resCodeMsg[ERR_MPS_CONE_REPEAT] = "MSK_RES_ERR_MPS_CONE_REPEAT (1119)"
	resCodeMsg[ERR_MPS_NON_SYMMETRIC_Q] = "MSK_RES_ERR_MPS_NON_SYMMETRIC_Q (1120)"
	resCodeMsg[ERR_MPS_DUPLICATE_Q_ELEMENT] = "MSK_RES_ERR_MPS_DUPLICATE_Q_ELEMENT (1121)"
	resCodeMsg[ERR_MPS_INVALID_OBJSENSE] = "MSK_RES_ERR_MPS_INVALID_OBJSENSE (1122)"
	resCodeMsg[ERR_MPS_TAB_IN_FIELD2] = "MSK_RES_ERR_MPS_TAB_IN_FIELD2 (1125)"
	resCodeMsg[ERR_MPS_TAB_IN_FIELD3] = "MSK_RES_ERR_MPS_TAB_IN_FIELD3 (1126)"
	resCodeMsg[ERR_MPS_TAB_IN_FIELD5] = "MSK_RES_ERR_MPS_TAB_IN_FIELD5 (1127)"
	resCodeMsg[ERR_MPS_INVALID_OBJ_NAME] = "MSK_RES_ERR_MPS_INVALID_OBJ_NAME (1128)"
	resCodeMsg[ERR_MPS_INVALID_KEY] = "MSK_RES_ERR_MPS_INVALID_KEY (1129)"
	resCodeMsg[ERR_MPS_INVALID_INDICATOR_CONSTRAINT] = "MSK_RES_ERR_MPS_INVALID_INDICATOR_CONSTRAINT (1130)"
	resCodeMsg[ERR_MPS_INVALID_INDICATOR_VARIABLE] = "MSK_RES_ERR_MPS_INVALID_INDICATOR_VARIABLE (1131)"
	resCodeMsg[ERR_MPS_INVALID_INDICATOR_VALUE] = "MSK_RES_ERR_MPS_INVALID_INDICATOR_VALUE (1132)"
	resCodeMsg[ERR_MPS_INVALID_INDICATOR_QUADRATIC_CONSTRAINT] = "MSK_RES_ERR_MPS_INVALID_INDICATOR_QUADRATIC_CONSTRAINT (1133)"
	resCodeMsg[ERR_OPF_SYNTAX] = "MSK_RES_ERR_OPF_SYNTAX (1134)"
	resCodeMsg[ERR_OPF_PREMATURE_EOF] = "MSK_RES_ERR_OPF_PREMATURE_EOF (1136)"
	resCodeMsg[ERR_OPF_MISMATCHED_TAG] = "MSK_RES_ERR_OPF_MISMATCHED_TAG (1137)"
	resCodeMsg[ERR_OPF_DUPLICATE_BOUND] = "MSK_RES_ERR_OPF_DUPLICATE_BOUND (1138)"
	resCodeMsg[ERR_OPF_DUPLICATE_CONSTRAINT_NAME] = "MSK_RES_ERR_OPF_DUPLICATE_CONSTRAINT_NAME (1139)"
	resCodeMsg[ERR_OPF_INVALID_CONE_TYPE] = "MSK_RES_ERR_OPF_INVALID_CONE_TYPE (1140)"
	resCodeMsg[ERR_OPF_INCORRECT_TAG_PARAM] = "MSK_RES_ERR_OPF_INCORRECT_TAG_PARAM (1141)"
	resCodeMsg[ERR_OPF_INVALID_TAG] = "MSK_RES_ERR_OPF_INVALID_TAG (1142)"
	resCodeMsg[ERR_OPF_DUPLICATE_CONE_ENTRY] = "MSK_RES_ERR_OPF_DUPLICATE_CONE_ENTRY (1143)"
	resCodeMsg[ERR_OPF_TOO_LARGE] = "MSK_RES_ERR_OPF_TOO_LARGE (1144)"
	resCodeMsg[ERR_OPF_DUAL_INTEGER_SOLUTION] = "MSK_RES_ERR_OPF_DUAL_INTEGER_SOLUTION (1146)"
	resCodeMsg[ERR_LP_INCOMPATIBLE] = "MSK_RES_ERR_LP_INCOMPATIBLE (1150)"
	resCodeMsg[ERR_LP_EMPTY] = "MSK_RES_ERR_LP_EMPTY (1151)"
	resCodeMsg[ERR_LP_DUP_SLACK_NAME] = "MSK_RES_ERR_LP_DUP_SLACK_NAME (1152)"
	resCodeMsg[ERR_WRITE_MPS_INVALID_NAME] = "MSK_RES_ERR_WRITE_MPS_INVALID_NAME (1153)"
	resCodeMsg[ERR_LP_INVALID_VAR_NAME] = "MSK_RES_ERR_LP_INVALID_VAR_NAME (1154)"
	resCodeMsg[ERR_LP_FREE_CONSTRAINT] = "MSK_RES_ERR_LP_FREE_CONSTRAINT (1155)"
	resCodeMsg[ERR_WRITE_OPF_INVALID_VAR_NAME] = "MSK_RES_ERR_WRITE_OPF_INVALID_VAR_NAME (1156)"
	resCodeMsg[ERR_LP_FILE_FORMAT] = "MSK_RES_ERR_LP_FILE_FORMAT (1157)"
	resCodeMsg[ERR_WRITE_LP_FORMAT] = "MSK_RES_ERR_WRITE_LP_FORMAT (1158)"
	resCodeMsg[ERR_READ_LP_MISSING_END_TAG] = "MSK_RES_ERR_READ_LP_MISSING_END_TAG (1159)"
	resCodeMsg[ERR_LP_INDICATOR_VAR] = "MSK_RES_ERR_LP_INDICATOR_VAR (1160)"
	resCodeMsg[ERR_WRITE_LP_NON_UNIQUE_NAME] = "MSK_RES_ERR_WRITE_LP_NON_UNIQUE_NAME (1161)"
	resCodeMsg[ERR_READ_LP_NONEXISTING_NAME] = "MSK_RES_ERR_READ_LP_NONEXISTING_NAME (1162)"
	resCodeMsg[ERR_LP_WRITE_CONIC_PROBLEM] = "MSK_RES_ERR_LP_WRITE_CONIC_PROBLEM (1163)"
	resCodeMsg[ERR_LP_WRITE_GECO_PROBLEM] = "MSK_RES_ERR_LP_WRITE_GECO_PROBLEM (1164)"
	resCodeMsg[ERR_WRITING_FILE] = "MSK_RES_ERR_WRITING_FILE (1166)"
	resCodeMsg[ERR_INVALID_NAME_IN_SOL_FILE] = "MSK_RES_ERR_INVALID_NAME_IN_SOL_FILE (1170)"
	resCodeMsg[ERR_LP_INVALID_CON_NAME] = "MSK_RES_ERR_LP_INVALID_CON_NAME (1171)"
	resCodeMsg[ERR_JSON_SYNTAX] = "MSK_RES_ERR_JSON_SYNTAX (1175)"
	resCodeMsg[ERR_JSON_STRING] = "MSK_RES_ERR_JSON_STRING (1176)"
	resCodeMsg[ERR_JSON_NUMBER_OVERFLOW] = "MSK_RES_ERR_JSON_NUMBER_OVERFLOW (1177)"
	resCodeMsg[ERR_JSON_FORMAT] = "MSK_RES_ERR_JSON_FORMAT (1178)"
	resCodeMsg[ERR_JSON_DATA] = "MSK_RES_ERR_JSON_DATA (1179)"
	resCodeMsg[ERR_JSON_MISSING_DATA] = "MSK_RES_ERR_JSON_MISSING_DATA (1180)"
	resCodeMsg[ERR_PTF_INCOMPATIBILITY] = "MSK_RES_ERR_PTF_INCOMPATIBILITY (1181)"
	resCodeMsg[ERR_PTF_UNDEFINED_ITEM] = "MSK_RES_ERR_PTF_UNDEFINED_ITEM (1182)"
	resCodeMsg[ERR_PTF_INCONSISTENCY] = "MSK_RES_ERR_PTF_INCONSISTENCY (1183)"
	resCodeMsg[ERR_PTF_FORMAT] = "MSK_RES_ERR_PTF_FORMAT (1184)"
	resCodeMsg[ERR_ARGUMENT_LENNEQ] = "MSK_RES_ERR_ARGUMENT_LENNEQ (1197)"
	resCodeMsg[ERR_ARGUMENT_TYPE] = "MSK_RES_ERR_ARGUMENT_TYPE (1198)"
	resCodeMsg[ERR_NUM_ARGUMENTS] = "MSK_RES_ERR_NUM_ARGUMENTS (1199)"
	resCodeMsg[ERR_IN_ARGUMENT] = "MSK_RES_ERR_IN_ARGUMENT (1200)"
	resCodeMsg[ERR_ARGUMENT_DIMENSION] = "MSK_RES_ERR_ARGUMENT_DIMENSION (1201)"
	resCodeMsg[ERR_SHAPE_IS_TOO_LARGE] = "MSK_RES_ERR_SHAPE_IS_TOO_LARGE (1202)"
	resCodeMsg[ERR_INDEX_IS_TOO_SMALL] = "MSK_RES_ERR_INDEX_IS_TOO_SMALL (1203)"
	resCodeMsg[ERR_INDEX_IS_TOO_LARGE] = "MSK_RES_ERR_INDEX_IS_TOO_LARGE (1204)"
	resCodeMsg[ERR_INDEX_IS_NOT_UNIQUE] = "MSK_RES_ERR_INDEX_IS_NOT_UNIQUE (1205)"
	resCodeMsg[ERR_PARAM_NAME] = "MSK_RES_ERR_PARAM_NAME (1206)"
	resCodeMsg[ERR_PARAM_NAME_DOU] = "MSK_RES_ERR_PARAM_NAME_DOU (1207)"
	resCodeMsg[ERR_PARAM_NAME_INT] = "MSK_RES_ERR_PARAM_NAME_INT (1208)"
	resCodeMsg[ERR_PARAM_NAME_STR] = "MSK_RES_ERR_PARAM_NAME_STR (1209)"
	resCodeMsg[ERR_PARAM_INDEX] = "MSK_RES_ERR_PARAM_INDEX (1210)"
	resCodeMsg[ERR_PARAM_IS_TOO_LARGE] = "MSK_RES_ERR_PARAM_IS_TOO_LARGE (1215)"
	resCodeMsg[ERR_PARAM_IS_TOO_SMALL] = "MSK_RES_ERR_PARAM_IS_TOO_SMALL (1216)"
	resCodeMsg[ERR_PARAM_VALUE_STR] = "MSK_RES_ERR_PARAM_VALUE_STR (1217)"
	resCodeMsg[ERR_PARAM_TYPE] = "MSK_RES_ERR_PARAM_TYPE (1218)"
	resCodeMsg[ERR_INF_DOU_INDEX] = "MSK_RES_ERR_INF_DOU_INDEX (1219)"
	resCodeMsg[ERR_INF_INT_INDEX] = "MSK_RES_ERR_INF_INT_INDEX (1220)"
	resCodeMsg[ERR_INDEX_ARR_IS_TOO_SMALL] = "MSK_RES_ERR_INDEX_ARR_IS_TOO_SMALL (1221)"
	resCodeMsg[ERR_INDEX_ARR_IS_TOO_LARGE] = "MSK_RES_ERR_INDEX_ARR_IS_TOO_LARGE (1222)"
	resCodeMsg[ERR_INF_LINT_INDEX] = "MSK_RES_ERR_INF_LINT_INDEX (1225)"
	resCodeMsg[ERR_ARG_IS_TOO_SMALL] = "MSK_RES_ERR_ARG_IS_TOO_SMALL (1226)"
	resCodeMsg[ERR_ARG_IS_TOO_LARGE] = "MSK_RES_ERR_ARG_IS_TOO_LARGE (1227)"
	resCodeMsg[ERR_INVALID_WHICHSOL] = "MSK_RES_ERR_INVALID_WHICHSOL (1228)"
	resCodeMsg[ERR_INF_DOU_NAME] = "MSK_RES_ERR_INF_DOU_NAME (1230)"
	resCodeMsg[ERR_INF_INT_NAME] = "MSK_RES_ERR_INF_INT_NAME (1231)"
	resCodeMsg[ERR_INF_TYPE] = "MSK_RES_ERR_INF_TYPE (1232)"
	resCodeMsg[ERR_INF_LINT_NAME] = "MSK_RES_ERR_INF_LINT_NAME (1234)"
	resCodeMsg[ERR_INDEX] = "MSK_RES_ERR_INDEX (1235)"
	resCodeMsg[ERR_WHICHSOL] = "MSK_RES_ERR_WHICHSOL (1236)"
	resCodeMsg[ERR_SOLITEM] = "MSK_RES_ERR_SOLITEM (1237)"
	resCodeMsg[ERR_WHICHITEM_NOT_ALLOWED] = "MSK_RES_ERR_WHICHITEM_NOT_ALLOWED (1238)"
	resCodeMsg[ERR_MAXNUMCON] = "MSK_RES_ERR_MAXNUMCON (1240)"
	resCodeMsg[ERR_MAXNUMVAR] = "MSK_RES_ERR_MAXNUMVAR (1241)"
	resCodeMsg[ERR_MAXNUMBARVAR] = "MSK_RES_ERR_MAXNUMBARVAR (1242)"
	resCodeMsg[ERR_MAXNUMQNZ] = "MSK_RES_ERR_MAXNUMQNZ (1243)"
	resCodeMsg[ERR_TOO_SMALL_MAX_NUM_NZ] = "MSK_RES_ERR_TOO_SMALL_MAX_NUM_NZ (1245)"
	resCodeMsg[ERR_INVALID_IDX] = "MSK_RES_ERR_INVALID_IDX (1246)"
	resCodeMsg[ERR_INVALID_MAX_NUM] = "MSK_RES_ERR_INVALID_MAX_NUM (1247)"
	resCodeMsg[ERR_UNALLOWED_WHICHSOL] = "MSK_RES_ERR_UNALLOWED_WHICHSOL (1248)"
	resCodeMsg[ERR_NUMCONLIM] = "MSK_RES_ERR_NUMCONLIM (1250)"
	resCodeMsg[ERR_NUMVARLIM] = "MSK_RES_ERR_NUMVARLIM (1251)"
	resCodeMsg[ERR_TOO_SMALL_MAXNUMANZ] = "MSK_RES_ERR_TOO_SMALL_MAXNUMANZ (1252)"
	resCodeMsg[ERR_INV_APTRE] = "MSK_RES_ERR_INV_APTRE (1253)"
	resCodeMsg[ERR_MUL_A_ELEMENT] = "MSK_RES_ERR_MUL_A_ELEMENT (1254)"
	resCodeMsg[ERR_INV_BK] = "MSK_RES_ERR_INV_BK (1255)"
	resCodeMsg[ERR_INV_BKC] = "MSK_RES_ERR_INV_BKC (1256)"
	resCodeMsg[ERR_INV_BKX] = "MSK_RES_ERR_INV_BKX (1257)"
	resCodeMsg[ERR_INV_VAR_TYPE] = "MSK_RES_ERR_INV_VAR_TYPE (1258)"
	resCodeMsg[ERR_SOLVER_PROBTYPE] = "MSK_RES_ERR_SOLVER_PROBTYPE (1259)"
	resCodeMsg[ERR_OBJECTIVE_RANGE] = "MSK_RES_ERR_OBJECTIVE_RANGE (1260)"
	resCodeMsg[ERR_BASIS] = "MSK_RES_ERR_BASIS (1266)"
	resCodeMsg[ERR_INV_SKC] = "MSK_RES_ERR_INV_SKC (1267)"
	resCodeMsg[ERR_INV_SKX] = "MSK_RES_ERR_INV_SKX (1268)"
	resCodeMsg[ERR_INV_SK_STR] = "MSK_RES_ERR_INV_SK_STR (1269)"
	resCodeMsg[ERR_INV_SK] = "MSK_RES_ERR_INV_SK (1270)"
	resCodeMsg[ERR_INV_CONE_TYPE_STR] = "MSK_RES_ERR_INV_CONE_TYPE_STR (1271)"
	resCodeMsg[ERR_INV_CONE_TYPE] = "MSK_RES_ERR_INV_CONE_TYPE (1272)"
	resCodeMsg[ERR_INV_SKN] = "MSK_RES_ERR_INV_SKN (1274)"
	resCodeMsg[ERR_INVALID_SURPLUS] = "MSK_RES_ERR_INVALID_SURPLUS (1275)"
	resCodeMsg[ERR_INV_NAME_ITEM] = "MSK_RES_ERR_INV_NAME_ITEM (1280)"
	resCodeMsg[ERR_PRO_ITEM] = "MSK_RES_ERR_PRO_ITEM (1281)"
	resCodeMsg[ERR_INVALID_FORMAT_TYPE] = "MSK_RES_ERR_INVALID_FORMAT_TYPE (1283)"
	resCodeMsg[ERR_FIRSTI] = "MSK_RES_ERR_FIRSTI (1285)"
	resCodeMsg[ERR_LASTI] = "MSK_RES_ERR_LASTI (1286)"
	resCodeMsg[ERR_FIRSTJ] = "MSK_RES_ERR_FIRSTJ (1287)"
	resCodeMsg[ERR_LASTJ] = "MSK_RES_ERR_LASTJ (1288)"
	resCodeMsg[ERR_MAX_LEN_IS_TOO_SMALL] = "MSK_RES_ERR_MAX_LEN_IS_TOO_SMALL (1289)"
	resCodeMsg[ERR_NONLINEAR_EQUALITY] = "MSK_RES_ERR_NONLINEAR_EQUALITY (1290)"
	resCodeMsg[ERR_NONCONVEX] = "MSK_RES_ERR_NONCONVEX (1291)"
	resCodeMsg[ERR_NONLINEAR_RANGED] = "MSK_RES_ERR_NONLINEAR_RANGED (1292)"
	resCodeMsg[ERR_CON_Q_NOT_PSD] = "MSK_RES_ERR_CON_Q_NOT_PSD (1293)"
	resCodeMsg[ERR_CON_Q_NOT_NSD] = "MSK_RES_ERR_CON_Q_NOT_NSD (1294)"
	resCodeMsg[ERR_OBJ_Q_NOT_PSD] = "MSK_RES_ERR_OBJ_Q_NOT_PSD (1295)"
	resCodeMsg[ERR_OBJ_Q_NOT_NSD] = "MSK_RES_ERR_OBJ_Q_NOT_NSD (1296)"
	resCodeMsg[ERR_ARGUMENT_PERM_ARRAY] = "MSK_RES_ERR_ARGUMENT_PERM_ARRAY (1299)"
	resCodeMsg[ERR_CONE_INDEX] = "MSK_RES_ERR_CONE_INDEX (1300)"
	resCodeMsg[ERR_CONE_SIZE] = "MSK_RES_ERR_CONE_SIZE (1301)"
	resCodeMsg[ERR_CONE_OVERLAP] = "MSK_RES_ERR_CONE_OVERLAP (1302)"
	resCodeMsg[ERR_CONE_REP_VAR] = "MSK_RES_ERR_CONE_REP_VAR (1303)"
	resCodeMsg[ERR_MAXNUMCONE] = "MSK_RES_ERR_MAXNUMCONE (1304)"
	resCodeMsg[ERR_CONE_TYPE] = "MSK_RES_ERR_CONE_TYPE (1305)"
	resCodeMsg[ERR_CONE_TYPE_STR] = "MSK_RES_ERR_CONE_TYPE_STR (1306)"
	resCodeMsg[ERR_CONE_OVERLAP_APPEND] = "MSK_RES_ERR_CONE_OVERLAP_APPEND (1307)"
	resCodeMsg[ERR_REMOVE_CONE_VARIABLE] = "MSK_RES_ERR_REMOVE_CONE_VARIABLE (1310)"
	resCodeMsg[ERR_APPENDING_TOO_BIG_CONE] = "MSK_RES_ERR_APPENDING_TOO_BIG_CONE (1311)"
	resCodeMsg[ERR_CONE_PARAMETER] = "MSK_RES_ERR_CONE_PARAMETER (1320)"
	resCodeMsg[ERR_SOL_FILE_INVALID_NUMBER] = "MSK_RES_ERR_SOL_FILE_INVALID_NUMBER (1350)"
	resCodeMsg[ERR_HUGE_C] = "MSK_RES_ERR_HUGE_C (1375)"
	resCodeMsg[ERR_HUGE_AIJ] = "MSK_RES_ERR_HUGE_AIJ (1380)"
	resCodeMsg[ERR_DUPLICATE_AIJ] = "MSK_RES_ERR_DUPLICATE_AIJ (1385)"
	resCodeMsg[ERR_LOWER_BOUND_IS_A_NAN] = "MSK_RES_ERR_LOWER_BOUND_IS_A_NAN (1390)"
	resCodeMsg[ERR_UPPER_BOUND_IS_A_NAN] = "MSK_RES_ERR_UPPER_BOUND_IS_A_NAN (1391)"
	resCodeMsg[ERR_INFINITE_BOUND] = "MSK_RES_ERR_INFINITE_BOUND (1400)"
	resCodeMsg[ERR_INV_QOBJ_SUBI] = "MSK_RES_ERR_INV_QOBJ_SUBI (1401)"
	resCodeMsg[ERR_INV_QOBJ_SUBJ] = "MSK_RES_ERR_INV_QOBJ_SUBJ (1402)"
	resCodeMsg[ERR_INV_QOBJ_VAL] = "MSK_RES_ERR_INV_QOBJ_VAL (1403)"
	resCodeMsg[ERR_INV_QCON_SUBK] = "MSK_RES_ERR_INV_QCON_SUBK (1404)"
	resCodeMsg[ERR_INV_QCON_SUBI] = "MSK_RES_ERR_INV_QCON_SUBI (1405)"
	resCodeMsg[ERR_INV_QCON_SUBJ] = "MSK_RES_ERR_INV_QCON_SUBJ (1406)"
	resCodeMsg[ERR_INV_QCON_VAL] = "MSK_RES_ERR_INV_QCON_VAL (1407)"
	resCodeMsg[ERR_QCON_SUBI_TOO_SMALL] = "MSK_RES_ERR_QCON_SUBI_TOO_SMALL (1408)"
	resCodeMsg[ERR_QCON_SUBI_TOO_LARGE] = "MSK_RES_ERR_QCON_SUBI_TOO_LARGE (1409)"
	resCodeMsg[ERR_QOBJ_UPPER_TRIANGLE] = "MSK_RES_ERR_QOBJ_UPPER_TRIANGLE (1415)"
	resCodeMsg[ERR_QCON_UPPER_TRIANGLE] = "MSK_RES_ERR_QCON_UPPER_TRIANGLE (1417)"
	resCodeMsg[ERR_FIXED_BOUND_VALUES] = "MSK_RES_ERR_FIXED_BOUND_VALUES (1420)"
	resCodeMsg[ERR_TOO_SMALL_A_TRUNCATION_VALUE] = "MSK_RES_ERR_TOO_SMALL_A_TRUNCATION_VALUE (1421)"
	resCodeMsg[ERR_INVALID_OBJECTIVE_SENSE] = "MSK_RES_ERR_INVALID_OBJECTIVE_SENSE (1445)"
	resCodeMsg[ERR_UNDEFINED_OBJECTIVE_SENSE] = "MSK_RES_ERR_UNDEFINED_OBJECTIVE_SENSE (1446)"
	resCodeMsg[ERR_Y_IS_UNDEFINED] = "MSK_RES_ERR_Y_IS_UNDEFINED (1449)"
	resCodeMsg[ERR_NAN_IN_DOUBLE_DATA] = "MSK_RES_ERR_NAN_IN_DOUBLE_DATA (1450)"
	resCodeMsg[ERR_INF_IN_DOUBLE_DATA] = "MSK_RES_ERR_INF_IN_DOUBLE_DATA (1451)"
	resCodeMsg[ERR_NAN_IN_BLC] = "MSK_RES_ERR_NAN_IN_BLC (1461)"
	resCodeMsg[ERR_NAN_IN_BUC] = "MSK_RES_ERR_NAN_IN_BUC (1462)"
	resCodeMsg[ERR_INVALID_CFIX] = "MSK_RES_ERR_INVALID_CFIX (1469)"
	resCodeMsg[ERR_NAN_IN_C] = "MSK_RES_ERR_NAN_IN_C (1470)"
	resCodeMsg[ERR_NAN_IN_BLX] = "MSK_RES_ERR_NAN_IN_BLX (1471)"
	resCodeMsg[ERR_NAN_IN_BUX] = "MSK_RES_ERR_NAN_IN_BUX (1472)"
	resCodeMsg[ERR_INVALID_AIJ] = "MSK_RES_ERR_INVALID_AIJ (1473)"
	resCodeMsg[ERR_INVALID_CJ] = "MSK_RES_ERR_INVALID_CJ (1474)"
	resCodeMsg[ERR_SYM_MAT_INVALID] = "MSK_RES_ERR_SYM_MAT_INVALID (1480)"
	resCodeMsg[ERR_SYM_MAT_HUGE] = "MSK_RES_ERR_SYM_MAT_HUGE (1482)"
	resCodeMsg[ERR_INV_PROBLEM] = "MSK_RES_ERR_INV_PROBLEM (1500)"
	resCodeMsg[ERR_MIXED_CONIC_AND_NL] = "MSK_RES_ERR_MIXED_CONIC_AND_NL (1501)"
	resCodeMsg[ERR_GLOBAL_INV_CONIC_PROBLEM] = "MSK_RES_ERR_GLOBAL_INV_CONIC_PROBLEM (1503)"
	resCodeMsg[ERR_INV_OPTIMIZER] = "MSK_RES_ERR_INV_OPTIMIZER (1550)"
	resCodeMsg[ERR_MIO_NO_OPTIMIZER] = "MSK_RES_ERR_MIO_NO_OPTIMIZER (1551)"
	resCodeMsg[ERR_NO_OPTIMIZER_VAR_TYPE] = "MSK_RES_ERR_NO_OPTIMIZER_VAR_TYPE (1552)"
	resCodeMsg[ERR_FINAL_SOLUTION] = "MSK_RES_ERR_FINAL_SOLUTION (1560)"
	resCodeMsg[ERR_FIRST] = "MSK_RES_ERR_FIRST (1570)"
	resCodeMsg[ERR_LAST] = "MSK_RES_ERR_LAST (1571)"
	resCodeMsg[ERR_SLICE_SIZE] = "MSK_RES_ERR_SLICE_SIZE (1572)"
	resCodeMsg[ERR_NEGATIVE_SURPLUS] = "MSK_RES_ERR_NEGATIVE_SURPLUS (1573)"
	resCodeMsg[ERR_NEGATIVE_APPEND] = "MSK_RES_ERR_NEGATIVE_APPEND (1578)"
	resCodeMsg[ERR_POSTSOLVE] = "MSK_RES_ERR_POSTSOLVE (1580)"
	resCodeMsg[ERR_OVERFLOW] = "MSK_RES_ERR_OVERFLOW (1590)"
	resCodeMsg[ERR_NO_BASIS_SOL] = "MSK_RES_ERR_NO_BASIS_SOL (1600)"
	resCodeMsg[ERR_BASIS_FACTOR] = "MSK_RES_ERR_BASIS_FACTOR (1610)"
	resCodeMsg[ERR_BASIS_SINGULAR] = "MSK_RES_ERR_BASIS_SINGULAR (1615)"
	resCodeMsg[ERR_FACTOR] = "MSK_RES_ERR_FACTOR (1650)"
	resCodeMsg[ERR_FEASREPAIR_CANNOT_RELAX] = "MSK_RES_ERR_FEASREPAIR_CANNOT_RELAX (1700)"
	resCodeMsg[ERR_FEASREPAIR_SOLVING_RELAXED] = "MSK_RES_ERR_FEASREPAIR_SOLVING_RELAXED (1701)"
	resCodeMsg[ERR_FEASREPAIR_INCONSISTENT_BOUND] = "MSK_RES_ERR_FEASREPAIR_INCONSISTENT_BOUND (1702)"
	resCodeMsg[ERR_REPAIR_INVALID_PROBLEM] = "MSK_RES_ERR_REPAIR_INVALID_PROBLEM (1710)"
	resCodeMsg[ERR_REPAIR_OPTIMIZATION_FAILED] = "MSK_RES_ERR_REPAIR_OPTIMIZATION_FAILED (1711)"
	resCodeMsg[ERR_NAME_MAX_LEN] = "MSK_RES_ERR_NAME_MAX_LEN (1750)"
	resCodeMsg[ERR_NAME_IS_NULL] = "MSK_RES_ERR_NAME_IS_NULL (1760)"
	resCodeMsg[ERR_INVALID_COMPRESSION] = "MSK_RES_ERR_INVALID_COMPRESSION (1800)"
	resCodeMsg[ERR_INVALID_IOMODE] = "MSK_RES_ERR_INVALID_IOMODE (1801)"
	resCodeMsg[ERR_NO_PRIMAL_INFEAS_CER] = "MSK_RES_ERR_NO_PRIMAL_INFEAS_CER (2000)"
	resCodeMsg[ERR_NO_DUAL_INFEAS_CER] = "MSK_RES_ERR_NO_DUAL_INFEAS_CER (2001)"
	resCodeMsg[ERR_NO_SOLUTION_IN_CALLBACK] = "MSK_RES_ERR_NO_SOLUTION_IN_CALLBACK (2500)"
	resCodeMsg[ERR_INV_MARKI] = "MSK_RES_ERR_INV_MARKI (2501)"
	resCodeMsg[ERR_INV_MARKJ] = "MSK_RES_ERR_INV_MARKJ (2502)"
	resCodeMsg[ERR_INV_NUMI] = "MSK_RES_ERR_INV_NUMI (2503)"
	resCodeMsg[ERR_INV_NUMJ] = "MSK_RES_ERR_INV_NUMJ (2504)"
	resCodeMsg[ERR_TASK_INCOMPATIBLE] = "MSK_RES_ERR_TASK_INCOMPATIBLE (2560)"
	resCodeMsg[ERR_TASK_INVALID] = "MSK_RES_ERR_TASK_INVALID (2561)"
	resCodeMsg[ERR_TASK_WRITE] = "MSK_RES_ERR_TASK_WRITE (2562)"
	resCodeMsg[ERR_LU_MAX_NUM_TRIES] = "MSK_RES_ERR_LU_MAX_NUM_TRIES (2800)"
	resCodeMsg[ERR_INVALID_UTF8] = "MSK_RES_ERR_INVALID_UTF8 (2900)"
	resCodeMsg[ERR_INVALID_WCHAR] = "MSK_RES_ERR_INVALID_WCHAR (2901)"
	resCodeMsg[ERR_NO_DUAL_FOR_ITG_SOL] = "MSK_RES_ERR_NO_DUAL_FOR_ITG_SOL (2950)"
	resCodeMsg[ERR_NO_SNX_FOR_BAS_SOL] = "MSK_RES_ERR_NO_SNX_FOR_BAS_SOL (2953)"
	resCodeMsg[ERR_INTERNAL] = "MSK_RES_ERR_INTERNAL (3000)"
	resCodeMsg[ERR_API_ARRAY_TOO_SMALL] = "MSK_RES_ERR_API_ARRAY_TOO_SMALL (3001)"
	resCodeMsg[ERR_API_CB_CONNECT] = "MSK_RES_ERR_API_CB_CONNECT (3002)"
	resCodeMsg[ERR_API_FATAL_ERROR] = "MSK_RES_ERR_API_FATAL_ERROR (3005)"
	resCodeMsg[ERR_SEN_FORMAT] = "MSK_RES_ERR_SEN_FORMAT (3050)"
	resCodeMsg[ERR_SEN_UNDEF_NAME] = "MSK_RES_ERR_SEN_UNDEF_NAME (3051)"
	resCodeMsg[ERR_SEN_INDEX_RANGE] = "MSK_RES_ERR_SEN_INDEX_RANGE (3052)"
	resCodeMsg[ERR_SEN_BOUND_INVALID_UP] = "MSK_RES_ERR_SEN_BOUND_INVALID_UP (3053)"
	resCodeMsg[ERR_SEN_BOUND_INVALID_LO] = "MSK_RES_ERR_SEN_BOUND_INVALID_LO (3054)"
	resCodeMsg[ERR_SEN_INDEX_INVALID] = "MSK_RES_ERR_SEN_INDEX_INVALID (3055)"
	resCodeMsg[ERR_SEN_INVALID_REGEXP] = "MSK_RES_ERR_SEN_INVALID_REGEXP (3056)"
	resCodeMsg[ERR_SEN_SOLUTION_STATUS] = "MSK_RES_ERR_SEN_SOLUTION_STATUS (3057)"
	resCodeMsg[ERR_SEN_NUMERICAL] = "MSK_RES_ERR_SEN_NUMERICAL (3058)"
	resCodeMsg[ERR_SEN_UNHANDLED_PROBLEM_TYPE] = "MSK_RES_ERR_SEN_UNHANDLED_PROBLEM_TYPE (3080)"
	resCodeMsg[ERR_UNB_STEP_SIZE] = "MSK_RES_ERR_UNB_STEP_SIZE (3100)"
	resCodeMsg[ERR_IDENTICAL_TASKS] = "MSK_RES_ERR_IDENTICAL_TASKS (3101)"
	resCodeMsg[ERR_AD_INVALID_CODELIST] = "MSK_RES_ERR_AD_INVALID_CODELIST (3102)"
	resCodeMsg[ERR_INTERNAL_TEST_FAILED] = "MSK_RES_ERR_INTERNAL_TEST_FAILED (3500)"
	resCodeMsg[ERR_XML_INVALID_PROBLEM_TYPE] = "MSK_RES_ERR_XML_INVALID_PROBLEM_TYPE (3600)"
	resCodeMsg[ERR_INVALID_AMPL_STUB] = "MSK_RES_ERR_INVALID_AMPL_STUB (3700)"
	resCodeMsg[ERR_INT64_TO_INT32_CAST] = "MSK_RES_ERR_INT64_TO_INT32_CAST (3800)"
	resCodeMsg[ERR_SIZE_LICENSE_NUMCORES] = "MSK_RES_ERR_SIZE_LICENSE_NUMCORES (3900)"
	resCodeMsg[ERR_INFEAS_UNDEFINED] = "MSK_RES_ERR_INFEAS_UNDEFINED (3910)"
	resCodeMsg[ERR_NO_BARX_FOR_SOLUTION] = "MSK_RES_ERR_NO_BARX_FOR_SOLUTION (3915)"
	resCodeMsg[ERR_NO_BARS_FOR_SOLUTION] = "MSK_RES_ERR_NO_BARS_FOR_SOLUTION (3916)"
	resCodeMsg[ERR_BAR_VAR_DIM] = "MSK_RES_ERR_BAR_VAR_DIM (3920)"
	resCodeMsg[ERR_SYM_MAT_INVALID_ROW_INDEX] = "MSK_RES_ERR_SYM_MAT_INVALID_ROW_INDEX (3940)"
	resCodeMsg[ERR_SYM_MAT_INVALID_COL_INDEX] = "MSK_RES_ERR_SYM_MAT_INVALID_COL_INDEX (3941)"
	resCodeMsg[ERR_SYM_MAT_NOT_LOWER_TRINGULAR] = "MSK_RES_ERR_SYM_MAT_NOT_LOWER_TRINGULAR (3942)"
	resCodeMsg[ERR_SYM_MAT_INVALID_VALUE] = "MSK_RES_ERR_SYM_MAT_INVALID_VALUE (3943)"
	resCodeMsg[ERR_SYM_MAT_DUPLICATE] = "MSK_RES_ERR_SYM_MAT_DUPLICATE (3944)"
	resCodeMsg[ERR_INVALID_SYM_MAT_DIM] = "MSK_RES_ERR_INVALID_SYM_MAT_DIM (3950)"
	resCodeMsg[ERR_API_INTERNAL] = "MSK_RES_ERR_API_INTERNAL (3999)"
	resCodeMsg[ERR_INVALID_FILE_FORMAT_FOR_SYM_MAT] = "MSK_RES_ERR_INVALID_FILE_FORMAT_FOR_SYM_MAT (4000)"
	resCodeMsg[ERR_INVALID_FILE_FORMAT_FOR_CFIX] = "MSK_RES_ERR_INVALID_FILE_FORMAT_FOR_CFIX (4001)"
	resCodeMsg[ERR_INVALID_FILE_FORMAT_FOR_RANGED_CONSTRAINTS] = "MSK_RES_ERR_INVALID_FILE_FORMAT_FOR_RANGED_CONSTRAINTS (4002)"
	resCodeMsg[ERR_INVALID_FILE_FORMAT_FOR_FREE_CONSTRAINTS] = "MSK_RES_ERR_INVALID_FILE_FORMAT_FOR_FREE_CONSTRAINTS (4003)"
	resCodeMsg[ERR_INVALID_FILE_FORMAT_FOR_CONES] = "MSK_RES_ERR_INVALID_FILE_FORMAT_FOR_CONES (4005)"
	resCodeMsg[ERR_INVALID_FILE_FORMAT_FOR_QUADRATIC_TERMS] = "MSK_RES_ERR_INVALID_FILE_FORMAT_FOR_QUADRATIC_TERMS (4006)"
	resCodeMsg[ERR_INVALID_FILE_FORMAT_FOR_NONLINEAR] = "MSK_RES_ERR_INVALID_FILE_FORMAT_FOR_NONLINEAR (4010)"
	resCodeMsg[ERR_INVALID_FILE_FORMAT_FOR_DISJUNCTIVE_CONSTRAINTS] = "MSK_RES_ERR_INVALID_FILE_FORMAT_FOR_DISJUNCTIVE_CONSTRAINTS (4011)"
	resCodeMsg[ERR_INVALID_FILE_FORMAT_FOR_AFFINE_CONIC_CONSTRAINTS] = "MSK_RES_ERR_INVALID_FILE_FORMAT_FOR_AFFINE_CONIC_CONSTRAINTS (4012)"
	resCodeMsg[ERR_DUPLICATE_CONSTRAINT_NAMES] = "MSK_RES_ERR_DUPLICATE_CONSTRAINT_NAMES (4500)"
	resCodeMsg[ERR_DUPLICATE_VARIABLE_NAMES] = "MSK_RES_ERR_DUPLICATE_VARIABLE_NAMES (4501)"
	resCodeMsg[ERR_DUPLICATE_BARVARIABLE_NAMES] = "MSK_RES_ERR_DUPLICATE_BARVARIABLE_NAMES (4502)"
	resCodeMsg[ERR_DUPLICATE_CONE_NAMES] = "MSK_RES_ERR_DUPLICATE_CONE_NAMES (4503)"
	resCodeMsg[ERR_DUPLICATE_DOMAIN_NAMES] = "MSK_RES_ERR_DUPLICATE_DOMAIN_NAMES (4504)"
	resCodeMsg[ERR_DUPLICATE_DJC_NAMES] = "MSK_RES_ERR_DUPLICATE_DJC_NAMES (4505)"
	resCodeMsg[ERR_NON_UNIQUE_ARRAY] = "MSK_RES_ERR_NON_UNIQUE_ARRAY (5000)"
	resCodeMsg[ERR_ARGUMENT_IS_TOO_SMALL] = "MSK_RES_ERR_ARGUMENT_IS_TOO_SMALL (5004)"
	resCodeMsg[ERR_ARGUMENT_IS_TOO_LARGE] = "MSK_RES_ERR_ARGUMENT_IS_TOO_LARGE (5005)"
	resCodeMsg[ERR_MIO_INTERNAL] = "MSK_RES_ERR_MIO_INTERNAL (5010)"
	resCodeMsg[ERR_INVALID_PROBLEM_TYPE] = "MSK_RES_ERR_INVALID_PROBLEM_TYPE (6000)"
	resCodeMsg[ERR_UNHANDLED_SOLUTION_STATUS] = "MSK_RES_ERR_UNHANDLED_SOLUTION_STATUS (6010)"
	resCodeMsg[ERR_UPPER_TRIANGLE] = "MSK_RES_ERR_UPPER_TRIANGLE (6020)"
	resCodeMsg[ERR_LAU_SINGULAR_MATRIX] = "MSK_RES_ERR_LAU_SINGULAR_MATRIX (7000)"
	resCodeMsg[ERR_LAU_NOT_POSITIVE_DEFINITE] = "MSK_RES_ERR_LAU_NOT_POSITIVE_DEFINITE (7001)"
	resCodeMsg[ERR_LAU_INVALID_LOWER_TRIANGULAR_MATRIX] = "MSK_RES_ERR_LAU_INVALID_LOWER_TRIANGULAR_MATRIX (7002)"
	resCodeMsg[ERR_LAU_UNKNOWN] = "MSK_RES_ERR_LAU_UNKNOWN (7005)"
	resCodeMsg[ERR_LAU_ARG_M] = "MSK_RES_ERR_LAU_ARG_M (7010)"
	resCodeMsg[ERR_LAU_ARG_N] = "MSK_RES_ERR_LAU_ARG_N (7011)"
	resCodeMsg[ERR_LAU_ARG_K] = "MSK_RES_ERR_LAU_ARG_K (7012)"
	resCodeMsg[ERR_LAU_ARG_TRANSA] = "MSK_RES_ERR_LAU_ARG_TRANSA (7015)"
	resCodeMsg[ERR_LAU_ARG_TRANSB] = "MSK_RES_ERR_LAU_ARG_TRANSB (7016)"
	resCodeMsg[ERR_LAU_ARG_UPLO] = "MSK_RES_ERR_LAU_ARG_UPLO (7017)"
	resCodeMsg[ERR_LAU_ARG_TRANS] = "MSK_RES_ERR_LAU_ARG_TRANS (7018)"
	resCodeMsg[ERR_LAU_INVALID_SPARSE_SYMMETRIC_MATRIX] = "MSK_RES_ERR_LAU_INVALID_SPARSE_SYMMETRIC_MATRIX (7019)"
	resCodeMsg[ERR_CBF_PARSE] = "MSK_RES_ERR_CBF_PARSE (7100)"
	resCodeMsg[ERR_CBF_OBJ_SENSE] = "MSK_RES_ERR_CBF_OBJ_SENSE (7101)"
	resCodeMsg[ERR_CBF_NO_VARIABLES] = "MSK_RES_ERR_CBF_NO_VARIABLES (7102)"
	resCodeMsg[ERR_CBF_TOO_MANY_CONSTRAINTS] = "MSK_RES_ERR_CBF_TOO_MANY_CONSTRAINTS (7103)"
	resCodeMsg[ERR_CBF_TOO_MANY_VARIABLES] = "MSK_RES_ERR_CBF_TOO_MANY_VARIABLES (7104)"
	resCodeMsg[ERR_CBF_NO_VERSION_SPECIFIED] = "MSK_RES_ERR_CBF_NO_VERSION_SPECIFIED (7105)"
	resCodeMsg[ERR_CBF_SYNTAX] = "MSK_RES_ERR_CBF_SYNTAX (7106)"
	resCodeMsg[ERR_CBF_DUPLICATE_OBJ] = "MSK_RES_ERR_CBF_DUPLICATE_OBJ (7107)"
	resCodeMsg[ERR_CBF_DUPLICATE_CON] = "MSK_RES_ERR_CBF_DUPLICATE_CON (7108)"
	resCodeMsg[ERR_CBF_DUPLICATE_VAR] = "MSK_RES_ERR_CBF_DUPLICATE_VAR (7110)"
	resCodeMsg[ERR_CBF_DUPLICATE_INT] = "MSK_RES_ERR_CBF_DUPLICATE_INT (7111)"
	resCodeMsg[ERR_CBF_INVALID_VAR_TYPE] = "MSK_RES_ERR_CBF_INVALID_VAR_TYPE (7112)"
	resCodeMsg[ERR_CBF_INVALID_CON_TYPE] = "MSK_RES_ERR_CBF_INVALID_CON_TYPE (7113)"
	resCodeMsg[ERR_CBF_INVALID_DOMAIN_DIMENSION] = "MSK_RES_ERR_CBF_INVALID_DOMAIN_DIMENSION (7114)"
	resCodeMsg[ERR_CBF_DUPLICATE_OBJACOORD] = "MSK_RES_ERR_CBF_DUPLICATE_OBJACOORD (7115)"
	resCodeMsg[ERR_CBF_DUPLICATE_BCOORD] = "MSK_RES_ERR_CBF_DUPLICATE_BCOORD (7116)"
	resCodeMsg[ERR_CBF_DUPLICATE_ACOORD] = "MSK_RES_ERR_CBF_DUPLICATE_ACOORD (7117)"
	resCodeMsg[ERR_CBF_TOO_FEW_VARIABLES] = "MSK_RES_ERR_CBF_TOO_FEW_VARIABLES (7118)"
	resCodeMsg[ERR_CBF_TOO_FEW_CONSTRAINTS] = "MSK_RES_ERR_CBF_TOO_FEW_CONSTRAINTS (7119)"
	resCodeMsg[ERR_CBF_TOO_FEW_INTS] = "MSK_RES_ERR_CBF_TOO_FEW_INTS (7120)"
	resCodeMsg[ERR_CBF_TOO_MANY_INTS] = "MSK_RES_ERR_CBF_TOO_MANY_INTS (7121)"
	resCodeMsg[ERR_CBF_INVALID_INT_INDEX] = "MSK_RES_ERR_CBF_INVALID_INT_INDEX (7122)"
	resCodeMsg[ERR_CBF_UNSUPPORTED] = "MSK_RES_ERR_CBF_UNSUPPORTED (7123)"
	resCodeMsg[ERR_CBF_DUPLICATE_PSDVAR] = "MSK_RES_ERR_CBF_DUPLICATE_PSDVAR (7124)"
	resCodeMsg[ERR_CBF_INVALID_PSDVAR_DIMENSION] = "MSK_RES_ERR_CBF_INVALID_PSDVAR_DIMENSION (7125)"
	resCodeMsg[ERR_CBF_TOO_FEW_PSDVAR] = "MSK_RES_ERR_CBF_TOO_FEW_PSDVAR (7126)"
	resCodeMsg[ERR_CBF_INVALID_EXP_DIMENSION] = "MSK_RES_ERR_CBF_INVALID_EXP_DIMENSION (7127)"
	resCodeMsg[ERR_CBF_DUPLICATE_POW_CONES] = "MSK_RES_ERR_CBF_DUPLICATE_POW_CONES (7130)"
	resCodeMsg[ERR_CBF_DUPLICATE_POW_STAR_CONES] = "MSK_RES_ERR_CBF_DUPLICATE_POW_STAR_CONES (7131)"
	resCodeMsg[ERR_CBF_INVALID_POWER] = "MSK_RES_ERR_CBF_INVALID_POWER (7132)"
	resCodeMsg[ERR_CBF_POWER_CONE_IS_TOO_LONG] = "MSK_RES_ERR_CBF_POWER_CONE_IS_TOO_LONG (7133)"
	resCodeMsg[ERR_CBF_INVALID_POWER_CONE_INDEX] = "MSK_RES_ERR_CBF_INVALID_POWER_CONE_INDEX (7134)"
	resCodeMsg[ERR_CBF_INVALID_POWER_STAR_CONE_INDEX] = "MSK_RES_ERR_CBF_INVALID_POWER_STAR_CONE_INDEX (7135)"
	resCodeMsg[ERR_CBF_UNHANDLED_POWER_CONE_TYPE] = "MSK_RES_ERR_CBF_UNHANDLED_POWER_CONE_TYPE (7136)"
	resCodeMsg[ERR_CBF_UNHANDLED_POWER_STAR_CONE_TYPE] = "MSK_RES_ERR_CBF_UNHANDLED_POWER_STAR_CONE_TYPE (7137)"
	resCodeMsg[ERR_CBF_POWER_CONE_MISMATCH] = "MSK_RES_ERR_CBF_POWER_CONE_MISMATCH (7138)"
	resCodeMsg[ERR_CBF_POWER_STAR_CONE_MISMATCH] = "MSK_RES_ERR_CBF_POWER_STAR_CONE_MISMATCH (7139)"
	resCodeMsg[ERR_CBF_INVALID_NUMBER_OF_CONES] = "MSK_RES_ERR_CBF_INVALID_NUMBER_OF_CONES (7140)"
	resCodeMsg[ERR_CBF_INVALID_DIMENSION_OF_CONES] = "MSK_RES_ERR_CBF_INVALID_DIMENSION_OF_CONES (7141)"
	resCodeMsg[ERR_CBF_INVALID_NUM_PSDCON] = "MSK_RES_ERR_CBF_INVALID_NUM_PSDCON (7200)"
	resCodeMsg[ERR_CBF_DUPLICATE_PSDCON] = "MSK_RES_ERR_CBF_DUPLICATE_PSDCON (7201)"
	resCodeMsg[ERR_CBF_INVALID_DIMENSION_OF_PSDCON] = "MSK_RES_ERR_CBF_INVALID_DIMENSION_OF_PSDCON (7202)"
	resCodeMsg[ERR_CBF_INVALID_PSDCON_INDEX] = "MSK_RES_ERR_CBF_INVALID_PSDCON_INDEX (7203)"
	resCodeMsg[ERR_CBF_INVALID_PSDCON_VARIABLE_INDEX] = "MSK_RES_ERR_CBF_INVALID_PSDCON_VARIABLE_INDEX (7204)"
	resCodeMsg[ERR_CBF_INVALID_PSDCON_BLOCK_INDEX] = "MSK_RES_ERR_CBF_INVALID_PSDCON_BLOCK_INDEX (7205)"
	resCodeMsg[ERR_CBF_UNSUPPORTED_CHANGE] = "MSK_RES_ERR_CBF_UNSUPPORTED_CHANGE (7210)"
	resCodeMsg[ERR_MIO_INVALID_ROOT_OPTIMIZER] = "MSK_RES_ERR_MIO_INVALID_ROOT_OPTIMIZER (7700)"
	resCodeMsg[ERR_MIO_INVALID_NODE_OPTIMIZER] = "MSK_RES_ERR_MIO_INVALID_NODE_OPTIMIZER (7701)"
	resCodeMsg[ERR_MPS_WRITE_CPLEX_INVALID_CONE_TYPE] = "MSK_RES_ERR_MPS_WRITE_CPLEX_INVALID_CONE_TYPE (7750)"
	resCodeMsg[ERR_TOCONIC_CONSTR_Q_NOT_PSD] = "MSK_RES_ERR_TOCONIC_CONSTR_Q_NOT_PSD (7800)"
	resCodeMsg[ERR_TOCONIC_CONSTRAINT_FX] = "MSK_RES_ERR_TOCONIC_CONSTRAINT_FX (7801)"
	resCodeMsg[ERR_TOCONIC_CONSTRAINT_RA] = "MSK_RES_ERR_TOCONIC_CONSTRAINT_RA (7802)"
	resCodeMsg[ERR_TOCONIC_CONSTR_NOT_CONIC] = "MSK_RES_ERR_TOCONIC_CONSTR_NOT_CONIC (7803)"
	resCodeMsg[ERR_TOCONIC_OBJECTIVE_NOT_PSD] = "MSK_RES_ERR_TOCONIC_OBJECTIVE_NOT_PSD (7804)"
	resCodeMsg[ERR_SERVER_CONNECT] = "MSK_RES_ERR_SERVER_CONNECT (8000)"
	resCodeMsg[ERR_SERVER_PROTOCOL] = "MSK_RES_ERR_SERVER_PROTOCOL (8001)"
	resCodeMsg[ERR_SERVER_STATUS] = "MSK_RES_ERR_SERVER_STATUS (8002)"
	resCodeMsg[ERR_SERVER_TOKEN] = "MSK_RES_ERR_SERVER_TOKEN (8003)"
	resCodeMsg[ERR_SERVER_ADDRESS] = "MSK_RES_ERR_SERVER_ADDRESS (8004)"
	resCodeMsg[ERR_SERVER_CERTIFICATE] = "MSK_RES_ERR_SERVER_CERTIFICATE (8005)"
	resCodeMsg[ERR_SERVER_TLS_CLIENT] = "MSK_RES_ERR_SERVER_TLS_CLIENT (8006)"
	resCodeMsg[ERR_SERVER_ACCESS_TOKEN] = "MSK_RES_ERR_SERVER_ACCESS_TOKEN (8007)"
	resCodeMsg[ERR_SERVER_PROBLEM_SIZE] = "MSK_RES_ERR_SERVER_PROBLEM_SIZE (8008)"
	resCodeMsg[ERR_DUPLICATE_FIJ] = "MSK_RES_ERR_DUPLICATE_FIJ (20100)"
	resCodeMsg[ERR_INVALID_FIJ] = "MSK_RES_ERR_INVALID_FIJ (20101)"
	resCodeMsg[ERR_HUGE_FIJ] = "MSK_RES_ERR_HUGE_FIJ (20102)"
	resCodeMsg[ERR_INVALID_G] = "MSK_RES_ERR_INVALID_G (20103)"
	resCodeMsg[ERR_INVALID_B] = "MSK_RES_ERR_INVALID_B (20150)"
	resCodeMsg[ERR_DOMAIN_INVALID_INDEX] = "MSK_RES_ERR_DOMAIN_INVALID_INDEX (20400)"
	resCodeMsg[ERR_DOMAIN_DIMENSION] = "MSK_RES_ERR_DOMAIN_DIMENSION (20401)"
	resCodeMsg[ERR_DOMAIN_DIMENSION_PSD] = "MSK_RES_ERR_DOMAIN_DIMENSION_PSD (20402)"
	resCodeMsg[ERR_NOT_POWER_DOMAIN] = "MSK_RES_ERR_NOT_POWER_DOMAIN (20403)"
	resCodeMsg[ERR_DOMAIN_POWER_INVALID_ALPHA] = "MSK_RES_ERR_DOMAIN_POWER_INVALID_ALPHA (20404)"
	resCodeMsg[ERR_DOMAIN_POWER_NEGATIVE_ALPHA] = "MSK_RES_ERR_DOMAIN_POWER_NEGATIVE_ALPHA (20405)"
	resCodeMsg[ERR_DOMAIN_POWER_NLEFT] = "MSK_RES_ERR_DOMAIN_POWER_NLEFT (20406)"
	resCodeMsg[ERR_AFE_INVALID_INDEX] = "MSK_RES_ERR_AFE_INVALID_INDEX (20500)"
	resCodeMsg[ERR_ACC_INVALID_INDEX] = "MSK_RES_ERR_ACC_INVALID_INDEX (20600)"
	resCodeMsg[ERR_ACC_INVALID_ENTRY_INDEX] = "MSK_RES_ERR_ACC_INVALID_ENTRY_INDEX (20601)"
	resCodeMsg[ERR_ACC_AFE_DOMAIN_MISMATCH] = "MSK_RES_ERR_ACC_AFE_DOMAIN_MISMATCH (20602)"
	resCodeMsg[ERR_DJC_INVALID_INDEX] = "MSK_RES_ERR_DJC_INVALID_INDEX (20700)"
	resCodeMsg[ERR_DJC_UNSUPPORTED_DOMAIN_TYPE] = "MSK_RES_ERR_DJC_UNSUPPORTED_DOMAIN_TYPE (20701)"
	resCodeMsg[ERR_DJC_AFE_DOMAIN_MISMATCH] = "MSK_RES_ERR_DJC_AFE_DOMAIN_MISMATCH (20702)"
	resCodeMsg[ERR_DJC_INVALID_TERM_SIZE] = "MSK_RES_ERR_DJC_INVALID_TERM_SIZE (20703)"
	resCodeMsg[ERR_DJC_DOMAIN_TERMSIZE_MISMATCH] = "MSK_RES_ERR_DJC_DOMAIN_TERMSIZE_MISMATCH (20704)"
	resCodeMsg[ERR_DJC_TOTAL_NUM_TERMS_MISMATCH] = "MSK_RES_ERR_DJC_TOTAL_NUM_TERMS_MISMATCH (20705)"
	resCodeMsg[ERR_UNDEF_SOLUTION] = "MSK_RES_ERR_UNDEF_SOLUTION (22000)"
	resCodeMsg[ERR_NO_DOTY] = "MSK_RES_ERR_NO_DOTY (22010)"
	resCodeMsg[TRM_MAX_ITERATIONS] = "MSK_RES_TRM_MAX_ITERATIONS (100000)"
	resCodeMsg[TRM_MAX_TIME] = "MSK_RES_TRM_MAX_TIME (100001)"
	resCodeMsg[TRM_OBJECTIVE_RANGE] = "MSK_RES_TRM_OBJECTIVE_RANGE (100002)"
	resCodeMsg[TRM_STALL] = "MSK_RES_TRM_STALL (100006)"
	resCodeMsg[TRM_USER_CALLBACK] = "MSK_RES_TRM_USER_CALLBACK (100007)"
	resCodeMsg[TRM_MIO_NUM_RELAXS] = "MSK_RES_TRM_MIO_NUM_RELAXS (100008)"
	resCodeMsg[TRM_MIO_NUM_BRANCHES] = "MSK_RES_TRM_MIO_NUM_BRANCHES (100009)"
	resCodeMsg[TRM_NUM_MAX_NUM_INT_SOLUTIONS] = "MSK_RES_TRM_NUM_MAX_NUM_INT_SOLUTIONS (100015)"
	resCodeMsg[TRM_MAX_NUM_SETBACKS] = "MSK_RES_TRM_MAX_NUM_SETBACKS (100020)"
	resCodeMsg[TRM_NUMERICAL_PROBLEM] = "MSK_RES_TRM_NUMERICAL_PROBLEM (100025)"
	resCodeMsg[TRM_LOST_RACE] = "MSK_RES_TRM_LOST_RACE (100027)"
	resCodeMsg[TRM_INTERNAL] = "MSK_RES_TRM_INTERNAL (100030)"
	resCodeMsg[TRM_INTERNAL_STOP] = "MSK_RES_TRM_INTERNAL_STOP (100031)"
}
