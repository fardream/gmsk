// Automatically generated by github.com/fardream/gen-gmsk
// function deinitions

package gmsk

// #include <stdlib.h> // for C.free
// #include <mosek.h>
import "C"

import (
	"unsafe"

	"github.com/fardream/gmsk/res"
)

// GetAccName is wrapping [MSK_getaccname]
//
// [MSK_getaccname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - accidx: MSKint64t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getaccname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getaccname
func (task *Task) GetAccName(
	accidx int64,
	sizename int32,
) (r res.Code, name string) {
	c_name := (*C.char)(C.calloc(MAX_STR_LEN+1, 1))
	defer C.free(unsafe.Pointer(c_name))

	r = res.Code(
		C.MSK_getaccname(
			task.task,
			C.MSKint64t(accidx),
			C.MSKint32t(sizename),
			c_name,
		),
	)

	if r.IsOk() {
		name = C.GoString(c_name)
	}

	return
}

// GetAccNameLen is wrapping [MSK_getaccnamelen]
//
// [MSK_getaccnamelen] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - accidx: MSKint64t
//   - len: MSKint32t *
//
// [MSK_getaccnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getaccnamelen
func (task *Task) GetAccNameLen(
	accidx int64,
) (r res.Code, len int32) {
	r = res.Code(
		C.MSK_getaccnamelen(
			task.task,
			C.MSKint64t(accidx),
			(*C.MSKint32t)(&len),
		),
	)

	return
}

// GetBarvarName is wrapping [MSK_getbarvarname]
//
// [MSK_getbarvarname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getbarvarname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getbarvarname
func (task *Task) GetBarvarName(
	i int32,
	sizename int32,
) (r res.Code, name string) {
	c_name := (*C.char)(C.calloc(MAX_STR_LEN+1, 1))
	defer C.free(unsafe.Pointer(c_name))

	r = res.Code(
		C.MSK_getbarvarname(
			task.task,
			C.MSKint32t(i),
			C.MSKint32t(sizename),
			c_name,
		),
	)

	if r.IsOk() {
		name = C.GoString(c_name)
	}

	return
}

// GetBarvarNameLen is wrapping [MSK_getbarvarnamelen]
//
// [MSK_getbarvarnamelen] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - len: MSKint32t *
//
// [MSK_getbarvarnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getbarvarnamelen
func (task *Task) GetBarvarNameLen(
	i int32,
) (r res.Code, len int32) {
	r = res.Code(
		C.MSK_getbarvarnamelen(
			task.task,
			C.MSKint32t(i),
			(*C.MSKint32t)(&len),
		),
	)

	return
}

// GetConeName is wrapping [MSK_getconename]
//
// [MSK_getconename] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - sizename: MSKint32t
//   - name: char *
//
// Deprecated: [MSK_getconename]/GetConeName is deprecated by mosek and will be removed in a future release.
//
// [MSK_getconename]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getconename
func (task *Task) GetConeName(
	i int32,
	sizename int32,
) (r res.Code, name string) {
	c_name := (*C.char)(C.calloc(MAX_STR_LEN+1, 1))
	defer C.free(unsafe.Pointer(c_name))

	r = res.Code(
		C.MSK_getconename(
			task.task,
			C.MSKint32t(i),
			C.MSKint32t(sizename),
			c_name,
		),
	)

	if r.IsOk() {
		name = C.GoString(c_name)
	}

	return
}

// GetConeNameLen is wrapping [MSK_getconenamelen]
//
// [MSK_getconenamelen] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - len: MSKint32t *
//
// Deprecated: [MSK_getconenamelen]/GetConeNameLen is deprecated by mosek and will be removed in a future release.
//
// [MSK_getconenamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getconenamelen
func (task *Task) GetConeNameLen(
	i int32,
) (r res.Code, len int32) {
	r = res.Code(
		C.MSK_getconenamelen(
			task.task,
			C.MSKint32t(i),
			(*C.MSKint32t)(&len),
		),
	)

	return
}

// GetConName is wrapping [MSK_getconname]
//
// [MSK_getconname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getconname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getconname
func (task *Task) GetConName(
	i int32,
	sizename int32,
) (r res.Code, name string) {
	c_name := (*C.char)(C.calloc(MAX_STR_LEN+1, 1))
	defer C.free(unsafe.Pointer(c_name))

	r = res.Code(
		C.MSK_getconname(
			task.task,
			C.MSKint32t(i),
			C.MSKint32t(sizename),
			c_name,
		),
	)

	if r.IsOk() {
		name = C.GoString(c_name)
	}

	return
}

// GetConNameLen is wrapping [MSK_getconnamelen]
//
// [MSK_getconnamelen] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - len: MSKint32t *
//
// [MSK_getconnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getconnamelen
func (task *Task) GetConNameLen(
	i int32,
) (r res.Code, len int32) {
	r = res.Code(
		C.MSK_getconnamelen(
			task.task,
			C.MSKint32t(i),
			(*C.MSKint32t)(&len),
		),
	)

	return
}

// GetDjcName is wrapping [MSK_getdjcname]
//
// [MSK_getdjcname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - djcidx: MSKint64t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getdjcname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getdjcname
func (task *Task) GetDjcName(
	djcidx int64,
	sizename int32,
) (r res.Code, name string) {
	c_name := (*C.char)(C.calloc(MAX_STR_LEN+1, 1))
	defer C.free(unsafe.Pointer(c_name))

	r = res.Code(
		C.MSK_getdjcname(
			task.task,
			C.MSKint64t(djcidx),
			C.MSKint32t(sizename),
			c_name,
		),
	)

	if r.IsOk() {
		name = C.GoString(c_name)
	}

	return
}

// GetDjcNameLen is wrapping [MSK_getdjcnamelen]
//
// [MSK_getdjcnamelen] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - djcidx: MSKint64t
//   - len: MSKint32t *
//
// [MSK_getdjcnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getdjcnamelen
func (task *Task) GetDjcNameLen(
	djcidx int64,
) (r res.Code, len int32) {
	r = res.Code(
		C.MSK_getdjcnamelen(
			task.task,
			C.MSKint64t(djcidx),
			(*C.MSKint32t)(&len),
		),
	)

	return
}

// GetDomainName is wrapping [MSK_getdomainname]
//
// [MSK_getdomainname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - domidx: MSKint64t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getdomainname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getdomainname
func (task *Task) GetDomainName(
	domidx int64,
	sizename int32,
) (r res.Code, name string) {
	c_name := (*C.char)(C.calloc(MAX_STR_LEN+1, 1))
	defer C.free(unsafe.Pointer(c_name))

	r = res.Code(
		C.MSK_getdomainname(
			task.task,
			C.MSKint64t(domidx),
			C.MSKint32t(sizename),
			c_name,
		),
	)

	if r.IsOk() {
		name = C.GoString(c_name)
	}

	return
}

// GetDomainNameLen is wrapping [MSK_getdomainnamelen]
//
// [MSK_getdomainnamelen] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - domidx: MSKint64t
//   - len: MSKint32t *
//
// [MSK_getdomainnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getdomainnamelen
func (task *Task) GetDomainNameLen(
	domidx int64,
) (r res.Code, len int32) {
	r = res.Code(
		C.MSK_getdomainnamelen(
			task.task,
			C.MSKint64t(domidx),
			(*C.MSKint32t)(&len),
		),
	)

	return
}

// GetInfName is wrapping [MSK_getinfname]
//
// [MSK_getinfname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - inftype: MSKinftypee
//   - whichinf: MSKint32t
//   - infname: char *
//
// [MSK_getinfname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getinfname
func (task *Task) GetInfName(
	inftype InfType,
	whichinf int32,
) (r res.Code, infname string) {
	c_infname := (*C.char)(C.calloc(MAX_STR_LEN+1, 1))
	defer C.free(unsafe.Pointer(c_infname))

	r = res.Code(
		C.MSK_getinfname(
			task.task,
			C.MSKinftypee(inftype),
			C.MSKint32t(whichinf),
			c_infname,
		),
	)

	if r.IsOk() {
		infname = C.GoString(c_infname)
	}

	return
}

// GetMaxNameLen is wrapping [MSK_getmaxnamelen]
//
// [MSK_getmaxnamelen] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - maxlen: MSKint32t *
//
// [MSK_getmaxnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getmaxnamelen
func (task *Task) GetMaxNameLen() (r res.Code, maxlen int32) {
	r = res.Code(
		C.MSK_getmaxnamelen(
			task.task,
			(*C.MSKint32t)(&maxlen),
		),
	)

	return
}

// GetObjName is wrapping [MSK_getobjname]
//
// [MSK_getobjname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - sizeobjname: MSKint32t
//   - objname: char *
//
// [MSK_getobjname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getobjname
func (task *Task) GetObjName(
	sizeobjname int32,
) (r res.Code, objname string) {
	c_objname := (*C.char)(C.calloc(MAX_STR_LEN+1, 1))
	defer C.free(unsafe.Pointer(c_objname))

	r = res.Code(
		C.MSK_getobjname(
			task.task,
			C.MSKint32t(sizeobjname),
			c_objname,
		),
	)

	if r.IsOk() {
		objname = C.GoString(c_objname)
	}

	return
}

// GetObjNameLen is wrapping [MSK_getobjnamelen]
//
// [MSK_getobjnamelen] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - len: MSKint32t *
//
// [MSK_getobjnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getobjnamelen
func (task *Task) GetObjNameLen() (r res.Code, len int32) {
	r = res.Code(
		C.MSK_getobjnamelen(
			task.task,
			(*C.MSKint32t)(&len),
		),
	)

	return
}

// GetParamName is wrapping [MSK_getparamname]
//
// [MSK_getparamname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - partype: MSKparametertypee
//   - param: MSKint32t
//   - parname: char *
//
// [MSK_getparamname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getparamname
func (task *Task) GetParamName(
	partype ParameterType,
	param int32,
) (r res.Code, parname string) {
	c_parname := (*C.char)(C.calloc(MAX_STR_LEN+1, 1))
	defer C.free(unsafe.Pointer(c_parname))

	r = res.Code(
		C.MSK_getparamname(
			task.task,
			C.MSKparametertypee(partype),
			C.MSKint32t(param),
			c_parname,
		),
	)

	if r.IsOk() {
		parname = C.GoString(c_parname)
	}

	return
}

// GetTaskName is wrapping [MSK_gettaskname]
//
// [MSK_gettaskname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - sizetaskname: MSKint32t
//   - taskname: char *
//
// [MSK_gettaskname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.gettaskname
func (task *Task) GetTaskName(
	sizetaskname int32,
) (r res.Code, taskname string) {
	c_taskname := (*C.char)(C.calloc(MAX_STR_LEN+1, 1))
	defer C.free(unsafe.Pointer(c_taskname))

	r = res.Code(
		C.MSK_gettaskname(
			task.task,
			C.MSKint32t(sizetaskname),
			c_taskname,
		),
	)

	if r.IsOk() {
		taskname = C.GoString(c_taskname)
	}

	return
}

// GetTaskNameLen is wrapping [MSK_gettasknamelen]
//
// [MSK_gettasknamelen] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - len: MSKint32t *
//
// [MSK_gettasknamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.gettasknamelen
func (task *Task) GetTaskNameLen() (r res.Code, len int32) {
	r = res.Code(
		C.MSK_gettasknamelen(
			task.task,
			(*C.MSKint32t)(&len),
		),
	)

	return
}

// GetVarName is wrapping [MSK_getvarname]
//
// [MSK_getvarname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - j: MSKint32t
//   - sizename: MSKint32t
//   - name: char *
//
// [MSK_getvarname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getvarname
func (task *Task) GetVarName(
	j int32,
	sizename int32,
) (r res.Code, name string) {
	c_name := (*C.char)(C.calloc(MAX_STR_LEN+1, 1))
	defer C.free(unsafe.Pointer(c_name))

	r = res.Code(
		C.MSK_getvarname(
			task.task,
			C.MSKint32t(j),
			C.MSKint32t(sizename),
			c_name,
		),
	)

	if r.IsOk() {
		name = C.GoString(c_name)
	}

	return
}

// GetVarNameLen is wrapping [MSK_getvarnamelen]
//
// [MSK_getvarnamelen] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - len: MSKint32t *
//
// [MSK_getvarnamelen]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.getvarnamelen
func (task *Task) GetVarNameLen(
	i int32,
) (r res.Code, len int32) {
	r = res.Code(
		C.MSK_getvarnamelen(
			task.task,
			C.MSKint32t(i),
			(*C.MSKint32t)(&len),
		),
	)

	return
}

// IsdouparName is wrapping [MSK_isdouparname]
//
// [MSK_isdouparname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - parname: const char *
//   - param: MSKdparame *
//
// [MSK_isdouparname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.isdouparname
func (task *Task) IsdouparName(
	parname string,
	param *DParam,
) res.Code {
	c_parname := C.CString(parname)
	defer C.free(unsafe.Pointer(c_parname))

	return res.Code(
		C.MSK_isdouparname(
			task.task,
			c_parname,
			(*C.MSKdparame)(param),
		),
	)
}

// IsintparName is wrapping [MSK_isintparname]
//
// [MSK_isintparname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - parname: const char *
//   - param: MSKiparame *
//
// [MSK_isintparname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.isintparname
func (task *Task) IsintparName(
	parname string,
	param *IParam,
) res.Code {
	c_parname := C.CString(parname)
	defer C.free(unsafe.Pointer(c_parname))

	return res.Code(
		C.MSK_isintparname(
			task.task,
			c_parname,
			(*C.MSKiparame)(param),
		),
	)
}

// IsstrparName is wrapping [MSK_isstrparname]
//
// [MSK_isstrparname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - parname: const char *
//   - param: MSKsparame *
//
// [MSK_isstrparname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.isstrparname
func (task *Task) IsstrparName(
	parname string,
	param *SParam,
) res.Code {
	c_parname := C.CString(parname)
	defer C.free(unsafe.Pointer(c_parname))

	return res.Code(
		C.MSK_isstrparname(
			task.task,
			c_parname,
			(*C.MSKsparame)(param),
		),
	)
}

// PutAccName is wrapping [MSK_putaccname] and
// sets a name for an affine conic constraint.
//
// [MSK_putaccname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - accidx: MSKint64t
//   - name: const char *
//
// [MSK_putaccname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.putaccname
func (task *Task) PutAccName(
	accidx int64,
	name string,
) res.Code {
	c_name := C.CString(name)
	defer C.free(unsafe.Pointer(c_name))

	return res.Code(
		C.MSK_putaccname(
			task.task,
			C.MSKint64t(accidx),
			c_name,
		),
	)
}

// PutBarvarName is wrapping [MSK_putbarvarname]
//
// [MSK_putbarvarname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - j: MSKint32t
//   - name: const char *
//
// [MSK_putbarvarname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.putbarvarname
func (task *Task) PutBarvarName(
	j int32,
	name string,
) res.Code {
	c_name := C.CString(name)
	defer C.free(unsafe.Pointer(c_name))

	return res.Code(
		C.MSK_putbarvarname(
			task.task,
			C.MSKint32t(j),
			c_name,
		),
	)
}

// PutConeName is wrapping [MSK_putconename]
//
// [MSK_putconename] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - j: MSKint32t
//   - name: const char *
//
// Deprecated: [MSK_putconename]/PutConeName is deprecated by mosek and will be removed in a future release.
//
// [MSK_putconename]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.putconename
func (task *Task) PutConeName(
	j int32,
	name string,
) res.Code {
	c_name := C.CString(name)
	defer C.free(unsafe.Pointer(c_name))

	return res.Code(
		C.MSK_putconename(
			task.task,
			C.MSKint32t(j),
			c_name,
		),
	)
}

// PutConName is wrapping [MSK_putconname] and
// sets a name for a constraint at indext i.
//
// [MSK_putconname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - i: MSKint32t
//   - name: const char *
//
// [MSK_putconname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.putconname
func (task *Task) PutConName(
	i int32,
	name string,
) res.Code {
	c_name := C.CString(name)
	defer C.free(unsafe.Pointer(c_name))

	return res.Code(
		C.MSK_putconname(
			task.task,
			C.MSKint32t(i),
			c_name,
		),
	)
}

// PutDjcName is wrapping [MSK_putdjcname]
//
// [MSK_putdjcname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - djcidx: MSKint64t
//   - name: const char *
//
// [MSK_putdjcname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.putdjcname
func (task *Task) PutDjcName(
	djcidx int64,
	name string,
) res.Code {
	c_name := C.CString(name)
	defer C.free(unsafe.Pointer(c_name))

	return res.Code(
		C.MSK_putdjcname(
			task.task,
			C.MSKint64t(djcidx),
			c_name,
		),
	)
}

// PutDomainName is wrapping [MSK_putdomainname]
//
// [MSK_putdomainname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - domidx: MSKint64t
//   - name: const char *
//
// [MSK_putdomainname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.putdomainname
func (task *Task) PutDomainName(
	domidx int64,
	name string,
) res.Code {
	c_name := C.CString(name)
	defer C.free(unsafe.Pointer(c_name))

	return res.Code(
		C.MSK_putdomainname(
			task.task,
			C.MSKint64t(domidx),
			c_name,
		),
	)
}

// PutObjName is wrapping [MSK_putobjname]
//
// [MSK_putobjname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - objname: const char *
//
// [MSK_putobjname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.putobjname
func (task *Task) PutObjName(
	objname string,
) res.Code {
	c_objname := C.CString(objname)
	defer C.free(unsafe.Pointer(c_objname))

	return res.Code(
		C.MSK_putobjname(
			task.task,
			c_objname,
		),
	)
}

// PutTaskName is wrapping [MSK_puttaskname]
//
// [MSK_puttaskname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - taskname: const char *
//
// [MSK_puttaskname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.puttaskname
func (task *Task) PutTaskName(
	taskname string,
) res.Code {
	c_taskname := C.CString(taskname)
	defer C.free(unsafe.Pointer(c_taskname))

	return res.Code(
		C.MSK_puttaskname(
			task.task,
			c_taskname,
		),
	)
}

// PutVarName is wrapping [MSK_putvarname] and
// sets a name for variable at j.
//
// [MSK_putvarname] returns MSKrescodee and has following parameters
//   - task: MSKtask_t
//   - j: MSKint32t
//   - name: const char *
//
// [MSK_putvarname]: https://docs.mosek.com/latest/capi/alphabetic-functionalities.html#mosek.task.putvarname
func (task *Task) PutVarName(
	j int32,
	name string,
) res.Code {
	c_name := C.CString(name)
	defer C.free(unsafe.Pointer(c_name))

	return res.Code(
		C.MSK_putvarname(
			task.task,
			C.MSKint32t(j),
			c_name,
		),
	)
}
